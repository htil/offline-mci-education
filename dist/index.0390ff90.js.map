{"mappings":"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","sources":["src/js/customblock.js"],"sourcesContent":["// Block creation tool https://blockly-demo.appspot.com/static/demos/blockfactory/index.html\n\nvar createCustomBlocks = function () {\n\n  /* Get Filter */\n  var filterData = {\n    \"type\": \"filter_signal\",\n    \"message0\": \"filter between %1 and  %2 %3\",\n    \"args0\": [\n      {\n        \"type\": \"field_input\",\n        \"name\": \"low\",\n        \"text\": \"0\"\n      },\n      {\n        \"type\": \"field_input\",\n        \"name\": \"high\",\n        \"text\": \"30\"\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"signal\"\n      }\n    ],\n    \"output\": null,\n    \"colour\": 230,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n  }\n\n  Blockly.Blocks[\"filter_signal\"] = {\n    init: function () {\n      this.jsonInit(filterData);\n    },\n  };\n\n  Blockly.JavaScript['filter_signal'] = function(block) {\n    var text_low = block.getFieldValue('low');\n    var text_high = block.getFieldValue('high');\n    var value_signal = Blockly.JavaScript.valueToCode(block, 'signal', Blockly.JavaScript.ORDER_ATOMIC);\n    //console.log(text_low, text_high, value_signal)\n    // TODO: Assemble JavaScript into code variable.\n    var code = `filterSignal(${value_signal}, ${text_low}, ${text_high})`;\n    // TODO: Change ORDER_NONE to the correct strength.\n    return [code, Blockly.JavaScript.ORDER_NONE];\n  };\n\n  \n\n\n  //////////////////////////////////////////////////////////////////\n\n  /* Get Absolute Values */\n\n  var getAbsoluteData = {\n    type: \"getabsdata\",\n    message0: \"Get Absolute Values %1\",\n    args0: [\n      {\n        type: \"input_value\",\n        name: \"LIST\",\n      },\n    ],\n    output: null,\n    colour: 330,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"getabsdata\"] = {\n    init: function () {\n      this.jsonInit(getAbsoluteData);\n    },\n  };\n\n  Blockly.JavaScript[\"getabsdata\"] = function (block) {\n    var list = Blockly.JavaScript.valueToCode(\n      block,\n      \"LIST\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n\n    var code = `getAbsVals(${list})`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  //////////////////////////////////////////////////////////////////\n\n  /* Remove Mean */\n\n  var removeSignalMean = {\n    type: \"removeSignalMean\",\n    message0: \"Remove Mean %1\",\n    args0: [\n      {\n        type: \"input_value\",\n        name: \"LIST\",\n      },\n    ],\n    output: null,\n    colour: 330,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"removeSignalMean\"] = {\n    init: function () {\n      this.jsonInit(removeSignalMean);\n    },\n  };\n\n  Blockly.JavaScript[\"removeSignalMean\"] = function (block) {\n    var list = Blockly.JavaScript.valueToCode(\n      block,\n      \"LIST\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n\n    var code = `removeMean(${list})`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  //////////////////////////////////////////////////////////////////\n\n  /* Get Raw Data*/\n  var getRawData = {\n    type: \"getRaw\",\n    message0: \"Get Signal \",\n    output: null,\n    colour: 330,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"getRaw\"] = {\n    init: function () {\n      this.jsonInit(getRawData);\n    },\n  };\n\n  Blockly.JavaScript[\"getRaw\"] = function (block) {\n    var code = `getRawData()`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  //////////////////////////////////////////////////////////////////\n\n  /* plot raw */\n  var plotRaw = {\n    type: \"plot_raw\",\n    message0: \"Plot Signal %1 # of Samples %2\",\n    inputsInline: false,\n    args0: [\n      { type: \"input_value\", name: \"LIST\" },\n      {\n        type: \"input_value\",\n        name: \"SECONDS\",\n        check: \"Number\",\n      },\n    ],\n    colour: 330,\n    previousStatement: null,\n    nextStatement: null,\n  };\n\n  Blockly.Blocks[\"plot_raw\"] = {\n    init: function () {\n      this.jsonInit(plotRaw);\n    },\n  };\n\n  Blockly.JavaScript[\"plot_raw\"] = function (block) {\n    //var seconds = block.getFieldValue(\"SECONDS\");\n    var list = Blockly.JavaScript.valueToCode(\n      block,\n      \"LIST\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n\n    var seconds = Blockly.JavaScript.valueToCode(\n      block,\n      \"SECONDS\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n\n    seconds = seconds ? seconds : 0;\n\n    return `plotRaw(${list}, ${seconds})\\n`;\n  };\n\n  //////////////////////////////////////////////////////////////////\n\n  /* pan() */\n  var panBy = {\n    message0: \"pan to %1\",\n    args0: [{ type: \"input_value\", name: \"ANGLE\", check: \"Number\" }],\n    previousStatement: null,\n    nextStatement: null,\n    colour: 355,\n  };\n\n  Blockly.Blocks[\"pan_by\"] = {\n    init: function () {\n      this.jsonInit(panBy);\n    },\n  };\n\n  Blockly.JavaScript[\"pan_by\"] = function (block) {\n    var angle = Blockly.JavaScript.valueToCode(\n      block,\n      \"ANGLE\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n    angle = angle > 1.5 ? 1.5 : angle;\n    angle = angle < -1.5 ? -1.5 : angle;\n    code = `pan(${angle})`;\n    return code;\n  };\n\n  //////////////////////////////////////////////////////////////////\n\n  /* Print */\n  var print = {\n    message0: \"print %1\",\n    args0: [{ type: \"input_value\", name: \"MSG\", check: \"Number\" }],\n    previousStatement: \"String\",\n    nextStatement: null,\n    colour: \"%{BKY_LOGIC_HUE}\",\n  };\n\n  Blockly.Blocks[\"print\"] = {\n    init: function () {\n      this.jsonInit(print);\n    },\n  };\n\n  Blockly.JavaScript[\"print\"] = function (block) {\n    var msg = Blockly.JavaScript.valueToCode(\n      block,\n      \"MSG\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n    return `print(${msg});\\n`;\n  };\n\n  //////////////////////////////////////////////////////////////////\n\n  /******** setVelocityX *****/\n  var setVelocityX = {\n    message0: \"setVelocityX %1\",\n    args0: [{ type: \"input_value\", name: \"velocityX\", check: \"Number\" }],\n    previousStatement: \"Number\",\n    nextStatement: null,\n    colour: \"355\",\n  };\n\n  Blockly.Blocks[\"setVelocityX\"] = {\n    init: function () {\n      this.jsonInit(setVelocityX);\n    },\n  };\n\n  Blockly.JavaScript[\"setVelocityX\"] = function (block) {\n    var val = Blockly.JavaScript.valueToCode(\n      block,\n      \"velocityX\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n    if (val) {\n      return `setVelocityX(${val});\\n`;\n    } else {\n      return ``;\n    }\n  };\n  /******** setVelocityX *****/\n\n  //////////////////////////////////////////////////////////////////\n\n  /******** setVelocityY *****/\n  var setVelocityY = {\n    message0: \"setVelocityY %1\",\n    args0: [{ type: \"input_value\", name: \"velocityY\", check: \"Number\" }],\n    previousStatement: \"Number\",\n    nextStatement: null,\n    colour: \"355\",\n  };\n\n  Blockly.Blocks[\"setVelocityY\"] = {\n    init: function () {\n      this.jsonInit(setVelocityY);\n    },\n  };\n\n  Blockly.JavaScript[\"setVelocityY\"] = function (block) {\n    var val = Blockly.JavaScript.valueToCode(\n      block,\n      \"velocityY\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n    if (val) {\n      return `setVelocityY(${val});\\n`;\n    } else {\n      return ``;\n    }\n  };\n\n  /******** setVelocityY *****/\n\n  //////////////////////////////////////////////////////////////////\n\n  /******** setX *****/\n  var setPlayerX = {\n    message0: \"setPlayerX %1\",\n    args0: [{ type: \"input_value\", name: \"playerX\", check: \"Number\" }],\n    previousStatement: \"Number\",\n    nextStatement: null,\n    colour: \"355\",\n  };\n\n  Blockly.Blocks[\"setPlayerX\"] = {\n    init: function () {\n      this.jsonInit(setPlayerX);\n    },\n  };\n\n  Blockly.JavaScript[\"setPlayerX\"] = function (block) {\n    var val = Blockly.JavaScript.valueToCode(\n      block,\n      \"playerX\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n    //console.log(val);\n    if (val) {\n      return `setX(${val});\\n`;\n    } else {\n      return \"\";\n    }\n  };\n\n  /******** setX *****/\n\n  /******** setY *****/\n  var setPlayerY = {\n    message0: \"setPlayerY %1\",\n    args0: [{ type: \"input_value\", name: \"playerY\", check: \"Number\" }],\n    previousStatement: \"Number\",\n    nextStatement: null,\n    colour: \"355\",\n  };\n\n  Blockly.Blocks[\"setPlayerY\"] = {\n    init: function () {\n      this.jsonInit(setPlayerY);\n    },\n  };\n\n  Blockly.JavaScript[\"setPlayerY\"] = function (block) {\n    var val = Blockly.JavaScript.valueToCode(\n      block,\n      \"playerY\",\n      Blockly.JavaScript.ORDER_NONE\n    );\n    if (val) {\n      return `setY(${val});\\n`;\n    } else {\n      return \"\";\n    }\n  };\n\n  /******** setY *****/\n\n  /******  getBandPower ********/\n  var getBandPower = {\n    type: \"getalpha\",\n    lastDummyAlign0: \"RIGHT\",\n    message0: \"getBandPower %1 %2 %3\",\n    args0: [\n      {\n        type: \"field_dropdown\",\n        name: \"channels\",\n        options: [\n          [\"af7\", \"af7\"],\n          [\"af8\", \"af8\"],\n          [\"tp9\", \"tp9\"],\n          [\"tp10\", \"tp10\"],\n        ],\n      },\n      {\n        type: \"input_dummy\",\n      },\n      {\n        type: \"field_dropdown\",\n        name: \"bands\",\n        options: [\n          [\"theta\", \"theta\"],\n          [\"alpha\", \"alpha\"],\n          [\"beta\", \"beta\"],\n          [\"gamma\", \"gamma\"],\n        ],\n      },\n    ],\n    inputsInline: true,\n    output: null,\n    colour: 75,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"getBandPower\"] = {\n    init: function () {\n      this.jsonInit(getBandPower);\n    },\n  };\n\n  Blockly.JavaScript[\"getBandPower\"] = function (block) {\n    var channel = block.getFieldValue(\"channels\");\n    var band = block.getFieldValue(\"bands\");\n    var code = `getBandPower('${band}', '${channel}')`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  var getFacialData = {\n    type: \"getface\",\n    message0: \"getFacialData %1 %2 %3\",\n    args0: [\n      {\n        type: \"field_dropdown\",\n        name: \"feature\",\n        options: [\n          [\"nose\", \"nose\"],\n          [\"leftEye\", \"leftEye\"],\n          [\"rightEye\", \"rightEye\"],\n        ],\n      },\n      {\n        type: \"input_dummy\",\n      },\n      {\n        type: \"field_dropdown\",\n        name: \"component\",\n        options: [\n          [\"x\", \"x\"],\n          [\"y\", \"y\"],\n          [\"score\", \"score\"],\n        ],\n      },\n    ],\n    inputsInline: true,\n    output: null,\n    colour: 75,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"getFacialData\"] = {\n    init: function () {\n      this.jsonInit(getFacialData);\n    },\n  };\n\n  Blockly.JavaScript[\"getFacialData\"] = function (block) {\n    var feature = block.getFieldValue(\"feature\");\n    var component = block.getFieldValue(\"component\");\n    console.log(\"feature, component\", feature, component);\n    var code = `getFacialData('${feature}', '${component}')`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  var getExpressionScore = {\n    type: \"getexpressionscore\",\n    message0: \"getExpressionScore %1\",\n    args0: [\n      {\n        type: \"field_dropdown\",\n        name: \"expressions\",\n        options: [\n          [\"neutral\", \"neutral\"],\n          [\"happy\", \"happy\"],\n          [\"sad\", \"sad\"],\n          [\"angry\", \"angry\"],\n          [\"fearful\", \"fearful\"],\n          [\"disgusted\", \"disgusted\"],\n          [\"surprised\", \"surprised\"],\n        ],\n      },\n    ],\n    inputsInline: true,\n    output: null,\n    colour: 75,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"getExpressionScore\"] = {\n    init: function () {\n      this.jsonInit(getExpressionScore);\n    },\n  };\n\n  Blockly.JavaScript[\"getExpressionScore\"] = function (block) {\n    var expression = block.getFieldValue(\"expressions\");\n    //window.expressions[expression]\n    //console.log(\"expression\", expression)\n    var code = `getExpressionScore('${expression}')`;\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  var getSpeech = {\n    type: \"getspeech\",\n    message0: \"getSpeech\",\n    output: null,\n    colour: 75,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"getSpeech\"] = {\n    init: function () {\n      this.jsonInit(getSpeech);\n    },\n  };\n\n  Blockly.JavaScript[\"getSpeech\"] = function (block) {\n    var code = \"getSpeech()\";\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  // Get Physio\n  var getMuscleEnergy = {\n    type: \"getMuscleEnergy\",\n    message0: \"getMuscleEnergy\",\n    output: null,\n    colour: \"250\",\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"getMuscleEnergy\"] = {\n    init: function () {\n      this.jsonInit(getMuscleEnergy);\n    },\n  };\n\n  Blockly.JavaScript[\"getMuscleEnergy\"] = function (block) {\n    var code = \"getPhysio()\";\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  };\n\n  /* pan() */\n  var speak = {\n    message0: \"speak %1\",\n    args0: [{ type: \"input_value\", name: \"text\", check: \"String\" }],\n    previousStatement: null,\n    nextStatement: null,\n    colour: 355,\n  };\n\n  Blockly.Blocks[\"speak\"] = {\n    init: function () {\n      this.jsonInit(speak);\n    },\n  };\n\n  Blockly.JavaScript[\"speak\"] = function (block) {\n    var text = Blockly.JavaScript.valueToCode(\n      block,\n      \"text\",\n      Blockly.JavaScript.ORDER_ATOMIC\n    );\n    code = `speak(${text})`;\n    return code;\n  };\n\n  var updateBaxterFace = {\n    type: \"updatebaxterface\",\n    message0: \"%1 %2 %3 %4 %5\",\n    args0: [\n      {\n        type: \"field_dropdown\",\n        name: \"emotion\",\n        options: [\n          [\"afraid\", \"Afraid\"],\n          [\"confused\", \"Confused\"],\n          [\"happy\", \"Happy\"],\n          [\"joy\", \"Joy\"],\n          [\"neutral\", \"Neutral\"],\n          [\"reactive\", \"Reactive\"],\n          [\"sad\", \"Sad\"],\n          [\"sassy\", \"Sassy\"],\n          [\"silly\", \"Silly\"],\n          [\"sleep\", \"Sleep\"],\n          [\"surprise\", \"Surprise\"],\n          [\"worried\", \"Worried\"],\n        ],\n      },\n      {\n        type: \"input_dummy\",\n      },\n      {\n        type: \"field_dropdown\",\n        name: \"color\",\n        options: [\n          [\"blue\", \"Blue\"],\n          [\"orange\", \"Orange\"],\n          [\"purple\", \"Purple\"],\n          [\"white\", \"White\"],\n          [\"green\", \"Green\"],\n          [\"yellow\", \"Yellow\"],\n          [\"red\", \"Red\"],\n          [\"gray\", \"Gray\"],\n        ],\n      },\n      {\n        type: \"input_dummy\",\n      },\n      {\n        type: \"field_dropdown\",\n        name: \"gazeDirection\",\n        options: [\n          [\"topLeft\", \"NW\"],\n          [\"topRight\", \"NE\"],\n          [\"bottomLeft\", \"SW\"],\n          [\"bottomRight\", \"SE\"],\n          [\"blink\", \"Blink\"],\n        ],\n      },\n    ],\n    inputsInline: true,\n    previousStatement: null,\n    colour: 355,\n    tooltip: \"\",\n    helpUrl: \"\",\n  };\n\n  Blockly.Blocks[\"updateBaxterFace\"] = {\n    init: function () {\n      this.jsonInit(updateBaxterFace);\n    },\n  };\n\n  Blockly.JavaScript[\"updateBaxterFace\"] = function (block) {\n    var emotion = block.getFieldValue(\"emotion\");\n    var color = block.getFieldValue(\"color\");\n    var gaze = block.getFieldValue(\"gazeDirection\");\n    //window.updateFace(emotion, gaze, color)\n    code = `updateFace('${emotion}', '${gaze}', '${color}' )`;\n    return code;\n  };\n};\n"],"names":[],"version":3,"file":"index.0390ff90.js.map","sourceRoot":"/__parcel_source_root/"}