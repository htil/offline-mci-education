{"mappings":"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AAiC,iBAAV4O,EAC/BjE,MAAM/G,EAAYwD,iBAAiBwH,KACrCxE,EAAgBmB,eAAenB,EAAgByE,YAChB,wBAEjCH,EAASZ,WAAW9N,OAAS4O,MACxB,CACL,IAAK,IAAI7O,EAAI,EAAGA,EAAIoD,UAAUnD,OAAQD,IACpC2O,EAASZ,WAAW/N,GAAKoD,UAAUpD,GAErC2O,EAASZ,WAAW9N,OAASD,CAC/B,CACA,OAAO2O,CACT,EACAlN,KAAKmK,MAAQnK,KAAK8I,qBAAqBc,GAAS,GAChD5J,KAAKoK,YAAcpK,KAAKmK,MAAMmC,WAAW,UACzCtM,KAAK2H,YAAYjE,EAAc,QAAS1D,KAAKmK,MACzC/H,EAAY0C,0BAGhB8E,EAAU,SAAiBlL,GACzB,OAAOA,GAAqB,UAAdA,EAAI2M,KACpB,EACArL,KAAK2H,YAAY3H,KAAKmK,MAAO,UACZnK,KAAK8I,qBAAqBc,GAAS,GACnCxH,EAAY0C,0BAG7B9E,KAAK2H,YAAY3H,KAAKoK,YAAa,SAAU,EACzC,CAAC5K,cAAc,EAAOD,YAAY,EAAOD,UAAU,IACvDU,KAAKoK,YAAYiB,MAAQ,QAEzBrL,KAAK+C,WAAWhE,KAClB,gDACI,8CACF,mBACE,gCACA,wBACA,4BACA,yBACE,gBACA,oBACF,IACA,SACA,kBACA,iBACA,kBACA,YACF,IACF,MAEA,iDACI,8CACF,4BACE,gCACA,wBACA,4BACA,+CACE,yBACA,SACF,IACA,kBACA,cACF,IACF,MAEA,kDACI,8CACF,qBACE,gCACA,wBACA,4BACA,yBACE,gBACA,oBACF,IACA,oBACA,sCACE,sBACE,mBACF,WACE,eACF,IACF,IACA,eACA,sBACA,gBACF,IACF,MAEA,oDACI,8CACF,+BACE,gCACA,wBACA,4BACA,yBACE,WACF,IACA,uCACE,gBACE,kCACF,WACE,kCACF,IACF,IACA,+CACE,uBACF,IACA,8CACF,IACF,MAEA,oDACI,8CACF,uBACE,gCACA,wBACA,4BACA,yBACE,YACF,IACA,4CACE,gBACA,qBACA,4BACE,yBACF,WACE,eACF,IACA,cACE,sBACF,WACE,yBACF,IACF,IACA,YACF,IACF,MAEA,oDACI,8CACF,+CACE,gCACA,wBACA,4BACA,yBACA,0BACE,aACF,IACA,uDACA,oBACE,0CACE,YACF,IACA,OACF,IACA,aACF,IACF,MAEA,wDACI,8CACF,mDACE,gCACA,wBACA,4BACA,cACE,aACF,IACA,mBACA,8BACE,qBACA,WACE,+CACF,IACF,IACA,6DACA,mBACE,0CACE,YACF,IACA,OACF,IACA,aACF,IACF,MAEA,kDACI,8CACF,+BACE,gCACA,wBACA,4BAEA,cACA,2DAEA,oCACE,0BACE,YACF,IACA,iBACE,mBACF,WACE,4BACF,IACF,WACE,aACF,IACA,0BACA,gCACA,mCACE,0BACE,4BACF,IACF,IACA,iBACF,IACF,MAEA,mDACI,8CACF,kDACE,gCACA,wBACA,4BACA,cACA,mBACE,oCACF,WACE,gCACF,IACA,8BACE,6BACF,WACE,oBACA,iEACF,IACA,oBAEA,sDACE,gBACE,sBACF,WACE,oBACF,IACA,gCACE,6BACF,WACE,eACF,IACF,IAEA,kEACE,gCACE,6BACF,WACE,eACF,IACF,IAEA,kDACE,eACF,IACA,sBAEA,kCACA,2CACE,gBACE,qBACF,WACE,qBACF,IACF,IACA,cACA,+CACE,mCACF,IACA,kBACA,kBACF,IACF,MAEA,mDACI,8CACF,8BACE,gCACA,wBACA,mBACA,gDACE,6CACA,8BACE,kDACE,oBACE,yBACF,WACE,mBACF,IACF,IACF,WACE,sBACF,IACF,IACA,iBACF,IACF,MAEA,iDACI,8CACF,iCACE,gCACA,wBACA,mDACI,8BACJ,gBACA,uCACE,kBACE,cACF,IACA,4DACF,IACA,cACF,IACF,MAIA,kDACI,8CACF,wCACE,oEACA,YACA,wBACA,4BACA,yCACA,SACA,oBACE,+DACA,OACF,IACA,eACF,IACF,MAIA,mDACI,8CACF,mCACE,wFACA,wBACA,4BACA,gBACA,+DACA,kCACE,gBACE,kBACA,mDACF,IACF,IACA,cACF,IACF,MAIA,oDACI,8CACF,wCACE,kEACA,YACA,wBACA,4BACA,yCACA,SACA,oBACE,4CACA,OACF,IACF,IACF,MAIA,gDACI,8CACF,oCACE,kEACA,eACA,wBACA,4BACA,yCACA,sBACA,SACA,oBACE,mDACA,OACF,IACA,YACF,IACF,MAIA,mDACI,8CACF,iDACE,kEACA,4DACA,gCACE,wBACF,WACE,oCACA,kBACE,kEACF,IACA,kBACF,IACA,yBACE,mDACF,IACA,gBACF,IACF,MAIA,wDACI,8CACF,sDACE,yGACA,kEACA,+BACE,wBACF,WACE,mCACA,eACE,kEACF,IACA,kBACF,IACA,wBACE,mDACF,IACA,gBACF,IACF,MAIA,iDACI,8CACF,oCACE,6DACA,wBACA,4BACA,+DACA,kCACE,iDACE,eACF,IACF,IACA,gBACF,IACF,MAGA,iDACI,8CACF,4BACE,gCACA,wCACE,wBACF,IACA,0CACE,mBACA,kDACE,wDACI,6CACF,sBACA,2BACA,yBACE,yBACF,WACE,kBACF,IACA,iBACE,sBACF,WACE,sBACF,IACA,aACF,IACF,IACA,uBACF,IACA,eACF,IACF,MAEA,2DACI,8CACF,8BACE,gCACA,wBACA,gBACA,uCACE,+EACF,IACA,wBACF,IACF,MACA,GACA,EAMAqD,EAAYxC,UAAUwI,WAAa,SAAS1E,GAC1C,IACIkG,EADAhB,EAAkB5I,KAGtB4J,EAAU,SAAgBvK,GAExB,OADAA,EAAQsC,UAAUnD,OAAS4D,EAAYqD,aAAaS,OAAO7G,GAAS,GAChEuJ,EAAgBmD,iBAElB/L,KAAKmM,KAAO9M,EACLW,MAGAX,CAEX,EACAW,KAAKsN,OAAStN,KAAK8I,qBAAqBc,GAAS,GACjD5J,KAAK2H,YAAYjE,EAAc,SAAU1D,KAAKsN,OAC1ClL,EAAY0C,0BAGhB9E,KAAK2H,YAAY3H,KAAKsN,OAAQ,eAC1BtN,KAAK8I,qBAAqB5C,OAAOqH,cAAc,GAC/CnL,EAAY0C,0BAOhB,IAHA,IAAI0I,EAAY,CAAC,SAAU,aAAc,SAAU,UAAW,cAC1D,QAAS,SAAU,YAAa,oBAAqB,oBACrD,cAAe,cA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","sources":["node_modules/vm-browserify/index.js","node_modules/js-interpreter/lib/js-interpreter.js","src/js/main.js"],"sourcesContent":["var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSInterpreter\"] = factory();\n\telse\n\t\troot[\"JSInterpreter\"] = factory();\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./original-repo/interpreter.js\":\n/*!**************************************!*\\\n  !*** ./original-repo/interpreter.js ***!\n  \\**************************************/\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @license\n * Copyright 2013 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Interpreting JavaScript in JavaScript.\n * @author fraser@google.com (Neil Fraser)\n */\n\n\n/**\n * Create a new interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n * @param {Function=} opt_initFunc Optional initialization function.  Used to\n *     define APIs.  When called it is passed the interpreter object and the\n *     global scope object.\n * @constructor\n */\nvar Interpreter = function(code, opt_initFunc) {\n  if (typeof code === 'string') {\n    code = this.parse_(code, 'code');\n  }\n  // Get a handle on Acorn's node_t object.\n  var nodeConstructor = code.constructor;\n  this.newNode = function() {\n    return new nodeConstructor({'options': {}});\n  };\n  // Clone the root 'Program' node so that the AST may be modified.\n  var ast = this.newNode();\n  for (var prop in code) {\n    ast[prop] = (prop === 'body') ? code[prop].slice() : code[prop];\n  }\n  this.ast = ast;\n  this.initFunc_ = opt_initFunc;\n  this.paused_ = false;\n  this.polyfills_ = [];\n  // Unique identifier for native functions.  Used in serialization.\n  this.functionCounter_ = 0;\n  // Map node types to our step function names; a property lookup is faster\n  // than string concatenation with \"step\" prefix.\n  this.stepFunctions_ = Object.create(null);\n  var stepMatch = /^step([A-Z]\\w*)$/;\n  var m;\n  for (var methodName in this) {\n    if ((typeof this[methodName] === 'function') &&\n        (m = methodName.match(stepMatch))) {\n      this.stepFunctions_[m[1]] = this[methodName].bind(this);\n    }\n  }\n  // Create and initialize the global scope.\n  this.globalScope = this.createScope(this.ast, null);\n  this.globalObject = this.globalScope.object;\n  // Run the polyfills.\n  this.ast = this.parse_(this.polyfills_.join('\\n'), 'polyfills');\n  this.polyfills_ = undefined;  // Allow polyfill strings to garbage collect.\n  Interpreter.stripLocations_(this.ast, undefined, undefined);\n  var state = new Interpreter.State(this.ast, this.globalScope);\n  state.done = false;\n  this.stateStack = [state];\n  this.run();\n  this.value = undefined;\n  // Point at the main program.\n  this.ast = ast;\n  state = new Interpreter.State(this.ast, this.globalScope);\n  state.done = false;\n  this.stateStack.length = 0;\n  this.stateStack[0] = state;\n};\n\n/**\n * Completion Value Types.\n * @enum {number}\n */\nInterpreter.Completion = {\n  NORMAL: 0,\n  BREAK: 1,\n  CONTINUE: 2,\n  RETURN: 3,\n  THROW: 4,\n};\n\n/**\n * @const {!Object} Configuration used for all Acorn parsing.\n */\nInterpreter.PARSE_OPTIONS = {\n  'locations': true,\n  'ecmaVersion': 5,  // Needed in the event a version > 0.5.0 of Acorn is used.\n};\n\n/**\n * Property descriptor of readonly properties.\n */\nInterpreter.READONLY_DESCRIPTOR = {\n  configurable: true,\n  enumerable: true,\n  writable: false,\n};\n\n/**\n * Property descriptor of non-enumerable properties.\n */\nInterpreter.NONENUMERABLE_DESCRIPTOR = {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n};\n\n/**\n * Property descriptor of readonly, non-enumerable properties.\n */\nInterpreter.READONLY_NONENUMERABLE_DESCRIPTOR = {\n  configurable: true,\n  enumerable: false,\n  writable: false,\n};\n\n/**\n * Property descriptor of non-configurable, readonly, non-enumerable properties.\n * E.g. NaN, Infinity.\n */\nInterpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR = {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n};\n\n/**\n * Property descriptor of variables.\n */\nInterpreter.VARIABLE_DESCRIPTOR = {\n  configurable: false,\n  enumerable: true,\n  writable: true,\n};\n\n/**\n * Unique symbol for indicating that a step has encountered an error, has\n * added it to the stack, and will be thrown within the user's program.\n * When STEP_ERROR is thrown in the JS-Interpreter, the error can be ignored.\n */\nInterpreter.STEP_ERROR = {'STEP_ERROR': true};\n\n/**\n * Unique symbol for indicating that a reference is a variable on the scope,\n * not an object property.\n */\nInterpreter.SCOPE_REFERENCE = {'SCOPE_REFERENCE': true};\n\n/**\n * Unique symbol for indicating, when used as the value of the value\n * parameter in calls to setProperty and friends, that the value\n * should be taken from the property descriptor instead.\n */\nInterpreter.VALUE_IN_DESCRIPTOR = {'VALUE_IN_DESCRIPTOR': true};\n\n/**\n * Unique symbol for indicating that a RegExp timeout has occurred in a VM.\n */\nInterpreter.REGEXP_TIMEOUT = {'REGEXP_TIMEOUT': true};\n\n/**\n * For cycle detection in array to string and error conversion;\n * see spec bug github.com/tc39/ecma262/issues/289\n * Since this is for atomic actions only, it can be a class property.\n */\nInterpreter.toStringCycles_ = [];\n\n/**\n * Node's vm module, if loaded and required.\n * @type {Object}\n */\nInterpreter.vm = null;\n\n/**\n * Currently executing interpreter.  Needed so Interpreter.Object instances\n * can know their environment.\n * @type {Interpreter}\n */\nInterpreter.currentInterpreter_ = null;\n\n/**\n * The global object (`window` in a browser, `global` in node.js) is usually\n * `globalThis`, but older systems use `this`.\n */\nInterpreter.nativeGlobal =\n    (typeof globalThis === 'undefined') ? this : globalThis;\n\n/**\n * Code for executing regular expressions in a thread.\n */\nInterpreter.WORKER_CODE = [\n  \"onmessage = function(e) {\",\n    \"var result;\",\n    \"var data = e.data;\",\n    \"switch (data[0]) {\",\n      \"case 'split':\",\n        // ['split', string, separator, limit]\n        \"result = data[1].split(data[2], data[3]);\",\n        \"break;\",\n      \"case 'match':\",\n        // ['match', string, regexp]\n        \"result = data[1].match(data[2]);\",\n        \"break;\",\n      \"case 'search':\",\n        // ['search', string, regexp]\n        \"result = data[1].search(data[2]);\",\n        \"break;\",\n      \"case 'replace':\",\n        // ['replace', string, regexp, newSubstr]\n        \"result = data[1].replace(data[2], data[3]);\",\n        \"break;\",\n      \"case 'exec':\",\n        // ['exec', regexp, lastIndex, string]\n        \"var regexp = data[1];\",\n        \"regexp.lastIndex = data[2];\",\n        \"result = [regexp.exec(data[3]), data[1].lastIndex];\",\n        \"break;\",\n      \"default:\",\n        \"throw Error('Unknown RegExp operation: ' + data[0]);\",\n    \"}\",\n    \"postMessage(result);\",\n    \"close();\",\n  \"};\"];\n\n/**\n * Is a value a legal integer for an array length?\n * @param {Interpreter.Value} x Value to check.\n * @return {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayLength = function(x) {\n  var n = x >>> 0;\n  // Array length must be between 0 and 2^32-1 (inclusive).\n  return (n === Number(x)) ? n : NaN;\n};\n\n/**\n * Is a value a legal integer for an array index?\n * @param {Interpreter.Value} x Value to check.\n * @return {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayIndex = function(x) {\n  var n = x >>> 0;\n  // Array index cannot be 2^32-1, otherwise length would be 2^32.\n  // 0xffffffff is 2^32-1.\n  return (String(n) === String(x) && n !== 0xffffffff) ? n : NaN;\n};\n\n/**\n * Remove start and end values from AST, or set start and end values to a\n * constant value.  Used to remove highlighting from polyfills and to set\n * highlighting in an eval to cover the entire eval expression.\n * @param {!Object} node AST node.\n * @param {number=} start Starting character of all nodes, or undefined.\n * @param {number=} end Ending character of all nodes, or undefined.\n * @private\n */\nInterpreter.stripLocations_ = function(node, start, end) {\n  if (start) {\n    node['start'] = start;\n  } else {\n    delete node['start'];\n  }\n  if (end) {\n    node['end'] = end;\n  } else {\n    delete node['end'];\n  }\n  for (var name in node) {\n    if (name !== 'loc' && node.hasOwnProperty(name)) {\n      var prop = node[name];\n      if (prop && typeof prop === 'object') {\n        Interpreter.stripLocations_(prop, start, end);\n      }\n    }\n  }\n};\n\n/**\n * Some pathological regular expressions can take geometric time.\n * Regular expressions are handled in one of three ways:\n * 0 - throw as invalid.\n * 1 - execute natively (risk of unresponsive program).\n * 2 - execute in separate thread (not supported by IE 9).\n */\nInterpreter.prototype['REGEXP_MODE'] = 2;\n\n/**\n * If REGEXP_MODE = 2, the length of time (in ms) to allow a RegExp\n * thread to execute before terminating it.\n */\nInterpreter.prototype['REGEXP_THREAD_TIMEOUT'] = 1000;\n\n/**\n * Length of time (in ms) to allow a polyfill to run before ending step.\n * If set to 0, polyfills will execute step by step.\n * If set to 1000, polyfills will run for up to a second per step\n * (execution will resume in the polyfill in the next step).\n * If set to Infinity, polyfills will run to completion in a single step.\n */\nInterpreter.prototype['POLYFILL_TIMEOUT'] = 1000;\n\n/**\n * Flag indicating that a getter function needs to be called immediately.\n * @private\n */\nInterpreter.prototype.getterStep_ = false;\n\n/**\n * Flag indicating that a setter function needs to be called immediately.\n * @private\n */\nInterpreter.prototype.setterStep_ = false;\n\n/**\n * Number of code chunks appended to the interpreter.\n * @private\n */\nInterpreter.prototype.appendCodeNumber_ = 0;\n\n/**\n * Parse JavaScript code into an AST using Acorn.\n * @param {string} code Raw JavaScript text.\n * @param {string} sourceFile Name of filename (for stack trace).\n * @return {!Object} AST.\n * @private\n */\nInterpreter.prototype.parse_ = function(code, sourceFile) {\n   // Create a new options object, since Acorn will modify this object.\n   var options = {};\n   for (var name in Interpreter.PARSE_OPTIONS) {\n     options[name] = Interpreter.PARSE_OPTIONS[name];\n   }\n   options['sourceFile'] = sourceFile;\n   return Interpreter.nativeGlobal['acorn'].parse(code, options);\n};\n\n/**\n * Add more code to the interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n */\nInterpreter.prototype.appendCode = function(code) {\n  var state = this.stateStack[0];\n  if (!state || state.node['type'] !== 'Program') {\n    throw Error('Expecting original AST to start with a Program node');\n  }\n  if (typeof code === 'string') {\n    code = this.parse_(code, 'appendCode' + (this.appendCodeNumber_++));\n  }\n  if (!code || code['type'] !== 'Program') {\n    throw Error('Expecting new AST to start with a Program node');\n  }\n  this.populateScope_(code, state.scope);\n  // Append the new program to the old one.\n  Array.prototype.push.apply(state.node['body'], code['body']);\n  state.node['body'].variableCache_ = null;\n  state.done = false;\n};\n\n/**\n * Execute one step of the interpreter.\n * @return {boolean} True if a step was executed, false if no more instructions.\n */\nInterpreter.prototype.step = function() {\n  var stack = this.stateStack;\n  do {\n    var state = stack[stack.length - 1];\n    if (!state) {\n      return false;\n    }\n    var node = state.node, type = node['type'];\n    if (type === 'Program' && state.done) {\n      return false;\n    } else if (this.paused_) {\n      return true;\n    }\n    // Record the interpreter in a global property so calls to toString/valueOf\n    // can execute in the proper context.\n    var oldInterpreterValue = Interpreter.currentInterpreter_;\n    Interpreter.currentInterpreter_ = this;\n    try {\n      var nextState = this.stepFunctions_[type](stack, state, node);\n    } catch (e) {\n      // Eat any step errors.  They have been thrown on the stack.\n      if (e !== Interpreter.STEP_ERROR) {\n        // Uh oh.  This is a real error in the JS-Interpreter.  Rethrow.\n        throw e;\n      }\n    } finally {\n      // Restore to previous value (probably null, maybe nested toString calls).\n      Interpreter.currentInterpreter_ = oldInterpreterValue;\n    }\n    if (nextState) {\n      stack.push(nextState);\n    }\n    if (this.getterStep_) {\n      // Getter from this step was not handled.\n      throw Error('Getter not supported in this context');\n    }\n    if (this.setterStep_) {\n      // Setter from this step was not handled.\n      throw Error('Setter not supported in this context');\n    }\n    // This may be polyfill code.  Keep executing until we arrive at user code.\n    if (!endTime && !node['end']) {\n      // Ideally this would be defined at the top of the function, but that\n      // wastes time if the step isn't a polyfill.\n      var endTime = Date.now() + this['POLYFILL_TIMEOUT'];\n    }\n  } while (!node['end'] && endTime > Date.now());\n  return true;\n};\n\n/**\n * Execute the interpreter to program completion.  Vulnerable to infinite loops.\n * @return {boolean} True if a execution is asynchronously blocked,\n *     false if no more instructions.\n */\nInterpreter.prototype.run = function() {\n  while (!this.paused_ && this.step()) {}\n  return this.paused_;\n};\n\n/**\n * Initialize the global object with buitin properties and functions.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initGlobal = function(globalObject) {\n  // Initialize uneditable global properties.\n  this.setProperty(globalObject, 'NaN', NaN,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'Infinity', Infinity,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'undefined', undefined,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'window', globalObject,\n      Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(globalObject, 'this', globalObject,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'self', globalObject);  // Editable.\n\n  // Create the objects which will become Object.prototype and\n  // Function.prototype, which are needed to bootstrap everything else.\n  this.OBJECT_PROTO = new Interpreter.Object(null);\n  this.FUNCTION_PROTO = new Interpreter.Object(this.OBJECT_PROTO);\n  // Initialize global objects.\n  this.initFunction(globalObject);\n  this.initObject(globalObject);\n  // Unable to set globalObject's parent prior (OBJECT did not exist).\n  // Note that in a browser this would be `Window`, whereas in Node.js it would\n  // be `Object`.  This interpreter is closer to Node in that it has no DOM.\n  globalObject.proto = this.OBJECT_PROTO;\n  this.setProperty(globalObject, 'constructor', this.OBJECT,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.initArray(globalObject);\n  this.initString(globalObject);\n  this.initBoolean(globalObject);\n  this.initNumber(globalObject);\n  this.initDate(globalObject);\n  this.initRegExp(globalObject);\n  this.initError(globalObject);\n  this.initMath(globalObject);\n  this.initJSON(globalObject);\n\n  // Initialize global functions.\n  var thisInterpreter = this;\n  var func = this.createNativeFunction(\n      function(_x) {throw EvalError(\"Can't happen\");}, false);\n  func.eval = true;\n  this.setProperty(globalObject, 'eval', func,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(globalObject, 'parseInt',\n      this.createNativeFunction(parseInt, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'parseFloat',\n      this.createNativeFunction(parseFloat, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(globalObject, 'isNaN',\n      this.createNativeFunction(isNaN, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(globalObject, 'isFinite',\n      this.createNativeFunction(isFinite, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var strFunctions = [\n    [escape, 'escape'], [unescape, 'unescape'],\n    [decodeURI, 'decodeURI'], [decodeURIComponent, 'decodeURIComponent'],\n    [encodeURI, 'encodeURI'], [encodeURIComponent, 'encodeURIComponent']\n  ];\n  for (var i = 0; i < strFunctions.length; i++) {\n    var wrapper = (function(nativeFunc) {\n      return function(str) {\n        try {\n          return nativeFunc(str);\n        } catch (e) {\n          // decodeURI('%xy') will throw an error.  Catch and rethrow.\n          thisInterpreter.throwException(thisInterpreter.URI_ERROR, e.message);\n        }\n      };\n    })(strFunctions[i][0]);\n    this.setProperty(globalObject, strFunctions[i][1],\n        this.createNativeFunction(wrapper, false),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n  // Preserve publicly properties from being pruned/renamed by JS compilers.\n  // Add others as needed.\n  this['OBJECT'] = this.OBJECT;     this['OBJECT_PROTO'] = this.OBJECT_PROTO;\n  this['FUNCTION'] = this.FUNCTION; this['FUNCTION_PROTO'] = this.FUNCTION_PROTO;\n  this['ARRAY'] = this.ARRAY;       this['ARRAY_PROTO'] = this.ARRAY_PROTO;\n  this['REGEXP'] = this.REGEXP;     this['REGEXP_PROTO'] = this.REGEXP_PROTO;\n  this['DATE'] = this.DATE;         this['DATE_PROTO'] = this.DATE_PROTO;\n\n  // Run any user-provided initialization.\n  if (this.initFunc_) {\n    this.initFunc_(this, globalObject);\n  }\n};\n\n/**\n * Number of functions created by the interpreter.\n * @private\n */\nInterpreter.prototype.functionCodeNumber_ = 0;\n\n/**\n * Initialize the Function class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initFunction = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  var identifierRegexp = /^[A-Za-z_$][\\w$]*$/;\n  // Function constructor.\n  wrapper = function Function(var_args) {\n    if (arguments.length) {\n      var code = String(arguments[arguments.length - 1]);\n    } else {\n      var code = '';\n    }\n    var argsStr = Array.prototype.slice.call(arguments, 0, -1).join(',').trim();\n    if (argsStr) {\n      var args = argsStr.split(/\\s*,\\s*/);\n      for (var i = 0; i < args.length; i++) {\n        var name = args[i];\n        if (!identifierRegexp.test(name)) {\n          thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n              'Invalid function argument: ' + name);\n        }\n      }\n      argsStr = args.join(', ');\n    }\n    // Acorn needs to parse code in the context of a function or else `return`\n    // statements will be syntax errors.\n    try {\n      var ast = thisInterpreter.parse_('(function(' + argsStr + ') {' + code + '})',\n          'function' + (thisInterpreter.functionCodeNumber_++));\n    } catch (e) {\n      // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n          'Invalid code: ' + e.message);\n    }\n    if (ast['body'].length !== 1) {\n      // Function('a', 'return a + 6;}; {alert(1);');\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n          'Invalid code in function body.');\n    }\n    var node = ast['body'][0]['expression'];\n    // Note that if this constructor is called as `new Function()` the function\n    // object created by stepCallExpression and assigned to `this` is discarded.\n    // Interestingly, the scope for constructed functions is the global scope,\n    // even if they were constructed in some other scope.\n    return thisInterpreter.createFunction(node, thisInterpreter.globalScope, 'anonymous');\n  };\n  this.FUNCTION = this.createNativeFunction(wrapper, true);\n\n  this.setProperty(globalObject, 'Function', this.FUNCTION,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  // Throw away the created prototype and use the root prototype.\n  this.setProperty(this.FUNCTION, 'prototype', this.FUNCTION_PROTO,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Configure Function.prototype.\n  this.setProperty(this.FUNCTION_PROTO, 'constructor', this.FUNCTION,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.FUNCTION_PROTO.nativeFunc = function() {};\n  this.FUNCTION_PROTO.nativeFunc.id = this.functionCounter_++;\n  this.FUNCTION_PROTO.illegalConstructor = true;\n  this.setProperty(this.FUNCTION_PROTO, 'length', 0,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.FUNCTION_PROTO.class = 'Function';\n\n  wrapper = function apply(thisArg, args) {\n    var state =\n        thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current CallExpression state to apply a different function.\n    state.func_ = this;\n    // Assign the `this` object.\n    state.funcThis_ = thisArg;\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    if (args !== null && args !== undefined) {\n      if (args instanceof Interpreter.Object) {\n        state.arguments_ = thisInterpreter.arrayPseudoToNative(args);\n      } else {\n        thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n            'CreateListFromArrayLike called on non-object');\n      }\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'apply', wrapper);\n\n  wrapper = function call(thisArg /*, var_args */) {\n    var state =\n        thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current CallExpression state to call a different function.\n    state.func_ = this;\n    // Assign the `this` object.\n    state.funcThis_ = thisArg;\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    for (var i = 1; i < arguments.length; i++) {\n      state.arguments_.push(arguments[i]);\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'call', wrapper);\n\n  this.polyfills_.push(\n// Polyfill copied from:\n// developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n\"Object.defineProperty(Function.prototype, 'bind',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function bind(oThis) {\",\n    \"if (typeof this !== 'function') {\",\n      \"throw TypeError('What is trying to be bound is not callable');\",\n    \"}\",\n    \"var aArgs   = Array.prototype.slice.call(arguments, 1),\",\n        \"fToBind = this,\",\n        \"fNOP    = function() {},\",\n        \"fBound  = function() {\",\n          \"return fToBind.apply(this instanceof fNOP\",\n                 \"? this\",\n                 \": oThis,\",\n                 \"aArgs.concat(Array.prototype.slice.call(arguments)));\",\n        \"};\",\n    \"if (this.prototype) {\",\n      \"fNOP.prototype = this.prototype;\",\n    \"}\",\n    \"fBound.prototype = new fNOP();\",\n    \"return fBound;\",\n  \"}\",\n\"});\",\n\"\");\n\n  // Function has no parent to inherit from, so it needs its own mandatory\n  // toString and valueOf functions.\n  wrapper = function toString() {\n    return String(this);\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'toString', wrapper);\n  this.setProperty(this.FUNCTION, 'toString',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  wrapper = function valueOf() {\n    return this.valueOf();\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'valueOf', wrapper);\n  this.setProperty(this.FUNCTION, 'valueOf',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Initialize the Object class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initObject = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Object constructor.\n  wrapper = function Object(value) {\n    if (value === undefined || value === null) {\n      // Create a new object.\n      if (thisInterpreter.calledWithNew()) {\n        // Called as `new Object()`.\n        return this;\n      } else {\n        // Called as `Object()`.\n        return thisInterpreter.createObjectProto(thisInterpreter.OBJECT_PROTO);\n      }\n    }\n    if (!(value instanceof Interpreter.Object)) {\n      // Wrap the value as an object.\n      var box = thisInterpreter.createObjectProto(\n          thisInterpreter.getPrototype(value));\n      box.data = value;\n      return box;\n    }\n    // Return the provided object.\n    return value;\n  };\n  this.OBJECT = this.createNativeFunction(wrapper, true);\n  // Throw away the created prototype and use the root prototype.\n  this.setProperty(this.OBJECT, 'prototype', this.OBJECT_PROTO,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.OBJECT_PROTO, 'constructor', this.OBJECT,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'Object', this.OBJECT,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  /**\n   * Checks if the provided value is null or undefined.\n   * If so, then throw an error in the call stack.\n   * @param {Interpreter.Value} value Value to check.\n   */\n  var throwIfNullUndefined = function(value) {\n    if (value === undefined || value === null) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          \"Cannot convert '\" + value + \"' to object\");\n    }\n  };\n\n  // Static methods on Object.\n  wrapper = function getOwnPropertyNames(obj) {\n    throwIfNullUndefined(obj);\n    var props = (obj instanceof Interpreter.Object) ? obj.properties : obj;\n    return thisInterpreter.arrayNativeToPseudo(\n        Object.getOwnPropertyNames(props));\n  };\n  this.setProperty(this.OBJECT, 'getOwnPropertyNames',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function keys(obj) {\n    throwIfNullUndefined(obj);\n    if (obj instanceof Interpreter.Object) {\n      obj = obj.properties;\n    }\n    return thisInterpreter.arrayNativeToPseudo(Object.keys(obj));\n  };\n  this.setProperty(this.OBJECT, 'keys',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function create_(proto) {\n    // Support for the second argument is the responsibility of a polyfill.\n    if (proto === null) {\n      return thisInterpreter.createObjectProto(null);\n    }\n    if (!(proto instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object prototype may only be an Object or null');\n    }\n    return thisInterpreter.createObjectProto(proto);\n  };\n  this.setProperty(this.OBJECT, 'create',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Add a polyfill to handle create's second argument.\n  this.polyfills_.push(\n\"(function() {\",\n  \"var create_ = Object.create;\",\n  \"Object.create = function create(proto, props) {\",\n    \"var obj = create_(proto);\",\n    \"props && Object.defineProperties(obj, props);\",\n    \"return obj;\",\n  \"};\",\n\"})();\",\n\"\");\n\n  wrapper = function defineProperty(obj, prop, descriptor) {\n    prop = String(prop);\n    if (!(obj instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object.defineProperty called on non-object');\n    }\n    if (!(descriptor instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Property description must be an object');\n    }\n    if (!obj.properties[prop] && obj.preventExtensions) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          \"Can't define property '\" + prop + \"', object is not extensible\");\n    }\n    // The polyfill guarantees no inheritance and no getter functions.\n    // Therefore the descriptor properties map is the native object needed.\n    thisInterpreter.setProperty(obj, prop, Interpreter.VALUE_IN_DESCRIPTOR,\n                                descriptor.properties);\n    return obj;\n  };\n  this.setProperty(this.OBJECT, 'defineProperty',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.polyfills_.push(\n// Flatten the descriptor to remove any inheritance or getter functions.\n\"(function() {\",\n  \"var defineProperty_ = Object.defineProperty;\",\n  \"Object.defineProperty = function defineProperty(obj, prop, d1) {\",\n    \"var d2 = {};\",\n    \"if ('configurable' in d1) d2.configurable = d1.configurable;\",\n    \"if ('enumerable' in d1) d2.enumerable = d1.enumerable;\",\n    \"if ('writable' in d1) d2.writable = d1.writable;\",\n    \"if ('value' in d1) d2.value = d1.value;\",\n    \"if ('get' in d1) d2.get = d1.get;\",\n    \"if ('set' in d1) d2.set = d1.set;\",\n    \"return defineProperty_(obj, prop, d2);\",\n  \"};\",\n\"})();\",\n\n\"Object.defineProperty(Object, 'defineProperties',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function defineProperties(obj, props) {\",\n    \"var keys = Object.keys(props);\",\n    \"for (var i = 0; i < keys.length; i++) {\",\n      \"Object.defineProperty(obj, keys[i], props[keys[i]]);\",\n    \"}\",\n    \"return obj;\",\n  \"}\",\n\"});\",\n\"\");\n\n  wrapper = function getOwnPropertyDescriptor(obj, prop) {\n    if (!(obj instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object.getOwnPropertyDescriptor called on non-object');\n    }\n    prop = String(prop);\n    if (!(prop in obj.properties)) {\n      return undefined;\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(obj.properties, prop);\n    var getter = obj.getter[prop];\n    var setter = obj.setter[prop];\n\n    var pseudoDescriptor =\n        thisInterpreter.createObjectProto(thisInterpreter.OBJECT_PROTO);\n    if (getter || setter) {\n      thisInterpreter.setProperty(pseudoDescriptor, 'get', getter);\n      thisInterpreter.setProperty(pseudoDescriptor, 'set', setter);\n    } else {\n      thisInterpreter.setProperty(pseudoDescriptor, 'value',\n          descriptor.value);\n      thisInterpreter.setProperty(pseudoDescriptor, 'writable',\n          descriptor.writable);\n    }\n    thisInterpreter.setProperty(pseudoDescriptor, 'configurable',\n        descriptor.configurable);\n    thisInterpreter.setProperty(pseudoDescriptor, 'enumerable',\n        descriptor.enumerable);\n    return pseudoDescriptor;\n  };\n  this.setProperty(this.OBJECT, 'getOwnPropertyDescriptor',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function getPrototypeOf(obj) {\n    throwIfNullUndefined(obj);\n    return thisInterpreter.getPrototype(obj);\n  };\n  this.setProperty(this.OBJECT, 'getPrototypeOf',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function isExtensible(obj) {\n    return Boolean(obj) && !obj.preventExtensions;\n  };\n  this.setProperty(this.OBJECT, 'isExtensible',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function preventExtensions(obj) {\n    if (obj instanceof Interpreter.Object) {\n      obj.preventExtensions = true;\n    }\n    return obj;\n  };\n  this.setProperty(this.OBJECT, 'preventExtensions',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Object.\n  this.setNativeFunctionPrototype(this.OBJECT, 'toString',\n      Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, 'toLocaleString',\n      Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, 'valueOf',\n      Interpreter.Object.prototype.valueOf);\n\n  wrapper = function hasOwnProperty(prop) {\n    throwIfNullUndefined(this);\n    if (this instanceof Interpreter.Object) {\n      return String(prop) in this.properties;\n    }\n    // Primitive.\n    return this.hasOwnProperty(prop);\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'hasOwnProperty', wrapper);\n\n  wrapper = function propertyIsEnumerable(prop) {\n    throwIfNullUndefined(this);\n    if (this instanceof Interpreter.Object) {\n      return Object.prototype.propertyIsEnumerable.call(this.properties, prop);\n    }\n    // Primitive.\n    return this.propertyIsEnumerable(prop);\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'propertyIsEnumerable', wrapper);\n\n  wrapper = function isPrototypeOf(obj) {\n    while (true) {\n      // Note, circular loops shouldn't be possible.\n      obj = thisInterpreter.getPrototype(obj);\n      if (!obj) {\n        // No parent; reached the top.\n        return false;\n      }\n      if (obj === this) {\n        return true;\n      }\n    }\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'isPrototypeOf',  wrapper);\n};\n\n/**\n * Initialize the Array class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initArray = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Array constructor.\n  wrapper = function Array(var_args) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Array()`.\n      var newArray = this;\n    } else {\n      // Called as `Array()`.\n      var newArray = thisInterpreter.createArray();\n    }\n    var first = arguments[0];\n    if (arguments.length === 1 && typeof first === 'number') {\n      if (isNaN(Interpreter.legalArrayLength(first))) {\n        thisInterpreter.throwException(thisInterpreter.RANGE_ERROR,\n                                       'Invalid array length');\n      }\n      newArray.properties.length = first;\n    } else {\n      for (var i = 0; i < arguments.length; i++) {\n        newArray.properties[i] = arguments[i];\n      }\n      newArray.properties.length = i;\n    }\n    return newArray;\n  };\n  this.ARRAY = this.createNativeFunction(wrapper, true);\n  this.ARRAY_PROTO = this.ARRAY.properties['prototype'];\n  this.setProperty(globalObject, 'Array', this.ARRAY,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Static methods on Array.\n  wrapper = function isArray(obj) {\n    return obj && obj.class === 'Array';\n  };\n  this.setProperty(this.ARRAY, 'isArray',\n                   this.createNativeFunction(wrapper, false),\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Array.\n  this.setProperty(this.ARRAY_PROTO, 'length', 0,\n      {configurable: false, enumerable: false, writable: true});\n  this.ARRAY_PROTO.class = 'Array';\n\n  this.polyfills_.push(\n\"Object.defineProperty(Array.prototype, 'pop',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function pop() {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (!len || len < 0) {\",\n      \"o.length = 0;\",\n      \"return undefined;\",\n    \"}\",\n    \"len--;\",\n    \"var x = o[len];\",\n    \"delete o[len];\",  // Needed for non-arrays.\n    \"o.length = len;\",\n    \"return x;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'push',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function push(var_args) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"for (var i = 0; i < arguments.length; i++) {\",\n      \"o[len] = arguments[i];\",\n      \"len++;\",\n    \"}\",\n    \"o.length = len;\",\n    \"return len;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'shift',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function shift() {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (!len || len < 0) {\",\n      \"o.length = 0;\",\n      \"return undefined;\",\n    \"}\",\n    \"var value = o[0];\",\n    \"for (var i = 0; i < len - 1; i++) {\",\n      \"if ((i + 1) in o) {\",\n        \"o[i] = o[i + 1];\",\n      \"} else {\",\n        \"delete o[i];\",\n      \"}\",\n    \"}\",\n    \"delete o[i];\",  // Needed for non-arrays.\n    \"o.length = len - 1;\",\n    \"return value;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'unshift',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function unshift(var_args) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (!len || len < 0) {\",\n      \"len = 0;\",\n    \"}\",\n    \"for (var i = len - 1; i >= 0; i--) {\",\n      \"if (i in o) {\",\n        \"o[i + arguments.length] = o[i];\",\n      \"} else {\",\n        \"delete o[i + arguments.length];\",\n      \"}\",\n    \"}\",\n    \"for (var i = 0; i < arguments.length; i++) {\",\n      \"o[i] = arguments[i];\",\n    \"}\",\n    \"return (o.length = len + arguments.length);\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'reverse',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function reverse() {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (!len || len < 2) {\",\n      \"return o;\",  // Not an array, or too short to reverse.\n    \"}\",\n    \"for (var i = 0; i < len / 2 - 0.5; i++) {\",\n      \"var x = o[i];\",\n      \"var hasX = i in o;\",\n      \"if ((len - i - 1) in o) {\",\n        \"o[i] = o[len - i - 1];\",\n      \"} else {\",\n        \"delete o[i];\",\n      \"}\",\n      \"if (hasX) {\",\n        \"o[len - i - 1] = x;\",\n      \"} else {\",\n        \"delete o[len - i - 1];\",\n      \"}\",\n    \"}\",\n    \"return o;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'indexOf',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function indexOf(searchElement, fromIndex) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"var n = fromIndex | 0;\",\n    \"if (!len || n >= len) {\",\n      \"return -1;\",\n    \"}\",\n    \"var i = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\",\n    \"while (i < len) {\",\n      \"if (i in o && o[i] === searchElement) {\",\n        \"return i;\",\n      \"}\",\n      \"i++;\",\n    \"}\",\n    \"return -1;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'lastIndexOf',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function lastIndexOf(searchElement, fromIndex) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (!len) {\",\n      \"return -1;\",\n    \"}\",\n    \"var n = len - 1;\",\n    \"if (arguments.length > 1) {\",\n      \"n = fromIndex | 0;\",\n      \"if (n) {\",\n        \"n = (n > 0 || -1) * Math.floor(Math.abs(n));\",\n      \"}\",\n    \"}\",\n    \"var i = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\",\n    \"while (i >= 0) {\",\n      \"if (i in o && o[i] === searchElement) {\",\n        \"return i;\",\n      \"}\",\n      \"i--;\",\n    \"}\",\n    \"return -1;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'slice',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function slice(start, end) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    // Handle negative value for \"start\"\n    \"start |= 0;\",\n    \"start = (start >= 0) ? start : Math.max(0, len + start);\",\n    // Handle negative value for \"end\"\n    \"if (typeof end !== 'undefined') {\",\n      \"if (end !== Infinity) {\",\n        \"end |= 0;\",\n      \"}\",\n      \"if (end < 0) {\",\n        \"end = len + end;\",\n      \"} else {\",\n        \"end = Math.min(end, len);\",\n      \"}\",\n    \"} else {\",\n      \"end = len;\",\n    \"}\",\n    \"var size = end - start;\",\n    \"var cloned = new Array(size);\",\n    \"for (var i = 0; i < size; i++) {\",\n      \"if ((start + i) in o) {\",\n        \"cloned[i] = o[start + i];\",\n      \"}\",\n    \"}\",\n    \"return cloned;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'splice',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function splice(start, deleteCount, var_args) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"start |= 0;\",\n    \"if (start < 0) {\",\n      \"start = Math.max(len + start, 0);\",\n    \"} else {\",\n      \"start = Math.min(start, len);\",\n    \"}\",\n    \"if (arguments.length < 1) {\",\n      \"deleteCount = len - start;\",\n    \"} else {\",\n      \"deleteCount |= 0;\",\n      \"deleteCount = Math.max(0, Math.min(deleteCount, len - start));\",\n    \"}\",\n    \"var removed = [];\",\n    // Remove specified elements.\n    \"for (var i = start; i < start + deleteCount; i++) {\",\n      \"if (i in o) {\",\n        \"removed.push(o[i]);\",\n      \"} else {\",\n        \"removed.length++;\",\n      \"}\",\n      \"if ((i + deleteCount) in o) {\",\n        \"o[i] = o[i + deleteCount];\",\n      \"} else {\",\n        \"delete o[i];\",\n      \"}\",\n    \"}\",\n    // Move other element to fill the gap.\n    \"for (var i = start + deleteCount; i < len - deleteCount; i++) {\",\n      \"if ((i + deleteCount) in o) {\",\n        \"o[i] = o[i + deleteCount];\",\n      \"} else {\",\n        \"delete o[i];\",\n      \"}\",\n    \"}\",\n    // Delete superfluous properties.\n    \"for (var i = len - deleteCount; i < len; i++) {\",\n      \"delete o[i];\",\n    \"}\",\n    \"len -= deleteCount;\",\n    // Insert specified items.\n    \"var arl = arguments.length - 2;\",\n    \"for (var i = len - 1; i >= start; i--) {\",\n      \"if (i in o) {\",\n        \"o[i + arl] = o[i];\",\n      \"} else {\",\n        \"delete o[i + arl];\",\n      \"}\",\n    \"}\",\n    \"len += arl;\",\n    \"for (var i = 2; i < arguments.length; i++) {\",\n      \"o[start + i - 2] = arguments[i];\",\n    \"}\",\n    \"o.length = len;\",\n    \"return removed;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'concat',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function concat(var_args) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var cloned = [];\",\n    \"for (var i = -1; i < arguments.length; i++) {\",\n      \"var value = (i === -1) ? o : arguments[i];\",\n      \"if (Array.isArray(value)) {\",\n        \"for (var j = 0, l = value.length; j < l; j++) {\",\n          \"if (j in value) {\",\n            \"cloned.push(value[j]);\",\n          \"} else {\",\n            \"cloned.length++;\",\n          \"}\",\n        \"}\",\n      \"} else {\",\n        \"cloned.push(value);\",\n      \"}\",\n    \"}\",\n    \"return cloned;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'join',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function join(opt_separator) {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var sep = typeof opt_separator === 'undefined' ?\",\n        \"',' : ('' + opt_separator);\",\n    \"var str = '';\",\n    \"for (var i = 0; i < o.length; i++) {\",\n      \"if (i && sep) {\",\n        \"str += sep;\",\n      \"}\",\n      \"str += (o[i] === null || o[i] === undefined) ? '' : o[i];\",\n    \"}\",\n    \"return str;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/every\n\"Object.defineProperty(Array.prototype, 'every',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function every(callbackfn, thisArg) {\",\n    \"if (!this || typeof callbackfn !== 'function') throw TypeError();\",\n    \"var t, k;\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (arguments.length > 1) t = thisArg;\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n      \"if (k in o && !callbackfn.call(t, o[k], k, o)) return false;\",\n      \"k++;\",\n    \"}\",\n    \"return true;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n\"Object.defineProperty(Array.prototype, 'filter',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function filter(fun, var_args) {\",\n    \"if (this === void 0 || this === null || typeof fun !== 'function') throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"var res = [];\",\n    \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n    \"for (var i = 0; i < len; i++) {\",\n      \"if (i in o) {\",\n        \"var val = o[i];\",\n        \"if (fun.call(thisArg, val, i, o)) res.push(val);\",\n      \"}\",\n    \"}\",\n    \"return res;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n\"Object.defineProperty(Array.prototype, 'forEach',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function forEach(callback, thisArg) {\",\n    \"if (!this || typeof callback !== 'function') throw TypeError();\",\n    \"var t, k;\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (arguments.length > 1) t = thisArg;\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n      \"if (k in o) callback.call(t, o[k], k, o);\",\n      \"k++;\",\n    \"}\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n\"Object.defineProperty(Array.prototype, 'map',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function map(callback, thisArg) {\",\n    \"if (!this || typeof callback !== 'function') throw TypeError();\",\n    \"var t, a, k;\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (arguments.length > 1) t = thisArg;\",\n    \"a = new Array(len);\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n      \"if (k in o) a[k] = callback.call(t, o[k], k, o);\",\n      \"k++;\",\n    \"}\",\n    \"return a;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n\"Object.defineProperty(Array.prototype, 'reduce',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function reduce(callback /*, initialValue*/) {\",\n    \"if (!this || typeof callback !== 'function') throw TypeError();\",\n    \"var o = Object(this), len = o.length >>> 0, k = 0, value;\",\n    \"if (arguments.length === 2) {\",\n      \"value = arguments[1];\",\n    \"} else {\",\n      \"while (k < len && !(k in o)) k++;\",\n      \"if (k >= len) {\",\n        \"throw TypeError('Reduce of empty array with no initial value');\",\n      \"}\",\n      \"value = o[k++];\",\n    \"}\",\n    \"for (; k < len; k++) {\",\n      \"if (k in o) value = callback(value, o[k], k, o);\",\n    \"}\",\n    \"return value;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight\n\"Object.defineProperty(Array.prototype, 'reduceRight',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function reduceRight(callback /*, initialValue*/) {\",\n    \"if (null === this || 'undefined' === typeof this || 'function' !== typeof callback) throw TypeError();\",\n    \"var o = Object(this), len = o.length >>> 0, k = len - 1, value;\",\n    \"if (arguments.length >= 2) {\",\n      \"value = arguments[1];\",\n    \"} else {\",\n      \"while (k >= 0 && !(k in o)) k--;\",\n      \"if (k < 0) {\",\n        \"throw TypeError('Reduce of empty array with no initial value');\",\n      \"}\",\n      \"value = o[k--];\",\n    \"}\",\n    \"for (; k >= 0; k--) {\",\n      \"if (k in o) value = callback(value, o[k], k, o);\",\n    \"}\",\n    \"return value;\",\n  \"}\",\n\"});\",\n\n// Polyfill copied from:\n// developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n\"Object.defineProperty(Array.prototype, 'some',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function some(fun/*, thisArg*/) {\",\n    \"if (!this || typeof fun !== 'function') throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n    \"for (var i = 0; i < len; i++) {\",\n      \"if (i in o && fun.call(thisArg, o[i], i, o)) {\",\n        \"return true;\",\n      \"}\",\n    \"}\",\n    \"return false;\",\n  \"}\",\n\"});\",\n\n\n\"Object.defineProperty(Array.prototype, 'sort',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function sort(opt_comp) {\",  // Bubble sort!\n    \"if (!this) throw TypeError();\",\n    \"if (typeof opt_comp !== 'function') {\",\n      \"opt_comp = undefined;\",\n    \"}\",\n    \"for (var i = 0; i < this.length; i++) {\",\n      \"var changes = 0;\",\n      \"for (var j = 0; j < this.length - i - 1; j++) {\",\n        \"if (opt_comp ? (opt_comp(this[j], this[j + 1]) > 0) :\",\n            \"(String(this[j]) > String(this[j + 1]))) {\",\n          \"var swap = this[j];\",\n          \"var hasSwap = j in this;\",\n          \"if ((j + 1) in this) {\",\n            \"this[j] = this[j + 1];\",\n          \"} else {\",\n            \"delete this[j];\",\n          \"}\",\n          \"if (hasSwap) {\",\n            \"this[j + 1] = swap;\",\n          \"} else {\",\n            \"delete this[j + 1];\",\n          \"}\",\n          \"changes++;\",\n        \"}\",\n      \"}\",\n      \"if (!changes) break;\",\n    \"}\",\n    \"return this;\",\n  \"}\",\n\"});\",\n\n\"Object.defineProperty(Array.prototype, 'toLocaleString',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function toLocaleString() {\",\n    \"if (!this) throw TypeError();\",\n    \"var o = Object(this);\",\n    \"var out = [];\",\n    \"for (var i = 0; i < o.length; i++) {\",\n      \"out[i] = (o[i] === null || o[i] === undefined) ? '' : o[i].toLocaleString();\",\n    \"}\",\n    \"return out.join(',');\",\n  \"}\",\n\"});\",\n\"\");\n};\n\n/**\n * Initialize the String class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initString = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // String constructor.\n  wrapper = function String(value) {\n    value = arguments.length ? Interpreter.nativeGlobal.String(value) : '';\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new String()`.\n      this.data = value;\n      return this;\n    } else {\n      // Called as `String()`.\n      return value;\n    }\n  };\n  this.STRING = this.createNativeFunction(wrapper, true);\n  this.setProperty(globalObject, 'String', this.STRING,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Static methods on String.\n  this.setProperty(this.STRING, 'fromCharCode',\n      this.createNativeFunction(String.fromCharCode, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on String.\n  // Methods with exclusively primitive arguments.\n  var functions = ['charAt', 'charCodeAt', 'concat', 'indexOf', 'lastIndexOf',\n      'slice', 'substr', 'substring', 'toLocaleLowerCase', 'toLocaleUpperCase',\n      'toLowerCase', 'toUpperCase', 'trim'];\n  for (var i = 0; i < functions.length; i++) {\n    this.setNativeFunctionPrototype(this.STRING, functions[i],\n                                    String.prototype[functions[i]]);\n  }\n\n  wrapper = function localeCompare(compareString, locales, options) {\n    locales = thisInterpreter.pseudoToNative(locales);\n    options = thisInterpreter.pseudoToNative(options);\n    try {\n      return String(this).localeCompare(compareString, locales, options);\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.ERROR,\n          'localeCompare: ' + e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.STRING, 'localeCompare', wrapper);\n\n  wrapper = function split(separator, limit, callback) {\n    var string = String(this);\n    limit = limit ? Number(limit) : undefined;\n    // Example of catastrophic split RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.split(/^(a+)+b/)\n    if (thisInterpreter.isa(separator, thisInterpreter.REGEXP)) {\n      separator = separator.data;\n      thisInterpreter.maybeThrowRegExp(separator, callback);\n      if (thisInterpreter['REGEXP_MODE'] === 2) {\n        if (Interpreter.vm) {\n          // Run split in vm.\n          var sandbox = {\n            'string': string,\n            'separator': separator,\n            'limit': limit,\n          };\n          var code = 'string.split(separator, limit)';\n          var jsList =\n              thisInterpreter.vmCall(code, sandbox, separator, callback);\n          if (jsList !== Interpreter.REGEXP_TIMEOUT) {\n            callback(thisInterpreter.arrayNativeToPseudo(jsList));\n          }\n        } else {\n          // Run split in separate thread.\n          var splitWorker = thisInterpreter.createWorker();\n          var pid = thisInterpreter.regExpTimeout(separator, splitWorker,\n              callback);\n          splitWorker.onmessage = function(e) {\n            clearTimeout(pid);\n            callback(thisInterpreter.arrayNativeToPseudo(e.data));\n          };\n          splitWorker.postMessage(['split', string, separator, limit]);\n        }\n        return;\n      }\n    }\n    // Run split natively.\n    var jsList = string.split(separator, limit);\n    callback(thisInterpreter.arrayNativeToPseudo(jsList));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'split', wrapper);\n\n  wrapper = function match(regexp, callback) {\n    var string = String(this);\n    if (thisInterpreter.isa(regexp, thisInterpreter.REGEXP)) {\n      regexp = regexp.data;\n    } else {\n      regexp = new RegExp(regexp);\n    }\n    // Example of catastrophic match RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.match(/^(a+)+b/)\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter['REGEXP_MODE'] === 2) {\n      if (Interpreter.vm) {\n        // Run match in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp,\n        };\n        var code = 'string.match(regexp)';\n        var m = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (m !== Interpreter.REGEXP_TIMEOUT) {\n          callback(m && thisInterpreter.arrayNativeToPseudo(m));\n        }\n      } else {\n        // Run match in separate thread.\n        var matchWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, matchWorker, callback);\n        matchWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          callback(e.data && thisInterpreter.arrayNativeToPseudo(e.data));\n        };\n        matchWorker.postMessage(['match', string, regexp]);\n      }\n      return;\n    }\n    // Run match natively.\n    var m = string.match(regexp);\n    callback(m && thisInterpreter.arrayNativeToPseudo(m));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'match', wrapper);\n\n  wrapper = function search(regexp, callback) {\n    var string = String(this);\n    if (thisInterpreter.isa(regexp, thisInterpreter.REGEXP)) {\n      regexp = regexp.data;\n    } else {\n      regexp = new RegExp(regexp);\n    }\n    // Example of catastrophic search RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.search(/^(a+)+b/)\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter['REGEXP_MODE'] === 2) {\n      if (Interpreter.vm) {\n        // Run search in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp\n        };\n        var code = 'string.search(regexp)';\n        var n = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (n !== Interpreter.REGEXP_TIMEOUT) {\n          callback(n);\n        }\n      } else {\n        // Run search in separate thread.\n        var searchWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, searchWorker, callback);\n        searchWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          callback(e.data);\n        };\n        searchWorker.postMessage(['search', string, regexp]);\n      }\n      return;\n    }\n    // Run search natively.\n    callback(string.search(regexp));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'search', wrapper);\n\n  wrapper = function replace_(substr, newSubstr, callback) {\n    // Support for function replacements is the responsibility of a polyfill.\n    var string = String(this);\n    newSubstr = String(newSubstr);\n    // Example of catastrophic replace RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.replace(/^(a+)+b/, '')\n    if (thisInterpreter.isa(substr, thisInterpreter.REGEXP)) {\n      substr = substr.data;\n      thisInterpreter.maybeThrowRegExp(substr, callback);\n      if (thisInterpreter['REGEXP_MODE'] === 2) {\n        if (Interpreter.vm) {\n          // Run replace in vm.\n          var sandbox = {\n            'string': string,\n            'substr': substr,\n            'newSubstr': newSubstr,\n          };\n          var code = 'string.replace(substr, newSubstr)';\n          var str = thisInterpreter.vmCall(code, sandbox, substr, callback);\n          if (str !== Interpreter.REGEXP_TIMEOUT) {\n            callback(str);\n          }\n        } else {\n          // Run replace in separate thread.\n          var replaceWorker = thisInterpreter.createWorker();\n          var pid = thisInterpreter.regExpTimeout(substr, replaceWorker,\n              callback);\n          replaceWorker.onmessage = function(e) {\n            clearTimeout(pid);\n            callback(e.data);\n          };\n          replaceWorker.postMessage(['replace', string, substr, newSubstr]);\n        }\n        return;\n      }\n    }\n    // Run replace natively.\n    callback(string.replace(substr, newSubstr));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'replace', wrapper);\n  // Add a polyfill to handle replace's second argument being a function.\n  this.polyfills_.push(\n\"(function() {\",\n  \"var replace_ = String.prototype.replace;\",\n  \"String.prototype.replace = function replace(substr, newSubstr) {\",\n    \"if (typeof newSubstr !== 'function') {\",\n      // string.replace(string|regexp, string)\n      \"return replace_.call(this, substr, newSubstr);\",\n    \"}\",\n    \"var str = this;\",\n    \"if (substr instanceof RegExp) {\",  // string.replace(regexp, function)\n      \"var subs = [];\",\n      \"var m = substr.exec(str);\",\n      \"while (m) {\",\n        \"m.push(m.index, str);\",\n        \"var inject = newSubstr.apply(null, m);\",\n        \"subs.push([m.index, m[0].length, inject]);\",\n        \"m = substr.global ? substr.exec(str) : null;\",\n      \"}\",\n      \"for (var i = subs.length - 1; i >= 0; i--) {\",\n        \"str = str.substring(0, subs[i][0]) + subs[i][2] + \" +\n            \"str.substring(subs[i][0] + subs[i][1]);\",\n      \"}\",\n    \"} else {\",                         // string.replace(string, function)\n      \"var i = str.indexOf(substr);\",\n      \"if (i !== -1) {\",\n        \"var inject = newSubstr(str.substr(i, substr.length), i, str);\",\n        \"str = str.substring(0, i) + inject + \" +\n            \"str.substring(i + substr.length);\",\n      \"}\",\n    \"}\",\n    \"return str;\",\n  \"};\",\n\"})();\",\n\"\");\n};\n\n/**\n * Initialize the Boolean class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initBoolean = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Boolean constructor.\n  wrapper = function Boolean(value) {\n    value = Interpreter.nativeGlobal.Boolean(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Boolean()`.\n      this.data = value;\n      return this;\n    } else {\n      // Called as `Boolean()`.\n      return value;\n    }\n  };\n  this.BOOLEAN = this.createNativeFunction(wrapper, true);\n  this.setProperty(globalObject, 'Boolean', this.BOOLEAN,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Initialize the Number class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initNumber = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Number constructor.\n  wrapper = function Number(value) {\n    value = arguments.length ? Interpreter.nativeGlobal.Number(value) : 0;\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Number()`.\n      this.data = value;\n      return this;\n    } else {\n      // Called as `Number()`.\n      return value;\n    }\n  };\n  this.NUMBER = this.createNativeFunction(wrapper, true);\n  this.setProperty(globalObject, 'Number', this.NUMBER,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var numConsts = ['MAX_VALUE', 'MIN_VALUE', 'NaN', 'NEGATIVE_INFINITY',\n                   'POSITIVE_INFINITY'];\n  for (var i = 0; i < numConsts.length; i++) {\n    this.setProperty(this.NUMBER, numConsts[i], Number[numConsts[i]],\n        Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n\n  // Instance methods on Number.\n  wrapper = function toExponential(fractionDigits) {\n    try {\n      return Number(this).toExponential(fractionDigits);\n    } catch (e) {\n      // Throws if fractionDigits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toExponential', wrapper);\n\n  wrapper = function toFixed(digits) {\n    try {\n      return Number(this).toFixed(digits);\n    } catch (e) {\n      // Throws if digits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toFixed', wrapper);\n\n  wrapper = function toPrecision(precision) {\n    try {\n      return Number(this).toPrecision(precision);\n    } catch (e) {\n      // Throws if precision isn't within range (depends on implementation).\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toPrecision', wrapper);\n\n  wrapper = function toString(radix) {\n    try {\n      return Number(this).toString(radix);\n    } catch (e) {\n      // Throws if radix isn't within 2-36.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toString', wrapper);\n\n  wrapper = function toLocaleString(locales, options) {\n    locales = locales ? thisInterpreter.pseudoToNative(locales) : undefined;\n    options = options ? thisInterpreter.pseudoToNative(options) : undefined;\n    return Number(this).toLocaleString(locales, options);\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toLocaleString', wrapper);\n};\n\n/**\n * Initialize the Date class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initDate = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Date constructor.\n  wrapper = function Date(_value, var_args) {\n    if (!thisInterpreter.calledWithNew()) {\n      // Called as `Date()`.\n      // Calling Date() as a function returns a string, no arguments are heeded.\n      return Interpreter.nativeGlobal.Date();\n    }\n    // Called as `new Date(...)`.\n    var args = [null].concat(Array.from(arguments));\n    this.data = new (Function.prototype.bind.apply(\n        Interpreter.nativeGlobal.Date, args));\n    return this;\n  };\n  this.DATE = this.createNativeFunction(wrapper, true);\n  this.DATE_PROTO = this.DATE.properties['prototype'];\n  this.setProperty(globalObject, 'Date', this.DATE,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Static methods on Date.\n  this.setProperty(this.DATE, 'now', this.createNativeFunction(Date.now, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.DATE, 'parse',\n      this.createNativeFunction(Date.parse, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.DATE, 'UTC', this.createNativeFunction(Date.UTC, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Date.\n  var functions = ['getDate', 'getDay', 'getFullYear', 'getHours',\n      'getMilliseconds', 'getMinutes', 'getMonth', 'getSeconds', 'getTime',\n      'getTimezoneOffset', 'getUTCDate', 'getUTCDay', 'getUTCFullYear',\n      'getUTCHours', 'getUTCMilliseconds', 'getUTCMinutes', 'getUTCMonth',\n      'getUTCSeconds', 'getYear',\n      'setDate', 'setFullYear', 'setHours', 'setMilliseconds',\n      'setMinutes', 'setMonth', 'setSeconds', 'setTime', 'setUTCDate',\n      'setUTCFullYear', 'setUTCHours', 'setUTCMilliseconds', 'setUTCMinutes',\n      'setUTCMonth', 'setUTCSeconds', 'setYear',\n      'toDateString', 'toISOString', 'toJSON', 'toGMTString',\n      'toLocaleDateString', 'toLocaleString', 'toLocaleTimeString',\n      'toTimeString', 'toUTCString'];\n  for (var i = 0; i < functions.length; i++) {\n    wrapper = (function(nativeFunc) {\n      return function(var_args) {\n        var date = this.data;\n        if (!(date instanceof Date)) {\n          thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n              nativeFunc + ' not called on a Date');\n        }\n        var args = [];\n        for (var i = 0; i < arguments.length; i++) {\n          args[i] = thisInterpreter.pseudoToNative(arguments[i]);\n        }\n        return date[nativeFunc].apply(date, args);\n      };\n    })(functions[i]);\n    this.setNativeFunctionPrototype(this.DATE, functions[i], wrapper);\n  }\n};\n\n/**\n * Initialize Regular Expression object.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initRegExp = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // RegExp constructor.\n  wrapper = function RegExp(pattern, flags) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new RegExp()`.\n      var rgx = this;\n    } else {\n      // Called as `RegExp()`.\n      if (flags === undefined &&\n          thisInterpreter.isa(pattern, thisInterpreter.REGEXP)) {\n        // Regexp(/foo/) returns the same obj.\n        return pattern;\n      }\n      var rgx = thisInterpreter.createObjectProto(thisInterpreter.REGEXP_PROTO);\n    }\n    pattern = pattern === undefined ? '' : String(pattern);\n    flags = flags ? String(flags) : '';\n    if (!/^[gmi]*$/.test(flags)) {\n      // Don't allow ES6 flags 'y' and 's' to pass through.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, 'Invalid regexp flag');\n    }\n    try {\n      var nativeRegExp = new Interpreter.nativeGlobal.RegExp(pattern, flags)\n    } catch (e) {\n      // Throws if flags are repeated.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, e.message);\n    }\n    thisInterpreter.populateRegExp(rgx, nativeRegExp);\n    return rgx;\n  };\n  this.REGEXP = this.createNativeFunction(wrapper, true);\n  this.REGEXP_PROTO = this.REGEXP.properties['prototype'];\n  this.setProperty(globalObject, 'RegExp', this.REGEXP,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.REGEXP.properties['prototype'], 'global', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'ignoreCase', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'multiline', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'source', '(?:)',\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n\n  // Use polyfill to avoid complexity of regexp threads.\n  this.polyfills_.push(\n\"Object.defineProperty(RegExp.prototype, 'test',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function test(str) {\",\n    \"return !!this.exec(str);\",\n  \"}\",\n\"});\");\n\n  wrapper = function exec(string, callback) {\n    var regexp = this.data;\n    string = String(string);\n    // Get lastIndex from wrapped regexp, since this is settable.\n    regexp.lastIndex = Number(thisInterpreter.getProperty(this, 'lastIndex'));\n    // Example of catastrophic exec RegExp:\n    // /^(a+)+b/.exec('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac')\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter['REGEXP_MODE'] === 2) {\n      if (Interpreter.vm) {\n        // Run exec in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp,\n        };\n        var code = 'regexp.exec(string)';\n        var match = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (match !== Interpreter.REGEXP_TIMEOUT) {\n          thisInterpreter.setProperty(this, 'lastIndex', regexp.lastIndex);\n          callback(matchToPseudo(match));\n        }\n      } else {\n        // Run exec in separate thread.\n        // Note that lastIndex is not preserved when a RegExp is passed to a\n        // Web Worker.  Thus it needs to be passed back and forth separately.\n        var execWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, execWorker, callback);\n        var thisPseudoRegExp = this;\n        execWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          // Return tuple: [result, lastIndex]\n          thisInterpreter.setProperty(thisPseudoRegExp, 'lastIndex', e.data[1]);\n          callback(matchToPseudo(e.data[0]));\n        };\n        execWorker.postMessage(['exec', regexp, regexp.lastIndex, string]);\n      }\n      return;\n    }\n    // Run exec natively.\n    var match = regexp.exec(string);\n    thisInterpreter.setProperty(this, 'lastIndex', regexp.lastIndex);\n    callback(matchToPseudo(match));\n\n    function matchToPseudo(match) {\n      if (match) {\n        var result = thisInterpreter.arrayNativeToPseudo(match);\n        // match has additional properties.\n        thisInterpreter.setProperty(result, 'index', match.index);\n        thisInterpreter.setProperty(result, 'input', match.input);\n        return result;\n      }\n      return null;\n    }\n  };\n  this.setAsyncFunctionPrototype(this.REGEXP, 'exec', wrapper);\n};\n\n/**\n * Initialize the Error class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initError = function(globalObject) {\n  var thisInterpreter = this;\n  // Error constructor.\n  this.ERROR = this.createNativeFunction(function Error(opt_message) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Error()`.\n      var newError = this;\n    } else {\n      // Called as `Error()`.\n      var newError = thisInterpreter.createObject(thisInterpreter.ERROR);\n    }\n    thisInterpreter.populateError(newError, opt_message);\n    return newError;\n  }, true);\n  this.setProperty(globalObject, 'Error', this.ERROR,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.ERROR.properties['prototype'], 'message', '',\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.ERROR.properties['prototype'], 'name', 'Error',\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var createErrorSubclass = function(name) {\n    var constructor = thisInterpreter.createNativeFunction(\n        function(opt_message) {\n          if (thisInterpreter.calledWithNew()) {\n            // Called as `new XyzError()`.\n            var newError = this;\n          } else {\n            // Called as `XyzError()`.\n            var newError = thisInterpreter.createObject(constructor);\n          }\n          thisInterpreter.populateError(newError, opt_message);\n          return newError;\n        }, true);\n    thisInterpreter.setProperty(constructor, 'prototype',\n        thisInterpreter.createObject(thisInterpreter.ERROR),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n    thisInterpreter.setProperty(constructor.properties['prototype'], 'name',\n        name, Interpreter.NONENUMERABLE_DESCRIPTOR);\n    thisInterpreter.setProperty(globalObject, name, constructor,\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n    return constructor;\n  };\n\n  this.EVAL_ERROR = createErrorSubclass('EvalError');\n  this.RANGE_ERROR = createErrorSubclass('RangeError');\n  this.REFERENCE_ERROR = createErrorSubclass('ReferenceError');\n  this.SYNTAX_ERROR = createErrorSubclass('SyntaxError');\n  this.TYPE_ERROR = createErrorSubclass('TypeError');\n  this.URI_ERROR = createErrorSubclass('URIError');\n};\n\n/**\n * Initialize Math object.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initMath = function(globalObject) {\n  var myMath = this.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(globalObject, 'Math', myMath,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  var mathConsts = ['E', 'LN2', 'LN10', 'LOG2E', 'LOG10E', 'PI',\n                    'SQRT1_2', 'SQRT2'];\n  for (var i = 0; i < mathConsts.length; i++) {\n    this.setProperty(myMath, mathConsts[i], Math[mathConsts[i]],\n        Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n  var numFunctions = ['abs', 'acos', 'asin', 'atan', 'atan2', 'ceil', 'cos',\n                      'exp', 'floor', 'log', 'max', 'min', 'pow', 'random',\n                      'round', 'sin', 'sqrt', 'tan'];\n  for (var i = 0; i < numFunctions.length; i++) {\n    this.setProperty(myMath, numFunctions[i],\n        this.createNativeFunction(Math[numFunctions[i]], false),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n};\n\n/**\n * Initialize JSON object.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initJSON = function(globalObject) {\n  var thisInterpreter = this;\n  var myJSON = thisInterpreter.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(globalObject, 'JSON', myJSON,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var wrapper = function parse(text) {\n    try {\n      var nativeObj = JSON.parse(String(text));\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, e.message);\n    }\n    return thisInterpreter.nativeToPseudo(nativeObj);\n  };\n  this.setProperty(myJSON, 'parse', this.createNativeFunction(wrapper, false));\n\n  wrapper = function stringify(value, replacer, space) {\n    if (replacer && replacer.class === 'Function') {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Function replacer on JSON.stringify not supported');\n    } else if (replacer && replacer.class === 'Array') {\n      replacer = thisInterpreter.arrayPseudoToNative(replacer);\n      replacer = replacer.filter(function(word) {\n        // Spec says we should also support boxed primitives here.\n        return typeof word === 'string' || typeof word === 'number';\n      });\n    } else {\n      replacer = null;\n    }\n    // Spec says we should also support boxed primitives here.\n    if (typeof space !== 'string' && typeof space !== 'number') {\n      space = undefined;\n    }\n\n    var nativeObj = thisInterpreter.pseudoToNative(value);\n    try {\n      var str = JSON.stringify(nativeObj, replacer, space);\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, e.message);\n    }\n    return str;\n  };\n  this.setProperty(myJSON, 'stringify',\n      this.createNativeFunction(wrapper, false));\n};\n\n/**\n * Is an object of a certain class?\n * @param {Interpreter.Value} child Object to check.\n * @param {Interpreter.Object} constructor Constructor of object.\n * @return {boolean} True if object is the class or inherits from it.\n *     False otherwise.\n */\nInterpreter.prototype.isa = function(child, constructor) {\n  if (child === null || child === undefined || !constructor) {\n    return false;\n  }\n  var proto = constructor.properties['prototype'];\n  if (child === proto) {\n    return true;\n  }\n  // The first step up the prototype chain is harder since the child might be\n  // a primitive value.  Subsequent steps can just follow the .proto property.\n  child = this.getPrototype(child);\n  while (child) {\n    if (child === proto) {\n      return true;\n    }\n    child = child.proto;\n  }\n  return false;\n};\n\n/**\n * Initialize a pseudo regular expression object based on a native regular\n * expression object.\n * @param {!Interpreter.Object} pseudoRegexp The existing object to set.\n * @param {!RegExp} nativeRegexp The native regular expression.\n */\nInterpreter.prototype.populateRegExp = function(pseudoRegexp, nativeRegexp) {\n  pseudoRegexp.data = new RegExp(nativeRegexp.source, nativeRegexp.flags);\n  // lastIndex is settable, all others are read-only attributes\n  this.setProperty(pseudoRegexp, 'lastIndex', nativeRegexp.lastIndex,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'source', nativeRegexp.source,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'global', nativeRegexp.global,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'ignoreCase', nativeRegexp.ignoreCase,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'multiline', nativeRegexp.multiline,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Initialize a pseudo error object.\n * @param {!Interpreter.Object} pseudoError The existing object to set.\n * @param {string=} opt_message Error's message.\n */\nInterpreter.prototype.populateError = function(pseudoError, opt_message) {\n  if (opt_message) {\n    this.setProperty(pseudoError, 'message', String(opt_message),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n  var tracebackData = [];\n  for (var i = this.stateStack.length - 1; i >= 0; i--) {\n    var state = this.stateStack[i];\n    var node = state.node;\n    if (node['type'] === 'CallExpression') {\n      var func = state.func_;\n      if (func && tracebackData.length) {\n        tracebackData[tracebackData.length - 1].datumName =\n            this.getProperty(func, 'name');\n      }\n    }\n    if (node['loc'] &&\n        (!tracebackData.length || node['type'] === 'CallExpression')) {\n      tracebackData.push({datumLoc: node['loc']});\n    }\n  }\n  var errorName = String(this.getProperty(pseudoError, 'name'));\n  var errorMessage = String(this.getProperty(pseudoError, 'message'));\n  var stackString = errorName + ': ' + errorMessage + '\\n';\n  for (var i = 0; i < tracebackData.length; i++) {\n    var loc = tracebackData[i].datumLoc;\n    var name = tracebackData[i].datumName;\n    var locString = loc['source'] + ':' +\n        loc['start']['line'] + ':' + loc['start']['column'];\n    if (name) {\n      stackString += '  at ' + name + ' (' + locString + ')\\n';\n    } else {\n      stackString += '  at ' + locString + '\\n';\n    }\n  }\n  this.setProperty(pseudoError, 'stack', stackString.trim(),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Create a Web Worker to execute regular expressions.\n * Using a separate file fails in Chrome when run locally on a file:// URI.\n * Using a data encoded URI fails in IE and Edge.\n * Using a blob works in IE11 and all other browsers.\n * @return {!Worker} Web Worker with regexp execution code loaded.\n */\nInterpreter.prototype.createWorker = function() {\n  var blob = this.createWorker.blob_;\n  if (!blob) {\n    blob = new Blob([Interpreter.WORKER_CODE.join('\\n')],\n        {type: 'application/javascript'});\n    // Cache the blob, so it doesn't need to be created next time.\n    this.createWorker.blob_ = blob;\n  }\n  return new Worker(URL.createObjectURL(blob));\n};\n\n/**\n * Execute regular expressions in a node vm.\n * @param {string} code Code to execute.\n * @param {!Object} sandbox Global variables for new vm.\n * @param {!RegExp} nativeRegExp Regular expression.\n * @param {!Function} callback Asynchronous callback function.\n */\nInterpreter.prototype.vmCall = function(code, sandbox, nativeRegExp, callback) {\n  var options = {'timeout': this['REGEXP_THREAD_TIMEOUT']};\n  try {\n    return Interpreter.vm['runInNewContext'](code, sandbox, options);\n  } catch (_e) {\n    callback(null);\n    this.throwException(this.ERROR, 'RegExp Timeout: ' + nativeRegExp);\n  }\n  return Interpreter.REGEXP_TIMEOUT;\n};\n\n/**\n * If REGEXP_MODE is 0, then throw an error.\n * Also throw if REGEXP_MODE is 2 and JS doesn't support Web Workers or vm.\n * @param {!RegExp} nativeRegExp Regular expression.\n * @param {!Function} callback Asynchronous callback function.\n */\nInterpreter.prototype.maybeThrowRegExp = function(nativeRegExp, callback) {\n  var ok;\n  if (this['REGEXP_MODE'] === 0) {\n    // Fail: No RegExp support.\n    ok = false;\n  } else if (this['REGEXP_MODE'] === 1) {\n    // Ok: Native RegExp support.\n    ok = true;\n  } else {\n    // Sandboxed RegExp handling.\n    if (Interpreter.vm) {\n      // Ok: Node's vm module already loaded.\n      ok = true;\n    } else if (typeof Worker === 'function' && typeof URL === 'function') {\n      // Ok: Web Workers available.\n      ok = true;\n    } else if (true) {\n      // Try to load Node's vm module.\n      try {\n        Interpreter.vm = __webpack_require__(/*! vm */ \"vm\");\n      } catch (_e) {}\n      ok = !!Interpreter.vm;\n    } else {}\n  }\n  if (!ok) {\n    callback(null);\n    this.throwException(this.ERROR, 'Regular expressions not supported: ' +\n        nativeRegExp);\n  }\n};\n\n/**\n * Set a timeout for regular expression threads.  Unless cancelled, this will\n * terminate the thread and throw an error.\n * @param {!RegExp} nativeRegExp Regular expression (used for error message).\n * @param {!Worker} worker Thread to terminate.\n * @param {!Function} callback Async callback function to continue execution.\n * @return {number} PID of timeout.  Used to cancel if thread completes.\n */\nInterpreter.prototype.regExpTimeout = function(nativeRegExp, worker, callback) {\n  var thisInterpreter = this;\n  return setTimeout(function() {\n      worker.terminate();\n      callback(null);\n      try {\n        thisInterpreter.throwException(thisInterpreter.ERROR,\n            'RegExp Timeout: ' + nativeRegExp);\n      } catch (_e) {\n        // Eat the expected Interpreter.STEP_ERROR.\n      }\n  }, this['REGEXP_THREAD_TIMEOUT']);\n};\n\n/**\n * Create a new data object based on a constructor's prototype.\n * @param {Interpreter.Object} constructor Parent constructor function,\n *     or null if scope object.\n * @return {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObject = function(constructor) {\n  return this.createObjectProto(constructor &&\n                                constructor.properties['prototype']);\n};\n\n/**\n * Create a new data object based on a prototype.\n * @param {Interpreter.Object} proto Prototype object.\n * @return {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObjectProto = function(proto) {\n  if (typeof proto !== 'object') {\n    throw Error('Non object prototype');\n  }\n  var obj = new Interpreter.Object(proto);\n  if (this.isa(obj, this.ERROR)) {\n    // Record this object as being an error so that its toString function can\n    // process it correctly (toString has no access to the interpreter and could\n    // not otherwise determine that the object is an error).\n    obj.class = 'Error';\n  }\n  return obj;\n};\n\n/**\n * Create a new array.\n * @return {!Interpreter.Object} New array.\n */\nInterpreter.prototype.createArray = function() {\n  var array = this.createObjectProto(this.ARRAY_PROTO);\n  // Arrays have length.\n  this.setProperty(array, 'length', 0,\n      {configurable: false, enumerable: false, writable: true});\n  array.class = 'Array';\n  return array;\n};\n\n/**\n * Create a new function object (could become interpreted or native or async).\n * @param {number} argumentLength Number of arguments.\n * @param {boolean} isConstructor True if function can be used with 'new'.\n * @return {!Interpreter.Object} New function.\n * @private\n */\nInterpreter.prototype.createFunctionBase_ = function(argumentLength,\n                                                     isConstructor) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  if (isConstructor) {\n    var proto = this.createObjectProto(this.OBJECT_PROTO);\n    this.setProperty(func, 'prototype', proto,\n                     Interpreter.NONENUMERABLE_DESCRIPTOR);\n    this.setProperty(proto, 'constructor', func,\n                     Interpreter.NONENUMERABLE_DESCRIPTOR);\n  } else {\n    func.illegalConstructor = true;\n  }\n  this.setProperty(func, 'length', argumentLength,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  func.class = 'Function';\n  // When making changes to this function, check to see if those changes also\n  // need to be made to the creation of FUNCTION_PROTO in initFunction.\n  return func;\n};\n\n/**\n * Create a new interpreted function.\n * @param {!Object} node AST node defining the function.\n * @param {!Interpreter.Scope} scope Parent scope.\n * @param {string=} opt_name Optional name for function.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createFunction = function(node, scope, opt_name) {\n  var func = this.createFunctionBase_(node['params'].length, true);\n  func.parentScope = scope;\n  func.node = node;\n  // Choose a name for this function.\n  // function foo() {}             -> 'foo'\n  // var bar = function() {};      -> 'bar'\n  // var bar = function foo() {};  -> 'foo'\n  // foo.bar = function() {};      -> ''\n  // var bar = new Function('');   -> 'anonymous'\n  var name = node['id'] ? String(node['id']['name']) : (opt_name || '');\n  this.setProperty(func, 'name', name,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Create a new native function.\n * @param {!Function} nativeFunc JavaScript function.\n * @param {boolean} isConstructor True if function can be used with 'new'.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createNativeFunction = function(nativeFunc,\n                                                      isConstructor) {\n  var func = this.createFunctionBase_(nativeFunc.length, isConstructor);\n  func.nativeFunc = nativeFunc;\n  nativeFunc.id = this.functionCounter_++;\n  this.setProperty(func, 'name', nativeFunc.name,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Create a new native asynchronous function.\n * @param {!Function} asyncFunc JavaScript function.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createAsyncFunction = function(asyncFunc) {\n  var func = this.createFunctionBase_(asyncFunc.length, true);\n  func.asyncFunc = asyncFunc;\n  asyncFunc.id = this.functionCounter_++;\n  this.setProperty(func, 'name', asyncFunc.name,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Converts from a native JavaScript object or value to a JS-Interpreter object.\n * Can handle JSON-style values, regular expressions, dates and functions.\n * Does NOT handle cycles.\n * @param {*} nativeObj The native JavaScript object to be converted.\n * @return {Interpreter.Value} The equivalent JS-Interpreter object.\n */\nInterpreter.prototype.nativeToPseudo = function(nativeObj) {\n  if (nativeObj instanceof Interpreter.Object) {\n    throw Error('Object is already pseudo');\n  }\n  if ((typeof nativeObj !== 'object' && typeof nativeObj !== 'function') ||\n      nativeObj === null) {\n    return nativeObj;\n  }\n\n  if (nativeObj instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, nativeObj);\n    return pseudoRegexp;\n  }\n\n  if (nativeObj instanceof Date) {\n    var pseudoDate = this.createObjectProto(this.DATE_PROTO);\n    pseudoDate.data = new Date(nativeObj.valueOf());\n    return pseudoDate;\n  }\n\n  if (typeof nativeObj === 'function') {\n    var thisInterpreter = this;\n    var wrapper = function() {\n      var args = Array.prototype.slice.call(arguments).map(function(i) {\n          return thisInterpreter.pseudoToNative(i);\n      });\n      var value = nativeObj.apply(thisInterpreter, args);\n      return thisInterpreter.nativeToPseudo(value);\n    };\n    var prototype = Object.getOwnPropertyDescriptor(nativeObj, 'prototype');\n    return this.createNativeFunction(wrapper, !!prototype);\n  }\n\n  if (Array.isArray(nativeObj)) {  // Array.\n    var pseudoArray = this.createArray();\n    for (var i = 0; i < nativeObj.length; i++) {\n      if (i in nativeObj) {\n        this.setProperty(pseudoArray, i, this.nativeToPseudo(nativeObj[i]));\n      }\n    }\n    return pseudoArray;\n  }\n\n  // Object.\n  var pseudoObj = this.createObjectProto(this.OBJECT_PROTO);\n  for (var key in nativeObj) {\n    this.setProperty(pseudoObj, key, this.nativeToPseudo(nativeObj[key]));\n  }\n  return pseudoObj;\n};\n\n/**\n * Converts from a JS-Interpreter object to native JavaScript object.\n * Can handle JSON-style values, regular expressions, and dates.\n * Does handle cycles.\n * @param {Interpreter.Value} pseudoObj The JS-Interpreter object to be\n * converted.\n * @param {Object=} opt_cycles Cycle detection (used in recursive calls).\n * @return {*} The equivalent native JavaScript object or value.\n */\nInterpreter.prototype.pseudoToNative = function(pseudoObj, opt_cycles) {\n  if ((typeof pseudoObj !== 'object' && typeof pseudoObj !== 'function') ||\n      pseudoObj === null) {\n    return pseudoObj;\n  }\n  if (!(pseudoObj instanceof Interpreter.Object)) {\n    throw Error('Object is not pseudo');\n  }\n\n  if (this.isa(pseudoObj, this.REGEXP)) {  // Regular expression.\n    var nativeRegExp = new RegExp(pseudoObj.data.source, pseudoObj.data.flags);\n    nativeRegExp.lastIndex = pseudoObj.data.lastIndex;\n    return nativeRegExp;\n  }\n\n  if (this.isa(pseudoObj, this.DATE)) {  // Date.\n    return new Date(pseudoObj.data.valueOf());\n  }\n\n  var cycles = opt_cycles || {\n    pseudo: [],\n    native: [],\n  };\n  var index = cycles.pseudo.indexOf(pseudoObj);\n  if (index !== -1) {\n    return cycles.native[index];\n  }\n  cycles.pseudo.push(pseudoObj);\n  var nativeObj;\n  if (this.isa(pseudoObj, this.ARRAY)) {  // Array.\n    nativeObj = [];\n    cycles.native.push(nativeObj);\n    var len = this.getProperty(pseudoObj, 'length');\n    for (var i = 0; i < len; i++) {\n      if (this.hasProperty(pseudoObj, i)) {\n        nativeObj[i] =\n            this.pseudoToNative(this.getProperty(pseudoObj, i), cycles);\n      }\n    }\n  } else {  // Object.\n    nativeObj = {};\n    cycles.native.push(nativeObj);\n    var val;\n    for (var key in pseudoObj.properties) {\n      val = this.pseudoToNative(pseudoObj.properties[key], cycles);\n      // Use defineProperty to avoid side effects if setting '__proto__'.\n      Object.defineProperty(nativeObj, key,\n          {value: val, writable: true, enumerable: true, configurable: true});\n    }\n  }\n  cycles.pseudo.pop();\n  cycles.native.pop();\n  return nativeObj;\n};\n\n/**\n * Converts from a native JavaScript array to a JS-Interpreter array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Array} nativeArray The JavaScript array to be converted.\n * @return {!Interpreter.Object} The equivalent JS-Interpreter array.\n */\nInterpreter.prototype.arrayNativeToPseudo = function(nativeArray) {\n  var pseudoArray = this.createArray();\n  var props = Object.getOwnPropertyNames(nativeArray);\n  for (var i = 0; i < props.length; i++) {\n    this.setProperty(pseudoArray, props[i], nativeArray[props[i]]);\n  }\n  return pseudoArray;\n};\n\n/**\n * Converts from a JS-Interpreter array to native JavaScript array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Interpreter.Object} pseudoArray The JS-Interpreter array,\n *     or JS-Interpreter object pretending to be an array.\n * @return {!Array} The equivalent native JavaScript array.\n */\nInterpreter.prototype.arrayPseudoToNative = function(pseudoArray) {\n  var nativeArray = [];\n  for (var key in pseudoArray.properties) {\n    nativeArray[key] = this.getProperty(pseudoArray, key);\n  }\n  // pseudoArray might be an object pretending to be an array.  In this case\n  // it's possible that length is non-existent, invalid, or smaller than the\n  // largest defined numeric property.  Set length explicitly here.\n  nativeArray.length = Interpreter.legalArrayLength(\n      this.getProperty(pseudoArray, 'length')) || 0;\n  return nativeArray;\n};\n\n/**\n * Look up the prototype for this value.\n * @param {Interpreter.Value} value Data object.\n * @return {Interpreter.Object} Prototype object, null if none.\n */\nInterpreter.prototype.getPrototype = function(value) {\n  switch (typeof value) {\n    case 'number':\n      return this.NUMBER.properties['prototype'];\n    case 'boolean':\n      return this.BOOLEAN.properties['prototype'];\n    case 'string':\n      return this.STRING.properties['prototype'];\n  }\n  if (value) {\n    return value.proto;\n  }\n  return null;\n};\n\n/**\n * Fetch a property value from a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @return {Interpreter.Value} Property value (may be undefined).\n */\nInterpreter.prototype.getProperty = function(obj, name) {\n  if (this.getterStep_) {\n    throw Error('Getter not supported in that context');\n  }\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    this.throwException(this.TYPE_ERROR,\n                        \"Cannot read property '\" + name + \"' of \" + obj);\n  }\n  if (typeof obj === 'object' && !(obj instanceof Interpreter.Object)) {\n    throw TypeError('Expecting native value or pseudo object');\n  }\n  if (name === 'length') {\n    // Special cases for magic length property.\n    if (this.isa(obj, this.STRING)) {\n      return String(obj).length;\n    }\n  } else if (name.charCodeAt(0) < 0x40) {\n    // Might have numbers in there?\n    // Special cases for string array indexing\n    if (this.isa(obj, this.STRING)) {\n      var n = Interpreter.legalArrayIndex(name);\n      if (!isNaN(n) && n < String(obj).length) {\n        return String(obj)[n];\n      }\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      var getter = obj.getter[name];\n      if (getter) {\n        // Flag this function as being a getter and thus needing immediate\n        // execution (rather than being the value of the property).\n        this.getterStep_ = true;\n        return getter;\n      }\n      return obj.properties[name];\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return undefined;\n};\n\n/**\n * Does the named property exist on a data object.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @return {boolean} True if property exists.\n */\nInterpreter.prototype.hasProperty = function(obj, name) {\n  if (!(obj instanceof Interpreter.Object)) {\n    throw TypeError('Primitive data type has no properties');\n  }\n  name = String(name);\n  if (name === 'length' && this.isa(obj, this.STRING)) {\n    return true;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (!isNaN(n) && n < String(obj).length) {\n      return true;\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      return true;\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return false;\n};\n\n/**\n * Set a property value on a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {Interpreter.Value} value New property value.\n *     Use Interpreter.VALUE_IN_DESCRIPTOR if value is handled by\n *     descriptor instead.\n * @param {Object=} opt_descriptor Optional descriptor object.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setProperty = function(obj, name, value, opt_descriptor) {\n  if (this.setterStep_) {\n    // Getter from previous call to setProperty was not handled.\n    throw Error('Setter not supported in that context');\n  }\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    this.throwException(this.TYPE_ERROR,\n                        \"Cannot set property '\" + name + \"' of \" + obj);\n  }\n  if (typeof obj === 'object' && !(obj instanceof Interpreter.Object)) {\n    throw TypeError('Expecting native value or pseudo object');\n  }\n  if (opt_descriptor && ('get' in opt_descriptor || 'set' in opt_descriptor) &&\n      ('value' in opt_descriptor || 'writable' in opt_descriptor)) {\n    this.throwException(this.TYPE_ERROR, 'Invalid property descriptor. ' +\n        'Cannot both specify accessors and a value or writable attribute');\n  }\n  var strict = !this.stateStack || this.getScope().strict;\n  if (!(obj instanceof Interpreter.Object)) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't create property '\" + name +\n                          \"' on '\" + obj + \"'\");\n    }\n    return;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (name === 'length' || (!isNaN(n) && n < String(obj).length)) {\n      // Can't set length or letters on String objects.\n      if (strict) {\n        this.throwException(this.TYPE_ERROR, \"Cannot assign to read only \" +\n            \"property '\" + name + \"' of String '\" + obj.data + \"'\");\n      }\n      return;\n    }\n  }\n  if (obj.class === 'Array') {\n    // Arrays have a magic length variable that is bound to the elements.\n    var len = obj.properties.length;\n    var i;\n    if (name === 'length') {\n      // Delete elements if length is smaller.\n      if (opt_descriptor) {\n        if (!('value' in opt_descriptor)) {\n          return;\n        }\n        value = opt_descriptor.value;\n      }\n      value = Interpreter.legalArrayLength(value);\n      if (isNaN(value)) {\n        this.throwException(this.RANGE_ERROR, 'Invalid array length');\n      }\n      if (value < len) {\n        for (i in obj.properties) {\n          i = Interpreter.legalArrayIndex(i);\n          if (!isNaN(i) && value <= i) {\n            delete obj.properties[i];\n          }\n        }\n      }\n    } else if (!isNaN(i = Interpreter.legalArrayIndex(name))) {\n      // Increase length if this index is larger.\n      obj.properties.length = Math.max(len, i + 1);\n    }\n  }\n  if (obj.preventExtensions && !(name in obj.properties)) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't add property '\" + name +\n                          \"', object is not extensible\");\n    }\n    return;\n  }\n  if (opt_descriptor) {\n    // Define the property.\n    var descriptor = {};\n    if ('get' in opt_descriptor && opt_descriptor.get) {\n      obj.getter[name] = opt_descriptor.get;\n      descriptor.get = this.setProperty.placeholderGet_;\n    }\n    if ('set' in opt_descriptor && opt_descriptor.set) {\n      obj.setter[name] = opt_descriptor.set;\n      descriptor.set = this.setProperty.placeholderSet_;\n    }\n    if ('configurable' in opt_descriptor) {\n      descriptor.configurable = opt_descriptor.configurable;\n    }\n    if ('enumerable' in opt_descriptor) {\n      descriptor.enumerable = opt_descriptor.enumerable;\n    }\n    if ('writable' in opt_descriptor) {\n      descriptor.writable = opt_descriptor.writable;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    if ('value' in opt_descriptor) {\n      descriptor.value = opt_descriptor.value;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    } else if (value !== Interpreter.VALUE_IN_DESCRIPTOR) {\n      descriptor.value = value;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    try {\n      Object.defineProperty(obj.properties, name, descriptor);\n    } catch (e) {\n      this.throwException(this.TYPE_ERROR, 'Cannot redefine property: ' + name);\n    }\n    // Now that the definition has suceeded, clean up any obsolete get/set funcs.\n    if ('get' in opt_descriptor && !opt_descriptor.get) {\n      delete obj.getter[name];\n    }\n    if ('set' in opt_descriptor && !opt_descriptor.set) {\n      delete obj.setter[name];\n    }\n  } else {\n    // Set the property.\n    if (value === Interpreter.VALUE_IN_DESCRIPTOR) {\n      throw ReferenceError('Value not specified');\n    }\n    // Determine the parent (possibly self) where the property is defined.\n    var defObj = obj;\n    while (!(name in defObj.properties)) {\n      defObj = this.getPrototype(defObj);\n      if (!defObj) {\n        // This is a new property.\n        defObj = obj;\n        break;\n      }\n    }\n    if (defObj.setter && defObj.setter[name]) {\n      this.setterStep_ = true;\n      return defObj.setter[name];\n    }\n    if (defObj.getter && defObj.getter[name]) {\n      if (strict) {\n        this.throwException(this.TYPE_ERROR, \"Cannot set property '\" + name +\n            \"' of object '\" + obj + \"' which only has a getter\");\n      }\n    } else {\n      // No setter, simple assignment.\n      try {\n        obj.properties[name] = value;\n      } catch (_e) {\n        if (strict) {\n          this.throwException(this.TYPE_ERROR, \"Cannot assign to read only \" +\n              \"property '\" + name + \"' of object '\" + obj + \"'\");\n        }\n      }\n    }\n  }\n};\n\nInterpreter.prototype.setProperty.placeholderGet_ = function() {throw Error('Placeholder getter');};\nInterpreter.prototype.setProperty.placeholderSet_ = function() {throw Error('Placeholder setter');};\n\n/**\n * Convenience method for adding a native function as a non-enumerable property\n * onto an object's prototype.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {!Function} wrapper Function object.\n */\nInterpreter.prototype.setNativeFunctionPrototype =\n    function(obj, name, wrapper) {\n  this.setProperty(obj.properties['prototype'], name,\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Convenience method for adding an async function as a non-enumerable property\n * onto an object's prototype.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {!Function} wrapper Function object.\n */\nInterpreter.prototype.setAsyncFunctionPrototype =\n    function(obj, name, wrapper) {\n  this.setProperty(obj.properties['prototype'], name,\n      this.createAsyncFunction(wrapper),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Returns the current scope from the stateStack.\n * @return {!Interpreter.Scope} Current scope.\n */\nInterpreter.prototype.getScope = function() {\n  var scope = this.stateStack[this.stateStack.length - 1].scope;\n  if (!scope) {\n    throw Error('No scope found');\n  }\n  return scope;\n};\n\n/**\n * Create a new scope dictionary.\n * @param {!Object} node AST node defining the scope container\n *     (e.g. a function).\n * @param {Interpreter.Scope} parentScope Scope to link to.\n * @return {!Interpreter.Scope} New scope.\n */\nInterpreter.prototype.createScope = function(node, parentScope) {\n  // Determine if this scope starts with `use strict`.\n  var strict = false;\n  if (parentScope && parentScope.strict) {\n    strict = true;\n  } else {\n    var firstNode = node['body'] && node['body'][0];\n    if (firstNode && firstNode.expression &&\n        firstNode.expression['type'] === 'Literal' &&\n        firstNode.expression.value === 'use strict') {\n      strict = true;\n    }\n  }\n  var object = this.createObjectProto(null);\n  var scope = new Interpreter.Scope(parentScope, strict, object);\n  if (!parentScope) {\n    this.initGlobal(scope.object);\n  }\n  this.populateScope_(node, scope);\n  return scope;\n};\n\n/**\n * Create a new special scope dictionary. Similar to createScope(), but\n * doesn't assume that the scope is for a function body.\n * This is used for 'catch' clauses and 'with' statements.\n * @param {!Interpreter.Scope} parentScope Scope to link to.\n * @param {Interpreter.Object=} opt_object Optional object to transform into\n *     scope.\n * @return {!Interpreter.Scope} New scope.\n */\nInterpreter.prototype.createSpecialScope = function(parentScope, opt_object) {\n  if (!parentScope) {\n    throw Error('parentScope required');\n  }\n  var object = opt_object || this.createObjectProto(null);\n  return new Interpreter.Scope(parentScope, parentScope.strict, object);\n};\n\n/**\n * Retrieves a value from the scope chain.\n * @param {string} name Name of variable.\n * @return {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValueFromScope = function(name) {\n  var scope = this.getScope();\n  while (scope && scope !== this.globalScope) {\n    if (name in scope.object.properties) {\n      return scope.object.properties[name];\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has inherited properties and\n  // could also have getters.\n  if (scope === this.globalScope && this.hasProperty(scope.object, name)) {\n    return this.getProperty(scope.object, name);\n  }\n  // Typeof operator is unique: it can safely look at non-defined variables.\n  var prevNode = this.stateStack[this.stateStack.length - 1].node;\n  if (prevNode['type'] === 'UnaryExpression' &&\n      prevNode['operator'] === 'typeof') {\n    return undefined;\n  }\n  this.throwException(this.REFERENCE_ERROR, name + ' is not defined');\n};\n\n/**\n * Sets a value to the current scope.\n * @param {string} name Name of variable.\n * @param {Interpreter.Value} value Value.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValueToScope = function(name, value) {\n  var scope = this.getScope();\n  var strict = scope.strict;\n  while (scope && scope !== this.globalScope) {\n    if (name in scope.object.properties) {\n      scope.object.properties[name] = value;\n      return undefined;\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has readonly properties and\n  // could also have setters.\n  if (scope === this.globalScope &&\n      (!strict || this.hasProperty(scope.object, name))) {\n    return this.setProperty(scope.object, name, value);\n  }\n  this.throwException(this.REFERENCE_ERROR, name + ' is not defined');\n};\n\n/**\n * Create a new scope for the given node and populate it with all variables\n * and named functions.\n * @param {!Object} node AST node (usually a program or function when initally\n *   calling this function, though it recurses to scan many child nodes).\n * @param {!Interpreter.Scope} scope Scope dictionary to populate.\n * @return {!Object} Map of all variable and function names.\n * @private\n */\nInterpreter.prototype.populateScope_ = function(node, scope) {\n  var variableCache;\n  if (!node.variableCache_) {\n    variableCache = Object.create(null);\n    switch (node['type']) {\n      case 'VariableDeclaration':\n        for (var i = 0; i < node['declarations'].length; i++) {\n          variableCache[node['declarations'][i]['id']['name']] = true;\n        }\n        break;\n      case 'FunctionDeclaration':\n        variableCache[node['id']['name']] = node;\n        break;\n      case 'BlockStatement':\n      case 'CatchClause':\n      case 'DoWhileStatement':\n      case 'ForInStatement':\n      case 'ForStatement':\n      case 'IfStatement':\n      case 'LabeledStatement':\n      case 'Program':\n      case 'SwitchCase':\n      case 'SwitchStatement':\n      case 'TryStatement':\n      case 'WithStatement':\n      case 'WhileStatement':\n        // All the structures within which a variable or function could hide.\n        var nodeClass = node['constructor'];\n        for (var name in node) {\n          if (name === 'loc') continue;\n          var prop = node[name];\n          if (prop && typeof prop === 'object') {\n            var childCache;\n            if (Array.isArray(prop)) {\n              for (var i = 0; i < prop.length; i++) {\n                if (prop[i] && prop[i].constructor === nodeClass) {\n                  childCache = this.populateScope_(prop[i], scope);\n                  for (var name in childCache) {\n                    variableCache[name] = childCache[name];\n                  }\n                }\n              }\n            } else {\n              if (prop.constructor === nodeClass) {\n                childCache = this.populateScope_(prop, scope);\n                for (var name in childCache) {\n                  variableCache[name] = childCache[name];\n                }\n              }\n            }\n          }\n        }\n    }\n    node.variableCache_ = variableCache;\n  } else {\n    variableCache = node.variableCache_;\n  }\n  for (var name in variableCache) {\n    if (variableCache[name] === true) {\n      this.setProperty(scope.object, name, undefined,\n          Interpreter.VARIABLE_DESCRIPTOR);\n    } else {\n      this.setProperty(scope.object, name,\n          this.createFunction(variableCache[name], scope),\n          Interpreter.VARIABLE_DESCRIPTOR);\n    }\n  }\n  return variableCache;\n};\n\n/**\n * Is the current state directly being called with as a construction with 'new'.\n * @return {boolean} True if 'new foo()', false if 'foo()'.\n */\nInterpreter.prototype.calledWithNew = function() {\n  return this.stateStack[this.stateStack.length - 1].isConstructor;\n};\n\n/**\n * Gets a value from the scope chain or from an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @return {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValue = function(ref) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.getValueFromScope(ref[1]);\n  } else {\n    // An obj/prop components tuple (foo.bar).\n    return this.getProperty(ref[0], ref[1]);\n  }\n};\n\n/**\n * Sets a value to the scope chain or to an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValue = function(ref, value) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.setValueToScope(ref[1], value);\n  } else {\n    // An obj/prop components tuple (foo.bar).\n    return this.setProperty(ref[0], ref[1], value);\n  }\n};\n\n/**\n * Throw an exception in the interpreter that can be handled by an\n * interpreter try/catch statement.  If unhandled, a real exception will\n * be thrown.  Can be called with either an error class and a message, or\n * with an actual object to be thrown.\n * @param {!Interpreter.Object|Interpreter.Value} errorClass Type of error\n *   (if message is provided) or the value to throw (if no message).\n * @param {string=} opt_message Message being thrown.\n */\nInterpreter.prototype.throwException = function(errorClass, opt_message) {\n  if (!this.globalScope) {\n    // This is an error being thrown in the initialization, throw a real error.\n    throw (opt_message === undefined) ? errorClass : opt_message;\n  }\n  if (opt_message === undefined) {\n    var error = errorClass;  // This is a value to throw, not an error class.\n  } else {\n    var error = this.createObject(errorClass);\n    this.populateError(error, opt_message);\n  }\n  this.unwind(Interpreter.Completion.THROW, error, undefined);\n  // Abort anything related to the current step.\n  throw Interpreter.STEP_ERROR;\n};\n\n/**\n * Unwind the stack to the innermost relevant enclosing TryStatement,\n * For/ForIn/WhileStatement or Call/NewExpression.  If this results in\n * the stack being completely unwound the thread will be terminated\n * and the appropriate error being thrown.\n * @param {Interpreter.Completion} type Completion type.\n * @param {Interpreter.Value} value Value computed, returned or thrown.\n * @param {string|undefined} label Target label for break or return.\n */\nInterpreter.prototype.unwind = function(type, value, label) {\n  if (type === Interpreter.Completion.NORMAL) {\n    throw TypeError('Should not unwind for NORMAL completions');\n  }\n\n  loop: for (var stack = this.stateStack; stack.length > 0; stack.pop()) {\n    var state = stack[stack.length - 1];\n    switch (state.node['type']) {\n      case 'TryStatement':\n        state.cv = {type: type, value: value, label: label};\n        return;\n      case 'CallExpression':\n      case 'NewExpression':\n        if (type === Interpreter.Completion.RETURN) {\n          state.value = value;\n          return;\n        } else if (type !== Interpreter.Completion.THROW) {\n          throw Error('Unsynatctic break/continue not rejected by Acorn');\n        }\n        break;\n      case 'Program':\n        // Don't pop the stateStack.\n        // Leave the root scope on the tree in case the program is appended to.\n        state.done = true;\n        break loop;\n    }\n    if (type === Interpreter.Completion.BREAK) {\n      if (label ? (state.labels && state.labels.indexOf(label) !== -1) :\n          (state.isLoop || state.isSwitch)) {\n        stack.pop();\n        return;\n      }\n    } else if (type === Interpreter.Completion.CONTINUE) {\n      if (label ? (state.labels && state.labels.indexOf(label) !== -1) :\n          state.isLoop) {\n        return;\n      }\n    }\n  }\n\n  // Unhandled completion.  Throw a real error.\n  var realError;\n  if (this.isa(value, this.ERROR)) {\n    var errorTable = {\n      'EvalError': EvalError,\n      'RangeError': RangeError,\n      'ReferenceError': ReferenceError,\n      'SyntaxError': SyntaxError,\n      'TypeError': TypeError,\n      'URIError': URIError,\n    };\n    var name = String(this.getProperty(value, 'name'));\n    var message = this.getProperty(value, 'message').valueOf();\n    var errorConstructor = errorTable[name] || Error;\n    realError = errorConstructor(message);\n    realError.stack = String(this.getProperty(value, 'stack'));\n  } else {\n    realError = String(value);\n  }\n  throw realError;\n};\n\n/**\n * Create a call to a getter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @private\n */\nInterpreter.prototype.createGetter_ = function(func, left) {\n  if (!this.getterStep_) {\n    throw Error('Unexpected call to createGetter');\n  }\n  // Clear the getter flag.\n  this.getterStep_ = false;\n  // Normally `this` will be specified as the object component (o.x).\n  // Sometimes `this` is explicitly provided (o).\n  var funcThis = Array.isArray(left) ? left[0] : left;\n  var node = new this.newNode();\n  node['type'] = 'CallExpression';\n  var state = new Interpreter.State(node,\n      this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = 2;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [];\n  return state;\n};\n\n/**\n * Create a call to a setter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value to set.\n * @private\n */\nInterpreter.prototype.createSetter_ = function(func, left, value) {\n  if (!this.setterStep_) {\n    throw Error('Unexpected call to createSetter');\n  }\n  // Clear the setter flag.\n  this.setterStep_ = false;\n  // Normally `this` will be specified as the object component (o.x).\n  // Sometimes `this` is implicitly the global object (x).\n  var funcThis = Array.isArray(left) ? left[0] : this.globalObject;\n  var node = new this.newNode();\n  node['type'] = 'CallExpression';\n  var state = new Interpreter.State(node,\n      this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = 2;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [value];\n  return state;\n};\n\n/**\n * In non-strict mode `this` must be an object.\n * Must not be called in strict mode.\n * @param {Interpreter.Value} value Proposed value for `this`.\n * @return {!Interpreter.Object} Final value for `this`.\n * @private\n */\nInterpreter.prototype.boxThis_ = function(value) {\n  if (value === undefined || value === null) {\n    // `Undefined` and `null` are changed to the global object.\n    return this.globalObject;\n  }\n  if (!(value instanceof Interpreter.Object)) {\n    // Primitives must be boxed.\n    var box = this.createObjectProto(this.getPrototype(value));\n    box.data = value;\n    return box;\n  }\n  return value;\n};\n\n/**\n * Return the global scope object.\n * @return {!Interpreter.Scope} Scope object.\n */\nInterpreter.prototype.getGlobalScope = function() {\n  return this.globalScope;\n};\n\n/**\n * Return the state stack.\n * @return {!Array<!Interpreter.State>} State stack.\n */\nInterpreter.prototype.getStateStack = function() {\n  return this.stateStack;\n};\n\n/**\n * Replace the state stack with a new one.\n * @param {!Array<!Interpreter.State>} newStack New state stack.\n */\nInterpreter.prototype.setStateStack = function(newStack) {\n  this.stateStack = newStack;\n};\n\n/**\n * Typedef for JS values.\n * @typedef {!Interpreter.Object|boolean|number|string|undefined|null}\n */\nInterpreter.Value;\n\n/**\n * Class for a state.\n * @param {!Object} node AST node for the state.\n * @param {!Interpreter.Scope} scope Scope object for the state.\n * @constructor\n */\nInterpreter.State = function(node, scope) {\n  this.node = node;\n  this.scope = scope;\n};\n\n/**\n * Class for a scope.\n * @param {Interpreter.Scope} parentScope Parent scope.\n * @param {boolean} strict True if \"use strict\".\n * @param {!Interpreter.Object} object Object containing scope's variables.\n * @struct\n * @constructor\n */\nInterpreter.Scope = function(parentScope, strict, object) {\n  this.parentScope = parentScope;\n  this.strict = strict;\n  this.object = object;\n};\n\n/**\n * Class for an object.\n * @param {Interpreter.Object} proto Prototype object or null.\n * @constructor\n */\nInterpreter.Object = function(proto) {\n  this.getter = Object.create(null);\n  this.setter = Object.create(null);\n  this.properties = Object.create(null);\n  this.proto = proto;\n};\n\n/** @type {Interpreter.Object} */\nInterpreter.Object.prototype.proto = null;\n\n/** @type {string} */\nInterpreter.Object.prototype.class = 'Object';\n\n/** @type {Date|RegExp|boolean|number|string|null} */\nInterpreter.Object.prototype.data = null;\n\n/**\n * Convert this object into a string.\n * @return {string} String value.\n * @override\n */\nInterpreter.Object.prototype.toString = function() {\n  if (!Interpreter.currentInterpreter_) {\n    // Called from outside an interpreter.\n    return '[object Interpreter.Object]';\n  }\n  if (!(this instanceof Interpreter.Object)) {\n    // Primitive value.\n    return String(this);\n  }\n\n  if (this.class === 'Array') {\n    // Array contents must not have cycles.\n    var cycles = Interpreter.toStringCycles_;\n    cycles.push(this);\n    try {\n      var strs = [];\n      // Truncate very long strings.  This is not part of the spec,\n      // but it prevents hanging the interpreter for gigantic arrays.\n      var maxLength = this.properties.length;\n      var truncated = false;\n      if (maxLength > 1024) {\n        maxLength = 1000;\n        truncated = true;\n      }\n      for (var i = 0; i < maxLength; i++) {\n        var value = this.properties[i];\n        strs[i] = ((value instanceof Interpreter.Object) &&\n            cycles.indexOf(value) !== -1) ? '...' : value;\n      }\n      if (truncated) {\n        strs.push('...');\n      }\n    } finally {\n      cycles.pop();\n    }\n    return strs.join(',');\n  }\n\n  if (this.class === 'Error') {\n    // Error name and message properties must not have cycles.\n    var cycles = Interpreter.toStringCycles_;\n    if (cycles.indexOf(this) !== -1) {\n      return '[object Error]';\n    }\n    var name, message;\n    // Bug: Does not support getters and setters for name or message.\n    var obj = this;\n    do {\n      if ('name' in obj.properties) {\n        name = obj.properties['name'];\n        break;\n      }\n    } while ((obj = obj.proto));\n    obj = this;\n    do {\n      if ('message' in obj.properties) {\n        message = obj.properties['message'];\n        break;\n      }\n    } while ((obj = obj.proto));\n    cycles.push(this);\n    try {\n      name = name && String(name);\n      message = message && String(message);\n    } finally {\n      cycles.pop();\n    }\n    return message ? name + ': ' + message : String(name);\n  }\n\n  if (this.data !== null) {\n    // RegExp, Date, and boxed primitives.\n    return String(this.data);\n  }\n\n  return '[object ' + this.class + ']';\n};\n\n/**\n * Return the object's value.\n * @return {Interpreter.Value} Value.\n * @override\n */\nInterpreter.Object.prototype.valueOf = function() {\n  var callingInterpreter = Interpreter.currentInterpreter_;\n  if (!callingInterpreter) {\n    // Called from outside an interpreter.\n    return this;\n  }\n  if (this.data === undefined || this.data === null ||\n      this.data instanceof RegExp) {\n    return this;  // An Object, RegExp, or primitive.\n  }\n  if (this.data instanceof Date) {\n    return this.data.valueOf();  // Milliseconds.\n  }\n  return /** @type {(boolean|number|string)} */ (this.data);  // Boxed primitive.\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Functions to handle each node type.\n///////////////////////////////////////////////////////////////////////////////\n\nInterpreter.prototype['stepArrayExpression'] = function(stack, state, node) {\n  var elements = node['elements'];\n  var n = state.n_ || 0;\n  if (!state.array_) {\n    state.array_ = this.createArray();\n    state.array_.properties.length = elements.length;\n  } else {\n    this.setProperty(state.array_, n, state.value);\n    n++;\n  }\n  while (n < elements.length) {\n    // Skip missing elements - they're not defined, not undefined.\n    if (elements[n]) {\n      state.n_ = n;\n      return new Interpreter.State(elements[n], state.scope);\n    }\n    n++;\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.array_;\n};\n\nInterpreter.prototype['stepAssignmentExpression'] =\n    function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node['left'], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.doneRight_) {\n    if (!state.leftReference_) {\n      state.leftReference_ = state.value;\n    }\n    if (state.doneGetter_) {\n      state.leftValue_ = state.value;\n    }\n    if (!state.doneGetter_ && node['operator'] !== '=') {\n      var leftValue = this.getValue(state.leftReference_);\n      state.leftValue_ = leftValue;\n      if (this.getterStep_) {\n        // Call the getter function.\n        state.doneGetter_ = true;\n        var func = /** @type {!Interpreter.Object} */ (leftValue);\n        return this.createGetter_(func, state.leftReference_);\n      }\n    }\n    state.doneRight_ = true;\n    // When assigning an unnamed function to a variable, the function's name\n    // is set to the variable name.  Record the variable name in case the\n    // right side is a functionExpression.\n    // E.g. foo = function() {};\n    if (node['operator'] === '=' && node['left']['type'] === 'Identifier') {\n      state.destinationName = node['left']['name'];\n    }\n    return new Interpreter.State(node['right'], state.scope);\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var value = state.leftValue_;\n  var rightValue = state.value;\n  switch (node['operator']) {\n    case '=':    value =    rightValue; break;\n    case '+=':   value +=   rightValue; break;\n    case '-=':   value -=   rightValue; break;\n    case '*=':   value *=   rightValue; break;\n    case '/=':   value /=   rightValue; break;\n    case '%=':   value %=   rightValue; break;\n    case '<<=':  value <<=  rightValue; break;\n    case '>>=':  value >>=  rightValue; break;\n    case '>>>=': value >>>= rightValue; break;\n    case '&=':   value &=   rightValue; break;\n    case '^=':   value ^=   rightValue; break;\n    case '|=':   value |=   rightValue; break;\n    default:\n      throw SyntaxError('Unknown assignment expression: ' + node['operator']);\n  }\n  var setter = this.setValue(state.leftReference_, value);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = value;\n    return this.createSetter_(setter, state.leftReference_, value);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepBinaryExpression'] = function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node['left'], state.scope);\n  }\n  if (!state.doneRight_) {\n    state.doneRight_ = true;\n    state.leftValue_ = state.value;\n    return new Interpreter.State(node['right'], state.scope);\n  }\n  stack.pop();\n  var leftValue = state.leftValue_;\n  var rightValue = state.value;\n  var value;\n  switch (node['operator']) {\n    case '==':  value = leftValue ==  rightValue; break;\n    case '!=':  value = leftValue !=  rightValue; break;\n    case '===': value = leftValue === rightValue; break;\n    case '!==': value = leftValue !== rightValue; break;\n    case '>':   value = leftValue >   rightValue; break;\n    case '>=':  value = leftValue >=  rightValue; break;\n    case '<':   value = leftValue <   rightValue; break;\n    case '<=':  value = leftValue <=  rightValue; break;\n    case '+':   value = leftValue +   rightValue; break;\n    case '-':   value = leftValue -   rightValue; break;\n    case '*':   value = leftValue *   rightValue; break;\n    case '/':   value = leftValue /   rightValue; break;\n    case '%':   value = leftValue %   rightValue; break;\n    case '&':   value = leftValue &   rightValue; break;\n    case '|':   value = leftValue |   rightValue; break;\n    case '^':   value = leftValue ^   rightValue; break;\n    case '<<':  value = leftValue <<  rightValue; break;\n    case '>>':  value = leftValue >>  rightValue; break;\n    case '>>>': value = leftValue >>> rightValue; break;\n    case 'in':\n      if (!(rightValue instanceof Interpreter.Object)) {\n        this.throwException(this.TYPE_ERROR,\n            \"'in' expects an object, not '\" + rightValue + \"'\");\n      }\n      value = this.hasProperty(rightValue, leftValue);\n      break;\n    case 'instanceof':\n      if (!this.isa(rightValue, this.FUNCTION)) {\n        this.throwException(this.TYPE_ERROR,\n            'Right-hand side of instanceof is not an object');\n      }\n      value = (leftValue instanceof Interpreter.Object) ?\n          this.isa(leftValue, rightValue) : false;\n      break;\n    default:\n      throw SyntaxError('Unknown binary operator: ' + node['operator']);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepBlockStatement'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node['body'][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n};\n\nInterpreter.prototype['stepBreakStatement'] = function(stack, state, node) {\n  var label = node['label'] && node['label']['name'];\n  this.unwind(Interpreter.Completion.BREAK, undefined, label);\n};\n\n/**\n * Number of evals called by the interpreter.\n * @private\n */\nInterpreter.prototype.evalCodeNumber_ = 0;\n\nInterpreter.prototype['stepCallExpression'] = function(stack, state, node) {\n  // Handles both CallExpression and NewExpression.\n  if (!state.doneCallee_) {\n    state.doneCallee_ = 1;\n    // Components needed to determine value of `this`.\n    var nextState = new Interpreter.State(node['callee'], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (state.doneCallee_ === 1) {\n    // Determine value of the function.\n    state.doneCallee_ = 2;\n    var func = state.value;\n    if (Array.isArray(func)) {\n      state.func_ = this.getValue(func);\n      if (func[0] === Interpreter.SCOPE_REFERENCE) {\n        // (Globally or locally) named function.  Is it named 'eval'?\n        state.directEval_ = (func[1] === 'eval');\n      } else {\n        // Method function, `this` is object (ignored if invoked as `new`).\n        state.funcThis_ = func[0];\n      }\n      func = state.func_;\n      if (this.getterStep_) {\n        // Call the getter function.\n        state.doneCallee_ = 1;\n        return this.createGetter_(/** @type {!Interpreter.Object} */ (func),\n            state.value);\n      }\n    } else {\n      // Already evaluated function: (function(){...})();\n      state.func_ = func;\n    }\n    state.arguments_ = [];\n    state.n_ = 0;\n  }\n  var func = state.func_;\n  if (!state.doneArgs_) {\n    if (state.n_ !== 0) {\n      state.arguments_.push(state.value);\n    }\n    if (node['arguments'][state.n_]) {\n      return new Interpreter.State(node['arguments'][state.n_++], state.scope);\n    }\n    // Determine value of `this` in function.\n    if (node['type'] === 'NewExpression') {\n      if (!(func instanceof Interpreter.Object) || func.illegalConstructor) {\n        // Illegal: new escape();\n        this.throwException(this.TYPE_ERROR, func + ' is not a constructor');\n      }\n      // Constructor, `this` is new object.\n      if (func === this.ARRAY) {\n        state.funcThis_ = this.createArray();\n      } else {\n        var proto = func.properties['prototype'];\n        if (typeof proto !== 'object' || proto === null) {\n          // Non-object prototypes default to `Object.prototype`.\n          proto = this.OBJECT_PROTO;\n        }\n        state.funcThis_ = this.createObjectProto(proto);\n      }\n      state.isConstructor = true;\n    }\n    state.doneArgs_ = true;\n  }\n  if (!state.doneExec_) {\n    state.doneExec_ = true;\n    if (!(func instanceof Interpreter.Object)) {\n      this.throwException(this.TYPE_ERROR, func + ' is not a function');\n    }\n    var funcNode = func.node;\n    if (funcNode) {\n      var scope = this.createScope(funcNode['body'], func.parentScope);\n      // Add all arguments.\n      for (var i = 0; i < funcNode['params'].length; i++) {\n        var paramName = funcNode['params'][i]['name'];\n        var paramValue = state.arguments_.length > i ? state.arguments_[i] :\n            undefined;\n        this.setProperty(scope.object, paramName, paramValue);\n      }\n      // Build arguments variable.\n      var argsList = this.createArray();\n      for (var i = 0; i < state.arguments_.length; i++) {\n        this.setProperty(argsList, i, state.arguments_[i]);\n      }\n      this.setProperty(scope.object, 'arguments', argsList);\n      // Add the function's name (var x = function foo(){};)\n      var name = funcNode['id'] && funcNode['id']['name'];\n      if (name) {\n        this.setProperty(scope.object, name, func);\n      }\n      if (!scope.strict) {\n        state.funcThis_ = this.boxThis_(state.funcThis_);\n      }\n      this.setProperty(scope.object, 'this', state.funcThis_,\n                       Interpreter.READONLY_DESCRIPTOR);\n      state.value = undefined;  // Default value if no explicit return.\n      return new Interpreter.State(funcNode['body'], scope);\n    } else if (func.eval) {\n      var code = state.arguments_[0];\n      if (typeof code !== 'string') {\n        // JS does not parse String objects:\n        // eval(new String('1 + 1')) -> '1 + 1'\n        state.value = code;\n      } else {\n        try {\n          var ast = this.parse_(String(code),\n             'eval' + (this.evalCodeNumber_++));\n        } catch (e) {\n          // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n          this.throwException(this.SYNTAX_ERROR, 'Invalid code: ' + e.message);\n        }\n        var evalNode = new this.newNode();\n        evalNode['type'] = 'EvalProgram_';\n        evalNode['body'] = ast['body'];\n        Interpreter.stripLocations_(evalNode, node['start'], node['end']);\n        // Create new scope and update it with definitions in eval().\n        var scope = state.directEval_ ? state.scope : this.globalScope;\n        if (scope.strict) {\n          // Strict mode get its own scope in eval.\n          scope = this.createScope(ast, scope);\n        } else {\n          // Non-strict mode pollutes the current scope.\n          this.populateScope_(ast, scope);\n        }\n        this.value = undefined;  // Default value if no code.\n        return new Interpreter.State(evalNode, scope);\n      }\n    } else if (func.nativeFunc) {\n      if (!state.scope.strict) {\n        state.funcThis_ = this.boxThis_(state.funcThis_);\n      }\n      state.value = func.nativeFunc.apply(state.funcThis_, state.arguments_);\n    } else if (func.asyncFunc) {\n      var thisInterpreter = this;\n      var callback = function(value) {\n        state.value = value;\n        thisInterpreter.paused_ = false;\n      };\n      // Force the argument lengths to match, then append the callback.\n      var argLength = func.asyncFunc.length - 1;\n      var argsWithCallback = state.arguments_.concat(\n          new Array(argLength)).slice(0, argLength);\n      argsWithCallback.push(callback);\n      this.paused_ = true;\n      if (!state.scope.strict) {\n        state.funcThis_ = this.boxThis_(state.funcThis_);\n      }\n      func.asyncFunc.apply(state.funcThis_, argsWithCallback);\n      return;\n    } else {\n      /* A child of a function is a function but is not callable.  For example:\n      var F = function() {};\n      F.prototype = escape;\n      var f = new F();\n      f();\n      */\n      this.throwException(this.TYPE_ERROR, func.class + ' is not callable');\n    }\n  } else {\n    // Execution complete.  Put the return value on the stack.\n    stack.pop();\n    if (state.isConstructor && typeof state.value !== 'object') {\n      // Normal case for a constructor is to use the `this` value.\n      stack[stack.length - 1].value = state.funcThis_;\n    } else {\n      // Non-constructors or constructions explicitly returning objects use\n      // the return value.\n      stack[stack.length - 1].value = state.value;\n    }\n  }\n};\n\nInterpreter.prototype['stepCatchClause'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    // Create an empty scope.\n    var scope = this.createSpecialScope(state.scope);\n    // Add the argument.\n    this.setProperty(scope.object, node['param']['name'], state.throwValue);\n    // Execute catch clause.\n    return new Interpreter.State(node['body'], scope);\n  } else {\n    stack.pop();\n  }\n};\n\nInterpreter.prototype['stepConditionalExpression'] =\n    function(stack, state, node) {\n  // Handles both ConditionalExpression and IfStatement.\n  var mode = state.mode_ || 0;\n  if (mode === 0) {\n    state.mode_ = 1;\n    return new Interpreter.State(node['test'], state.scope);\n  }\n  if (mode === 1) {\n    state.mode_ = 2;\n    var value = Boolean(state.value);\n    if (value && node['consequent']) {\n      // Execute `if` block.\n      return new Interpreter.State(node['consequent'], state.scope);\n    } else if (!value && node['alternate']) {\n      // Execute `else` block.\n      return new Interpreter.State(node['alternate'], state.scope);\n    }\n    // eval('1;if(false){2}') -> undefined\n    this.value = undefined;\n  }\n  stack.pop();\n  if (node['type'] === 'ConditionalExpression') {\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype['stepContinueStatement'] = function(stack, state, node) {\n  var label = node['label'] && node['label']['name'];\n  this.unwind(Interpreter.Completion.CONTINUE, undefined, label);\n};\n\nInterpreter.prototype['stepDebuggerStatement'] = function(stack, state, node) {\n  // Do nothing.  May be overridden by developers.\n  stack.pop();\n};\n\nInterpreter.prototype['stepDoWhileStatement'] = function(stack, state, node) {\n  // Handles both DoWhileStatement and WhileStatement.\n  if (node['type'] === 'DoWhileStatement' && state.test_ === undefined) {\n    // First iteration of do/while executes without checking test.\n    state.value = true;\n    state.test_ = true;\n  }\n  if (!state.test_) {\n    state.test_ = true;\n    return new Interpreter.State(node['test'], state.scope);\n  }\n  if (!state.value) {  // Done, exit loop.\n    stack.pop();\n  } else if (node['body']) {  // Execute the body.\n    state.test_ = false;\n    state.isLoop = true;\n    return new Interpreter.State(node['body'], state.scope);\n  }\n};\n\nInterpreter.prototype['stepEmptyStatement'] = function(stack, state, node) {\n  stack.pop();\n};\n\nInterpreter.prototype['stepEvalProgram_'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node['body'][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = this.value;\n};\n\nInterpreter.prototype['stepExpressionStatement'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node['expression'], state.scope);\n  }\n  stack.pop();\n  // Save this value to interpreter.value for use as a return value if\n  // this code is inside an eval function.\n  this.value = state.value;\n};\n\nInterpreter.prototype['stepForInStatement'] = function(stack, state, node) {\n  // First, initialize a variable if exists.  Only do so once, ever.\n  if (!state.doneInit_) {\n    state.doneInit_ = true;\n    if (node['left']['declarations'] &&\n        node['left']['declarations'][0]['init']) {\n      if (state.scope.strict) {\n        this.throwException(this.SYNTAX_ERROR,\n            'for-in loop variable declaration may not have an initializer.');\n      }\n      // Variable initialization: for (var x = 4 in y)\n      return new Interpreter.State(node['left'], state.scope);\n    }\n  }\n  // Second, look up the object.  Only do so once, ever.\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    if (!state.variable_) {\n      state.variable_ = state.value;\n    }\n    return new Interpreter.State(node['right'], state.scope);\n  }\n  if (!state.isLoop) {\n    // First iteration.\n    state.isLoop = true;\n    state.object_ = state.value;\n    state.visited_ = Object.create(null);\n  }\n  // Third, find the property name for this iteration.\n  if (state.name_ === undefined) {\n    gotPropName: while (true) {\n      if (state.object_ instanceof Interpreter.Object) {\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_.properties);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break;  // Reached end of this object's properties.\n          }\n          if (!Object.prototype.hasOwnProperty.call(state.object_.properties,\n                prop)) {\n            continue;  // Property has been deleted in the loop.\n          }\n          if (state.visited_[prop]) {\n            continue;  // Already seen this property on a child.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(\n                state.object_.properties, prop)) {\n            continue;  // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      } else if (state.object_ !== null && state.object_ !== undefined) {\n        // Primitive value (other than null or undefined).\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break;  // Reached end of this value's properties.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(\n                state.object_, prop)) {\n            continue;  // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      }\n      state.object_ = this.getPrototype(state.object_);\n      state.props_ = null;\n      if (state.object_ === null) {\n        // Done, exit loop.\n        stack.pop();\n        return;\n      }\n    }\n  }\n  // Fourth, find the variable\n  if (!state.doneVariable_) {\n    state.doneVariable_ = true;\n    var left = node['left'];\n    if (left['type'] === 'VariableDeclaration') {\n      // Inline variable declaration: for (var x in y)\n      state.variable_ =\n          [Interpreter.SCOPE_REFERENCE, left['declarations'][0]['id']['name']];\n    } else {\n      // Arbitrary left side: for (foo().bar in y)\n      state.variable_ = null;\n      var nextState = new Interpreter.State(left, state.scope);\n      nextState.components = true;\n      return nextState;\n    }\n  }\n  if (!state.variable_) {\n    state.variable_ = state.value;\n  }\n  // Fifth, set the variable.\n  if (!state.doneSetter_) {\n    state.doneSetter_ = true;\n    var value = state.name_;\n    var setter = this.setValue(state.variable_, value);\n    if (setter) {\n      return this.createSetter_(setter, state.variable_, value);\n    }\n  }\n  // Next step will be step three.\n  state.name_ = undefined;\n  // Reevaluate the variable since it could be a setter on the global object.\n  state.doneVariable_ = false;\n  state.doneSetter_ = false;\n  // Sixth and finally, execute the body if there was one.\n  if (node['body']) {\n    return new Interpreter.State(node['body'], state.scope);\n  }\n};\n\nInterpreter.prototype['stepForStatement'] = function(stack, state, node) {\n  switch (state.mode_) {\n    default:\n      state.mode_ = 1;\n      if (node['init']) {\n        return new Interpreter.State(node['init'], state.scope);\n      }\n      break;\n    case 1:\n      state.mode_ = 2;\n      if (node['test']) {\n        return new Interpreter.State(node['test'], state.scope);\n      }\n      break;\n    case 2:\n      state.mode_ = 3;\n      if (node['test'] && !state.value) {\n        // Done, exit loop.\n        stack.pop();\n      } else {  // Execute the body.\n        state.isLoop = true;\n        return new Interpreter.State(node['body'], state.scope);\n      }\n      break;\n    case 3:\n      state.mode_ = 1;\n      if (node['update']) {\n        return new Interpreter.State(node['update'], state.scope);\n      }\n      break;\n  }\n};\n\nInterpreter.prototype['stepFunctionDeclaration'] =\n    function(stack, state, node) {\n  // This was found and handled when the scope was populated.\n  stack.pop();\n};\n\nInterpreter.prototype['stepFunctionExpression'] = function(stack, state, node) {\n  stack.pop();\n  state = stack[stack.length - 1];\n  state.value = this.createFunction(node, state.scope, state.destinationName);\n};\n\nInterpreter.prototype['stepIdentifier'] = function(stack, state, node) {\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [Interpreter.SCOPE_REFERENCE, node['name']];\n    return;\n  }\n  var value = this.getValueFromScope(node['name']);\n  // An identifier could be a getter if it's a property on the global object.\n  if (this.getterStep_) {\n    // Call the getter function.\n    var func = /** @type {!Interpreter.Object} */ (value);\n    return this.createGetter_(func, this.globalObject);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepIfStatement'] =\n    Interpreter.prototype['stepConditionalExpression'];\n\nInterpreter.prototype['stepLabeledStatement'] = function(stack, state, node) {\n  // No need to hit this node again on the way back up the stack.\n  stack.pop();\n  // Note that a statement might have multiple labels.\n  var labels = state.labels || [];\n  labels.push(node['label']['name']);\n  var nextState = new Interpreter.State(node['body'], state.scope);\n  nextState.labels = labels;\n  return nextState;\n};\n\nInterpreter.prototype['stepLiteral'] = function(stack, state, node) {\n  stack.pop();\n  var value = node['value'];\n  if (value instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, value);\n    value = pseudoRegexp;\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepLogicalExpression'] = function(stack, state, node) {\n  if (node['operator'] !== '&&' && node['operator'] !== '||') {\n    throw SyntaxError('Unknown logical operator: ' + node['operator']);\n  }\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node['left'], state.scope);\n  }\n  if (!state.doneRight_) {\n    if ((node['operator'] === '&&' && !state.value) ||\n        (node['operator'] === '||' && state.value)) {\n      // Shortcut evaluation.\n      stack.pop();\n      stack[stack.length - 1].value = state.value;\n    } else {\n      state.doneRight_ = true;\n      return new Interpreter.State(node['right'], state.scope);\n    }\n  } else {\n    stack.pop();\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype['stepMemberExpression'] = function(stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node['object'], state.scope);\n  }\n  var propName;\n  if (!node['computed']) {\n    state.object_ = state.value;\n    // obj.foo -- Just access `foo` directly.\n    propName = node['property']['name'];\n  } else if (!state.doneProperty_) {\n    state.object_ = state.value;\n    // obj[foo] -- Compute value of `foo`.\n    state.doneProperty_ = true;\n    return new Interpreter.State(node['property'], state.scope);\n  } else {\n    propName = state.value;\n  }\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [state.object_, propName];\n  } else {\n    var value = this.getProperty(state.object_, propName);\n    if (this.getterStep_) {\n      // Call the getter function.\n      var func = /** @type {!Interpreter.Object} */ (value);\n      return this.createGetter_(func, state.object_);\n    }\n    stack[stack.length - 1].value = value;\n  }\n};\n\nInterpreter.prototype['stepNewExpression'] =\n    Interpreter.prototype['stepCallExpression'];\n\nInterpreter.prototype['stepObjectExpression'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var property = node['properties'][n];\n  if (!state.object_) {\n    // First execution.\n    state.object_ = this.createObjectProto(this.OBJECT_PROTO);\n    state.properties_ = Object.create(null);\n  } else {\n    // Set the property computed in the previous execution.\n    var propName = state.destinationName;\n    if (!state.properties_[propName]) {\n      // Create temp object to collect value, getter, and/or setter.\n      state.properties_[propName] = {};\n    }\n    state.properties_[propName][property['kind']] = state.value;\n    state.n_ = ++n;\n    property = node['properties'][n];\n  }\n  if (property) {\n    // Determine property name.\n    var key = property['key'];\n    if (key['type'] === 'Identifier') {\n      var propName = key['name'];\n    } else if (key['type'] === 'Literal') {\n      var propName = key['value'];\n    } else {\n      throw SyntaxError('Unknown object structure: ' + key['type']);\n    }\n    // When assigning an unnamed function to a property, the function's name\n    // is set to the property name.  Record the property name in case the\n    // value is a functionExpression.\n    // E.g. {foo: function() {}}\n    state.destinationName = propName;\n    return new Interpreter.State(property['value'], state.scope);\n  }\n  for (var key in state.properties_) {\n    var kinds = state.properties_[key];\n    if ('get' in kinds || 'set' in kinds) {\n      // Set a property with a getter or setter.\n      var descriptor = {\n        configurable: true,\n        enumerable: true,\n        get: kinds['get'],\n        set: kinds['set'],\n      };\n      this.setProperty(state.object_, key, Interpreter.VALUE_IN_DESCRIPTOR,\n                       descriptor);\n    } else {\n      // Set a normal property with a value.\n      this.setProperty(state.object_, key, kinds['init']);\n    }\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.object_;\n};\n\nInterpreter.prototype['stepProgram'] = function(stack, state, node) {\n  var expression = node['body'].shift();\n  if (expression) {\n    state.done = false;\n    return new Interpreter.State(expression, state.scope);\n  }\n  state.done = true;\n  // Don't pop the stateStack.\n  // Leave the root scope on the tree in case the program is appended to.\n};\n\nInterpreter.prototype['stepReturnStatement'] = function(stack, state, node) {\n  if (node['argument'] && !state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node['argument'], state.scope);\n  }\n  this.unwind(Interpreter.Completion.RETURN, state.value, undefined);\n};\n\nInterpreter.prototype['stepSequenceExpression'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node['expressions'][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.value;\n};\n\nInterpreter.prototype['stepSwitchStatement'] = function(stack, state, node) {\n  if (!state.test_) {\n    state.test_ = 1;\n    return new Interpreter.State(node['discriminant'], state.scope);\n  }\n  if (state.test_ === 1) {\n    state.test_ = 2;\n    // Preserve switch value between case tests.\n    state.switchValue_ = state.value;\n    state.defaultCase_ = -1;\n  }\n\n  while (true) {\n    var index = state.index_ || 0;\n    var switchCase = node['cases'][index];\n    if (!state.matched_ && switchCase && !switchCase['test']) {\n      // Test on the default case is null.\n      // Bypass (but store) the default case, and get back to it later.\n      state.defaultCase_ = index;\n      state.index_ = index + 1;\n      continue;\n    }\n    if (!switchCase && !state.matched_ && state.defaultCase_ !== -1) {\n      // Ran through all cases, no match.  Jump to the default.\n      state.matched_ = true;\n      state.index_ = state.defaultCase_;\n      continue;\n    }\n    if (switchCase) {\n      if (!state.matched_ && !state.tested_ && switchCase['test']) {\n        state.tested_ = true;\n        return new Interpreter.State(switchCase['test'], state.scope);\n      }\n      if (state.matched_ || state.value === state.switchValue_) {\n        state.matched_ = true;\n        var n = state.n_ || 0;\n        if (switchCase['consequent'][n]) {\n          state.isSwitch = true;\n          state.n_ = n + 1;\n          return new Interpreter.State(switchCase['consequent'][n],\n                                       state.scope);\n        }\n      }\n      // Move on to next case.\n      state.tested_ = false;\n      state.n_ = 0;\n      state.index_ = index + 1;\n    } else {\n      stack.pop();\n      return;\n    }\n  }\n};\n\nInterpreter.prototype['stepThisExpression'] = function(stack, state, node) {\n  stack.pop();\n  stack[stack.length - 1].value = this.getValueFromScope('this');\n};\n\nInterpreter.prototype['stepThrowStatement'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node['argument'], state.scope);\n  } else {\n    this.throwException(state.value);\n  }\n};\n\nInterpreter.prototype['stepTryStatement'] = function(stack, state, node) {\n  if (!state.doneBlock_) {\n    state.doneBlock_ = true;\n    return new Interpreter.State(node['block'], state.scope);\n  }\n  if (state.cv && state.cv.type === Interpreter.Completion.THROW &&\n      !state.doneHandler_ && node['handler']) {\n    state.doneHandler_ = true;\n    var nextState = new Interpreter.State(node['handler'], state.scope);\n    nextState.throwValue = state.cv.value;\n    state.cv = undefined;  // This error has been handled, don't rethrow.\n    return nextState;\n  }\n  if (!state.doneFinalizer_ && node['finalizer']) {\n    state.doneFinalizer_ = true;\n    return new Interpreter.State(node['finalizer'], state.scope);\n  }\n  stack.pop();\n  if (state.cv) {\n    // There was no catch handler, or the catch/finally threw an error.\n    // Throw the error up to a higher try.\n    this.unwind(state.cv.type, state.cv.value, state.cv.label);\n  }\n};\n\nInterpreter.prototype['stepUnaryExpression'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    var nextState = new Interpreter.State(node['argument'], state.scope);\n    nextState.components = node['operator'] === 'delete';\n    return nextState;\n  }\n  stack.pop();\n  var value = state.value;\n  switch (node['operator']) {\n    case '-':\n      value = -value;\n      break;\n    case '+':\n      value = +value;\n      break;\n    case '!':\n      value = !value;\n      break;\n    case '~':\n      value = ~value;\n      break;\n    case 'delete':\n      var result = true;\n      // If value is not an array, then it is a primitive, or some other value.\n      // If so, skip the delete and return true.\n      if (Array.isArray(value)) {\n        var obj = value[0];\n        if (obj === Interpreter.SCOPE_REFERENCE) {\n          // `delete foo;` is the same as `delete window.foo;`.\n          obj = state.scope;\n        }\n        var name = String(value[1]);\n        try {\n          delete obj.properties[name];\n        } catch (_e) {\n          if (state.scope.strict) {\n            this.throwException(this.TYPE_ERROR, \"Cannot delete property '\" +\n                                name + \"' of '\" + obj + \"'\");\n          } else {\n            result = false;\n          }\n        }\n      }\n      value = result;\n      break;\n    case 'typeof':\n      value = (value && value.class === 'Function') ? 'function' : typeof value;\n      break;\n    case 'void':\n      value = undefined;\n      break;\n    default:\n      throw SyntaxError('Unknown unary operator: ' + node['operator']);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepUpdateExpression'] = function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node['argument'], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.leftSide_) {\n    state.leftSide_ = state.value;\n  }\n  if (state.doneGetter_) {\n    state.leftValue_ = state.value;\n  }\n  if (!state.doneGetter_) {\n    var leftValue = this.getValue(state.leftSide_);\n    state.leftValue_ = leftValue;\n    if (this.getterStep_) {\n      // Call the getter function.\n      state.doneGetter_ = true;\n      var func = /** @type {!Interpreter.Object} */ (leftValue);\n      return this.createGetter_(func, state.leftSide_);\n    }\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var leftValue = Number(state.leftValue_);\n  var changeValue;\n  if (node['operator'] === '++') {\n    changeValue = leftValue + 1;\n  } else if (node['operator'] === '--') {\n    changeValue = leftValue - 1;\n  } else {\n    throw SyntaxError('Unknown update expression: ' + node['operator']);\n  }\n  var returnValue = node['prefix'] ? changeValue : leftValue;\n  var setter = this.setValue(state.leftSide_, changeValue);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = returnValue;\n    return this.createSetter_(setter, state.leftSide_, changeValue);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = returnValue;\n};\n\nInterpreter.prototype['stepVariableDeclaration'] = function(stack, state, node) {\n  var declarations = node['declarations'];\n  var n = state.n_ || 0;\n  var declarationNode = declarations[n];\n  if (state.init_ && declarationNode) {\n    // This setValue call never needs to deal with calling a setter function.\n    // Note that this is setting the init value, not defining the variable.\n    // Variable definition is done when scope is populated.\n    this.setValueToScope(declarationNode['id']['name'], state.value);\n    state.init_ = false;\n    declarationNode = declarations[++n];\n  }\n  while (declarationNode) {\n    // Skip any declarations that are not initialized.  They have already\n    // been defined as undefined in populateScope_.\n    if (declarationNode['init']) {\n      state.n_ = n;\n      state.init_ = true;\n      // When assigning an unnamed function to a variable, the function's name\n      // is set to the variable name.  Record the variable name in case the\n      // right side is a functionExpression.\n      // E.g. var foo = function() {};\n      state.destinationName = declarationNode['id']['name'];\n      return new Interpreter.State(declarationNode['init'], state.scope);\n    }\n    declarationNode = declarations[++n];\n  }\n  stack.pop();\n};\n\nInterpreter.prototype['stepWithStatement'] = function(stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node['object'], state.scope);\n  } else if (!state.doneBody_) {\n    state.doneBody_ = true;\n    var scope = this.createSpecialScope(state.scope, state.value);\n    return new Interpreter.State(node['body'], scope);\n  } else {\n    stack.pop();\n  }\n};\n\nInterpreter.prototype['stepWhileStatement'] =\n    Interpreter.prototype['stepDoWhileStatement'];\n\n// Preserve top-level API functions from being pruned/renamed by JS compilers.\n// Add others as needed.\nInterpreter.nativeGlobal['Interpreter'] = Interpreter;\nInterpreter.prototype['step'] = Interpreter.prototype.step;\nInterpreter.prototype['run'] = Interpreter.prototype.run;\nInterpreter.prototype['appendCode'] = Interpreter.prototype.appendCode;\nInterpreter.prototype['createObject'] = Interpreter.prototype.createObject;\nInterpreter.prototype['createObjectProto'] =\n    Interpreter.prototype.createObjectProto;\nInterpreter.prototype['createAsyncFunction'] =\n    Interpreter.prototype.createAsyncFunction;\nInterpreter.prototype['createNativeFunction'] =\n    Interpreter.prototype.createNativeFunction;\nInterpreter.prototype['getProperty'] = Interpreter.prototype.getProperty;\nInterpreter.prototype['setProperty'] = Interpreter.prototype.setProperty;\nInterpreter.prototype['nativeToPseudo'] = Interpreter.prototype.nativeToPseudo;\nInterpreter.prototype['pseudoToNative'] = Interpreter.prototype.pseudoToNative;\nInterpreter.prototype['getGlobalScope'] = Interpreter.prototype.getGlobalScope;\nInterpreter.prototype['getStateStack'] = Interpreter.prototype.getStateStack;\nInterpreter.prototype['setStateStack'] = Interpreter.prototype.setStateStack;\nInterpreter['VALUE_IN_DESCRIPTOR'] = Interpreter.VALUE_IN_DESCRIPTOR;\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = {\n  Interpreter\n};\n\n\n/***/ }),\n\n/***/ \"./original-repo/acorn.js\":\n/*!********************************!*\\\n  !*** ./original-repo/acorn.js ***!\n  \\********************************/\n/***/ (function(module, exports) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke and released under an MIT\n// license. The Unicode regexps (for identifiers and whitespace) were\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/marijnh/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\n(function(root, mod) {\n  if (true) return mod(exports); // CommonJS\n  if (true) return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n  mod(root.acorn || (root.acorn = {})); // Plain browser env\n})(this, function(exports) {\n  \"use strict\";\n\n  exports.version = \"0.5.0\";\n  // Plus additional edits marked with 'JS-Interpreter change' comments.\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api], with the caveat that the SpiderMonkey-specific syntax\n  // (`let`, `yield`, inline XML, etc) is not recognized.\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  var options, input, inputLen, sourceFile;\n\n  exports.parse = function(inpt, opts) {\n    input = String(inpt); inputLen = input.length;\n    setOptions(opts);\n    initTokenState();\n    return parseTopLevel(options.program);\n  };\n\n  // A second optional argument can be given to further configure\n  // the parser process. These options are recognized:\n\n  var defaultOptions = exports.defaultOptions = {\n    // JS-Interpreter change:\n    // `ecmaVersion` option has been removed along with all cases where\n    // it is checked.  In this version of Acorn it was limited to 3 or 5,\n    // and there's no use case for 3 with JS-Interpreter.\n\n    // Turn on `strictSemicolons` to prevent the parser from doing\n    // automatic semicolon insertion.\n    strictSemicolons: false,\n    // When `allowTrailingCommas` is false, the parser will not allow\n    // trailing commas in array and object literals.\n    allowTrailingCommas: true,\n    // By default, reserved words are not enforced. Enable\n    // `forbidReserved` to enforce them. When this option has the\n    // value \"everywhere\", reserved words and keywords can also not be\n    // used as property names.\n    forbidReserved: false,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null\n  };\n\n  function setOptions(opts) {\n    options = opts || {};\n    for (var opt in defaultOptions) if (!Object.prototype.hasOwnProperty.call(options, opt))\n      options[opt] = defaultOptions[opt];\n    sourceFile = options.sourceFile || null;\n  }\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  var getLineInfo = exports.getLineInfo = function(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreak.lastIndex = cur;\n      var match = lineBreak.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else break;\n    }\n    return {line: line, column: offset - cur};\n  };\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenize` export provides an interface to the tokenizer.\n  // Because the tokenizer is optimized for being efficiently used by\n  // the Acorn parser itself, this interface is somewhat crude and not\n  // very modular. Performing another parse or call to `tokenize` will\n  // reset the internal state, and invalidate existing tokenizers.\n\n  exports.tokenize = function(inpt, opts) {\n    input = String(inpt); inputLen = input.length;\n    setOptions(opts);\n    initTokenState();\n\n    var t = {};\n    function getToken(forceRegexp) {\n      lastEnd = tokEnd;\n      readToken(forceRegexp);\n      t.start = tokStart; t.end = tokEnd;\n      t.startLoc = tokStartLoc; t.endLoc = tokEndLoc;\n      t.type = tokType; t.value = tokVal;\n      return t;\n    }\n    getToken.jumpTo = function(pos, reAllowed) {\n      tokPos = pos;\n      if (options.locations) {\n        tokCurLine = 1;\n        tokLineStart = lineBreak.lastIndex = 0;\n        var match;\n        while ((match = lineBreak.exec(input)) && match.index < pos) {\n          ++tokCurLine;\n          tokLineStart = match.index + match[0].length;\n        }\n      }\n      tokRegexpAllowed = reAllowed;\n      skipSpace();\n    };\n    return getToken;\n  };\n\n  // State is kept in (closure-)global variables. We already saw the\n  // `options`, `input`, and `inputLen` variables above.\n\n  // The current position of the tokenizer in the input.\n\n  var tokPos;\n\n  // The start and end offsets of the current token.\n\n  var tokStart, tokEnd;\n\n  // When `options.locations` is true, these hold objects\n  // containing the tokens start and end line/column pairs.\n\n  var tokStartLoc, tokEndLoc;\n\n  // The type and value of the current token. Token types are objects,\n  // named by variables against which they can be compared, and\n  // holding properties that describe them (indicating, for example,\n  // the precedence of an infix operator, and the original name of a\n  // keyword token). The kind of value that's held in `tokVal` depends\n  // on the type of the token. For literals, it is the literal value,\n  // for operators, the operator name, and so on.\n\n  var tokType, tokVal;\n\n  // Interal state for the tokenizer. To distinguish between division\n  // operators and regular expressions, it remembers whether the last\n  // token was one that is allowed to be followed by an expression.\n  // (If it is, a slash is probably a regexp, if it isn't it's a\n  // division operator. See the `parseStatement` function for a\n  // caveat.)\n\n  var tokRegexpAllowed;\n\n  // When `options.locations` is true, these are used to keep\n  // track of the current line, and know when a new line has been\n  // entered.\n\n  var tokCurLine, tokLineStart;\n\n  // These store the position of the previous token, which is useful\n  // when finishing a node and assigning its `end` position.\n\n  var lastStart, lastEnd, lastEndLoc;\n\n  // This is the parser's state. `inFunction` is used to reject\n  // `return` statements outside of functions, `labels` to verify that\n  // `break` and `continue` have somewhere to jump to, and `strict`\n  // indicates whether strict mode is on.\n\n  var inFunction, labels, strict;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  function raise(pos, message) {\n    var loc = getLineInfo(input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = tokPos;\n    throw err;\n  }\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty = [];\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // These are the general types. The `type` property is only used to\n  // make them recognizeable when debugging.\n\n  var _num = {type: \"num\"}, _regexp = {type: \"regexp\"}, _string = {type: \"string\"};\n  var _name = {type: \"name\"}, _eof = {type: \"eof\"};\n\n  // Keyword tokens. The `keyword` property (also used in keyword-like\n  // operators) indicates that the token originated from an\n  // identifier-like word, which is used when parsing property names.\n  //\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var _break = {keyword: \"break\"}, _case = {keyword: \"case\", beforeExpr: true}, _catch = {keyword: \"catch\"};\n  var _continue = {keyword: \"continue\"}, _debugger = {keyword: \"debugger\"}, _default = {keyword: \"default\"};\n  var _do = {keyword: \"do\", isLoop: true}, _else = {keyword: \"else\", beforeExpr: true};\n  var _finally = {keyword: \"finally\"}, _for = {keyword: \"for\", isLoop: true}, _function = {keyword: \"function\"};\n  var _if = {keyword: \"if\"}, _return = {keyword: \"return\", beforeExpr: true}, _switch = {keyword: \"switch\"};\n  var _throw = {keyword: \"throw\", beforeExpr: true}, _try = {keyword: \"try\"}, _var = {keyword: \"var\"};\n  var _while = {keyword: \"while\", isLoop: true}, _with = {keyword: \"with\"}, _new = {keyword: \"new\", beforeExpr: true};\n  var _this = {keyword: \"this\"};\n\n  // The keywords that denote values.\n\n  var _null = {keyword: \"null\", atomValue: null}, _true = {keyword: \"true\", atomValue: true};\n  var _false = {keyword: \"false\", atomValue: false};\n\n  // Some keywords are treated as regular operators. `in` sometimes\n  // (when parsing `for`) needs to be tested against specifically, so\n  // we assign a variable name to it for quick comparing.\n\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywordTypes = {\"break\": _break, \"case\": _case, \"catch\": _catch,\n                      \"continue\": _continue, \"debugger\": _debugger, \"default\": _default,\n                      \"do\": _do, \"else\": _else, \"finally\": _finally, \"for\": _for,\n                      \"function\": _function, \"if\": _if, \"return\": _return, \"switch\": _switch,\n                      \"throw\": _throw, \"try\": _try, \"var\": _var, \"while\": _while, \"with\": _with,\n                      \"null\": _null, \"true\": _true, \"false\": _false, \"new\": _new, \"in\": _in,\n                      \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true}, \"this\": _this,\n                      \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\n                      \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\n                      \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true}};\n\n  // Punctuation token types. Again, the `type` property is purely for debugging.\n\n  var _bracketL = {type: \"[\", beforeExpr: true}, _bracketR = {type: \"]\"}, _braceL = {type: \"{\", beforeExpr: true};\n  var _braceR = {type: \"}\"}, _parenL = {type: \"(\", beforeExpr: true}, _parenR = {type: \")\"};\n  var _comma = {type: \",\", beforeExpr: true}, _semi = {type: \";\", beforeExpr: true};\n  var _colon = {type: \":\", beforeExpr: true}, _dot = {type: \".\"}, _question = {type: \"?\", beforeExpr: true};\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator. `isUpdate` specifies that the node produced by\n  // the operator should be of type UpdateExpression rather than\n  // simply UnaryExpression (`++` and `--`).\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  var _slash = {binop: 10, beforeExpr: true}, _eq = {isAssign: true, beforeExpr: true};\n  var _assign = {isAssign: true, beforeExpr: true};\n  var _incDec = {postfix: true, prefix: true, isUpdate: true}, _prefix = {prefix: true, beforeExpr: true};\n  var _logicalOR = {binop: 1, beforeExpr: true};\n  var _logicalAND = {binop: 2, beforeExpr: true};\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\n  var _equality = {binop: 6, beforeExpr: true};\n  var _relational = {binop: 7, beforeExpr: true};\n  var _bitShift = {binop: 8, beforeExpr: true};\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\n  var _multiplyModulo = {binop: 10, beforeExpr: true};\n\n  // Provide access to the token types for external users of the\n  // tokenizer.\n\n  exports.tokTypes = {bracketL: _bracketL, bracketR: _bracketR, braceL: _braceL, braceR: _braceR,\n                      parenL: _parenL, parenR: _parenR, comma: _comma, semi: _semi, colon: _colon,\n                      dot: _dot, question: _question, slash: _slash, eq: _eq, name: _name, eof: _eof,\n                      num: _num, regexp: _regexp, string: _string};\n  for (var kw in keywordTypes) exports.tokTypes[\"_\" + kw] = keywordTypes[kw];\n\n  // JS-Interpreter change:\n  // Acorn's original code built up functions using strings for maximum efficiency.\n  // However, this triggered a CSP unsafe-eval requirement.  Here's a slower, but\n  // simpler approach.  -- Neil Fraser, January 2022.\n  // https://github.com/NeilFraser/JS-Interpreter/issues/228\n  function makePredicate(words) {\n    words = words.split(\" \");\n    var set = Object.create(null);\n    for (var i = 0; i < words.length; i++) {\n      set[words[i]] = true;\n    }\n    return function(str) {\n      return set[str] || false;\n    };\n  }\n\n  // ECMAScript 5 reserved words.\n\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\n\n  // The additional reserved words in strict mode.\n\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\n\n  // The forbidden variable names in strict mode.\n\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\n\n  // And the keywords.\n\n  var isKeyword = makePredicate(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\");\n\n  // ## Character categories\n\n  // Big ugly regular expressions that match characters in the\n  // whitespace, identifier, and identifier-start categories. These\n  // are only applied when a character is found to actually have a\n  // code point above 128.\n\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // Whether a single character denotes a newline.\n\n  var newline = /[\\n\\r\\u2028\\u2029]/;\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\n\n  // Test whether a given character code starts an identifier.\n\n  var isIdentifierStart = exports.isIdentifierStart = function(code) {\n    if (code < 65) return code === 36;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123)return true;\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  };\n\n  // Test whether a given character is part of an identifier.\n\n  var isIdentifierChar = exports.isIdentifierChar = function(code) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123)return true;\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  };\n\n  // ## Tokenizer\n\n  // These are used when `options.locations` is on, for the\n  // `tokStartLoc` and `tokEndLoc` properties.\n\n  function line_loc_t() {\n    this.line = tokCurLine;\n    this.column = tokPos - tokLineStart;\n  }\n\n  // Reset the token state. Used at the start of a parse.\n\n  function initTokenState() {\n    tokCurLine = 1;\n    tokPos = tokLineStart = 0;\n    tokRegexpAllowed = true;\n    skipSpace();\n  }\n\n  // Called at the end of every token. Sets `tokEnd`, `tokVal`, and\n  // `tokRegexpAllowed`, and skips the space after the token, so that\n  // the next one's `tokStart` will point at the right position.\n\n  function finishToken(type, val) {\n    tokEnd = tokPos;\n    if (options.locations) tokEndLoc = new line_loc_t;\n    tokType = type;\n    skipSpace();\n    tokVal = val;\n    tokRegexpAllowed = type.beforeExpr;\n  }\n\n  function skipBlockComment() {\n    var startLoc = options.onComment && options.locations && new line_loc_t;\n    var start = tokPos, end = input.indexOf(\"*/\", tokPos += 2);\n    if (end === -1) raise(tokPos - 2, \"Unterminated comment\");\n    tokPos = end + 2;\n    if (options.locations) {\n      lineBreak.lastIndex = start;\n      var match;\n      while ((match = lineBreak.exec(input)) && match.index < tokPos) {\n        ++tokCurLine;\n        tokLineStart = match.index + match[0].length;\n      }\n    }\n    if (options.onComment)\n      options.onComment(true, input.slice(start + 2, end), start, tokPos,\n                        startLoc, options.locations && new line_loc_t);\n  }\n\n  function skipLineComment() {\n    var start = tokPos;\n    var startLoc = options.onComment && options.locations && new line_loc_t;\n    var ch = input.charCodeAt(tokPos+=2);\n    while (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n      ++tokPos;\n      ch = input.charCodeAt(tokPos);\n    }\n    if (options.onComment)\n      options.onComment(false, input.slice(start + 2, tokPos), start, tokPos,\n                        startLoc, options.locations && new line_loc_t);\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  function skipSpace() {\n    while (tokPos < inputLen) {\n      var ch = input.charCodeAt(tokPos);\n      if (ch === 32) { // ' '\n        ++tokPos;\n      } else if (ch === 13) {\n        ++tokPos;\n        var next = input.charCodeAt(tokPos);\n        if (next === 10) {\n          ++tokPos;\n        }\n        if (options.locations) {\n          ++tokCurLine;\n          tokLineStart = tokPos;\n        }\n      } else if (ch === 10 || ch === 8232 || ch === 8233) {\n        ++tokPos;\n        if (options.locations) {\n          ++tokCurLine;\n          tokLineStart = tokPos;\n        }\n      } else if (ch > 8 && ch < 14) {\n        ++tokPos;\n      } else if (ch === 47) { // '/'\n        var next = input.charCodeAt(tokPos + 1);\n        if (next === 42) { // '*'\n          skipBlockComment();\n        } else if (next === 47) { // '/'\n          skipLineComment();\n        } else break;\n      } else if (ch === 160) { // '\\xa0'\n        ++tokPos;\n      } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++tokPos;\n      } else {\n        break;\n      }\n    }\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  // The `forceRegexp` parameter is used in the one case where the\n  // `tokRegexpAllowed` trick does not work. See `parseStatement`.\n\n  function readToken_dot() {\n    var next = input.charCodeAt(tokPos + 1);\n    if (next >= 48 && next <= 57) return readNumber(true);\n    ++tokPos;\n    return finishToken(_dot);\n  }\n\n  function readToken_slash() { // '/'\n    var next = input.charCodeAt(tokPos + 1);\n    if (tokRegexpAllowed) {++tokPos; return readRegexp();}\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_slash, 1);\n  }\n\n  function readToken_mult_modulo() { // '%*'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_multiplyModulo, 1);\n  }\n\n  function readToken_pipe_amp(code) { // '|&'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === code) return finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\n  }\n\n  function readToken_caret() { // '^'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_bitwiseXOR, 1);\n  }\n\n  function readToken_plus_min(code) { // '+-'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === code) {\n      if (next == 45 && input.charCodeAt(tokPos + 2) == 62 &&\n          newline.test(input.slice(lastEnd, tokPos))) {\n        // A `-->` line comment\n        tokPos += 3;\n        skipLineComment();\n        skipSpace();\n        return readToken();\n      }\n      return finishOp(_incDec, 2);\n    }\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_plusMin, 1);\n  }\n\n  function readToken_lt_gt(code) { // '<>'\n    var next = input.charCodeAt(tokPos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && input.charCodeAt(tokPos + 2) === 62 ? 3 : 2;\n      if (input.charCodeAt(tokPos + size) === 61) return finishOp(_assign, size + 1);\n      return finishOp(_bitShift, size);\n    }\n    if (next == 33 && code == 60 && input.charCodeAt(tokPos + 2) == 45 &&\n        input.charCodeAt(tokPos + 3) == 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      tokPos += 4;\n      skipLineComment();\n      skipSpace();\n      return readToken();\n    }\n    if (next === 61)\n      size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\n    return finishOp(_relational, size);\n  }\n\n  function readToken_eq_excl(code) { // '=!'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) return finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\n    return finishOp(code === 61 ? _eq : _prefix, 1);\n  }\n\n  function getTokenFromCode(code) {\n    switch(code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit.\n    case 46: // '.'\n      return readToken_dot();\n\n      // Punctuation tokens.\n    case 40: ++tokPos; return finishToken(_parenL);\n    case 41: ++tokPos; return finishToken(_parenR);\n    case 59: ++tokPos; return finishToken(_semi);\n    case 44: ++tokPos; return finishToken(_comma);\n    case 91: ++tokPos; return finishToken(_bracketL);\n    case 93: ++tokPos; return finishToken(_bracketR);\n    case 123: ++tokPos; return finishToken(_braceL);\n    case 125: ++tokPos; return finishToken(_braceR);\n    case 58: ++tokPos; return finishToken(_colon);\n    case 63: ++tokPos; return finishToken(_question);\n\n      // '0x' is a hexadecimal number.\n    case 48: // '0'\n      var next = input.charCodeAt(tokPos + 1);\n      if (next === 120 || next === 88) return readHexNumber();\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return readNumber(false);\n\n      // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return readString(code);\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47: // '/'\n      return readToken_slash(code);\n\n    case 37: case 42: // '%*'\n      return readToken_mult_modulo();\n\n    case 124: case 38: // '|&'\n      return readToken_pipe_amp(code);\n\n    case 94: // '^'\n      return readToken_caret();\n\n    case 43: case 45: // '+-'\n      return readToken_plus_min(code);\n\n    case 60: case 62: // '<>'\n      return readToken_lt_gt(code);\n\n    case 61: case 33: // '=!'\n      return readToken_eq_excl(code);\n\n    case 126: // '~'\n      return finishOp(_prefix, 1);\n    }\n\n    return false;\n  }\n\n  function readToken(forceRegexp) {\n    if (!forceRegexp) tokStart = tokPos;\n    else tokPos = tokStart + 1;\n    if (options.locations) tokStartLoc = new line_loc_t;\n    if (forceRegexp) return readRegexp();\n    if (tokPos >= inputLen) return finishToken(_eof);\n\n    var code = input.charCodeAt(tokPos);\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code) || code === 92 /* '\\' */) return readWord();\n\n    var tok = getTokenFromCode(code);\n\n    if (tok === false) {\n      // If we are here, we either found a non-ASCII identifier\n      // character, or something that's entirely disallowed.\n      var ch = String.fromCharCode(code);\n      if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) return readWord();\n      raise(tokPos, \"Unexpected character '\" + ch + \"'\");\n    }\n    return tok;\n  }\n\n  function finishOp(type, size) {\n    var str = input.slice(tokPos, tokPos + size);\n    tokPos += size;\n    finishToken(type, str);\n  }\n\n  // Parse a regular expression. Some context-awareness is necessary,\n  // since a '/' inside a '[]' set does not end the expression.\n\n  function readRegexp() {\n    // JS-Interpreter change:\n    // Removed redundant declaration of 'content' here.  Caused lint errors.\n    // -- Neil Fraser, June 2022.\n    var escaped, inClass, start = tokPos;\n    for (;;) {\n      if (tokPos >= inputLen) raise(start, \"Unterminated regular expression\");\n      var ch = input.charAt(tokPos);\n      if (newline.test(ch)) raise(start, \"Unterminated regular expression\");\n      if (!escaped) {\n        if (ch === \"[\") inClass = true;\n        else if (ch === \"]\" && inClass) inClass = false;\n        else if (ch === \"/\" && !inClass) break;\n        escaped = ch === \"\\\\\";\n      } else escaped = false;\n      ++tokPos;\n    }\n    var content = input.slice(start, tokPos);\n    ++tokPos;\n    // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n    // here (don't ask).\n    var mods = readWord1();\n    // JS-Interpreter change:\n    // Acorn used to use 'gmsiy' to check for flags.  But 's' and 'y' are ES6.\n    // -- Neil Fraser, December 2022.\n    // https://github.com/acornjs/acorn/issues/1163\n    if (mods && !/^[gmi]*$/.test(mods)) raise(start, \"Invalid regexp flag\");\n    try {\n      var value = new RegExp(content, mods);\n    } catch (e) {\n      if (e instanceof SyntaxError) raise(start, e.message);\n      raise(e);\n    }\n    return finishToken(_regexp, value);\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  function readInt(radix, len) {\n    var start = tokPos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = input.charCodeAt(tokPos), val;\n      if (code >= 97) val = code - 97 + 10; // a\n      else if (code >= 65) val = code - 65 + 10; // A\n      else if (code >= 48 && code <= 57) val = code - 48; // 0-9\n      else val = Infinity;\n      if (val >= radix) break;\n      ++tokPos;\n      total = total * radix + val;\n    }\n    if (tokPos === start || len != null && tokPos - start !== len) return null;\n\n    return total;\n  }\n\n  function readHexNumber() {\n    tokPos += 2; // 0x\n    var val = readInt(16);\n    if (val == null) raise(tokStart + 2, \"Expected hexadecimal number\");\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n    return finishToken(_num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  function readNumber(startsWithDot) {\n    var start = tokPos, isFloat = false, octal = input.charCodeAt(tokPos) === 48;\n    if (!startsWithDot && readInt(10) === null) raise(start, \"Invalid number\");\n    if (input.charCodeAt(tokPos) === 46) {\n      ++tokPos;\n      readInt(10);\n      isFloat = true;\n    }\n    var next = input.charCodeAt(tokPos);\n    if (next === 69 || next === 101) { // 'eE'\n      next = input.charCodeAt(++tokPos);\n      if (next === 43 || next === 45) ++tokPos; // '+-'\n      if (readInt(10) === null) raise(start, \"Invalid number\");\n      isFloat = true;\n    }\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\n    var str = input.slice(start, tokPos), val;\n    if (isFloat) val = parseFloat(str);\n    else if (!octal || str.length === 1) val = parseInt(str, 10);\n    else if (/[89]/.test(str) || strict) raise(start, \"Invalid number\");\n    else val = parseInt(str, 8);\n    return finishToken(_num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  function readString(quote) {\n    tokPos++;\n    var out = \"\";\n    for (;;) {\n      if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\n      var ch = input.charCodeAt(tokPos);\n      if (ch === quote) {\n        ++tokPos;\n        return finishToken(_string, out);\n      }\n      if (ch === 92) { // '\\'\n        ch = input.charCodeAt(++tokPos);\n        var octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\n        if (octal) octal = octal[0];\n        while (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\n        if (octal === \"0\") octal = null;\n        ++tokPos;\n        if (octal) {\n          if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\n          out += String.fromCharCode(parseInt(octal, 8));\n          tokPos += octal.length - 1;\n        } else {\n          switch (ch) {\n          case 110: out += \"\\n\"; break; // 'n' -> '\\n'\n          case 114: out += \"\\r\"; break; // 'r' -> '\\r'\n          case 120: out += String.fromCharCode(readHexChar(2)); break; // 'x'\n          case 117: out += String.fromCharCode(readHexChar(4)); break; // 'u'\n          case 85: out += String.fromCharCode(readHexChar(8)); break; // 'U'\n          case 116: out += \"\\t\"; break; // 't' -> '\\t'\n          case 98: out += \"\\b\"; break; // 'b' -> '\\b'\n          case 118: out += \"\\u000b\"; break; // 'v' -> '\\u000b'\n          case 102: out += \"\\f\"; break; // 'f' -> '\\f'\n          case 48: out += \"\\0\"; break; // 0 -> '\\0'\n          case 13: if (input.charCodeAt(tokPos) === 10) ++tokPos; // '\\r\\n'\n          case 10: // ' \\n'\n            if (options.locations) { tokLineStart = tokPos; ++tokCurLine; }\n            break;\n          default: out += String.fromCharCode(ch); break;\n          }\n        }\n      } else {\n        if (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) raise(tokStart, \"Unterminated string constant\");\n        out += String.fromCharCode(ch); // '\\'\n        ++tokPos;\n      }\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  function readHexChar(len) {\n    var n = readInt(16, len);\n    if (n === null) raise(tokStart, \"Bad character escape sequence\");\n    return n;\n  }\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n  var containsEsc;\n\n  // Read an identifier, and return it as a string. Sets `containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Only builds up the word character-by-character when it actually\n  // containeds an escape, as a micro-optimization.\n\n  function readWord1() {\n    containsEsc = false;\n    var word, first = true, start = tokPos;\n    for (;;) {\n      var ch = input.charCodeAt(tokPos);\n      if (isIdentifierChar(ch)) {\n        if (containsEsc) word += input.charAt(tokPos);\n        ++tokPos;\n      } else if (ch === 92) { // \"\\\"\n        if (!containsEsc) word = input.slice(start, tokPos);\n        containsEsc = true;\n        if (input.charCodeAt(++tokPos) != 117) // \"u\"\n          raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        ++tokPos;\n        var esc = readHexChar(4);\n        var escStr = String.fromCharCode(esc);\n        if (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\n        if (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc)))\n          raise(tokPos - 4, \"Invalid Unicode escape\");\n        word += escStr;\n      } else {\n        break;\n      }\n      first = false;\n    }\n    return containsEsc ? word : input.slice(start, tokPos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  function readWord() {\n    var word = readWord1();\n    var type = _name;\n    if (!containsEsc && isKeyword(word))\n      type = keywordTypes[word];\n    return finishToken(type, word);\n  }\n\n  // ## Parser\n\n  // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n  // ### Parser utilities\n\n  // Continue to the next token.\n\n  function next() {\n    lastStart = tokStart;\n    lastEnd = tokEnd;\n    lastEndLoc = tokEndLoc;\n    readToken();\n  }\n\n  // Enter strict mode. Re-reads the next token to please pedantic\n  // tests (\"use strict\"; 010; -- should fail).\n\n  function setStrict(strct) {\n    strict = strct;\n    tokPos = tokStart;\n    if (options.locations) {\n      while (tokPos < tokLineStart) {\n        tokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\n        --tokCurLine;\n      }\n    }\n    skipSpace();\n    readToken();\n  }\n\n  // Start an AST node, attaching a start offset.\n\n  function node_t() {\n    this.type = null;\n    this.start = tokStart;\n    this.end = null;\n  }\n\n  function node_loc_t() {\n    this.start = tokStartLoc;\n    this.end = null;\n    if (sourceFile !== null) this.source = sourceFile;\n  }\n\n  function startNode() {\n    var node = new node_t();\n    if (options.locations)\n      node.loc = new node_loc_t();\n    if (options.directSourceFile)\n      node.sourceFile = options.directSourceFile;\n    if (options.ranges)\n      node.range = [tokStart, 0];\n    return node;\n  }\n\n  // Start a node whose start offset information should be based on\n  // the start of another node. For example, a binary operator node is\n  // only started after its left-hand side has already been parsed.\n\n  function startNodeFrom(other) {\n    var node = new node_t();\n    node.start = other.start;\n    if (options.locations) {\n      node.loc = new node_loc_t();\n      node.loc.start = other.loc.start;\n    }\n    if (options.ranges)\n      node.range = [other.range[0], 0];\n\n    return node;\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNode(node, type) {\n    node.type = type;\n    node.end = lastEnd;\n    if (options.locations)\n      node.loc.end = lastEndLoc;\n    if (options.ranges)\n      node.range[1] = lastEnd;\n    return node;\n  }\n\n  // Test whether a statement node is the string literal `\"use strict\"`.\n\n  function isUseStrict(stmt) {\n    return stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\n  }\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  function eat(type) {\n    if (tokType === type) {\n      next();\n      return true;\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  function canInsertSemicolon() {\n    return !options.strictSemicolons &&\n      (tokType === _eof || tokType === _braceR || newline.test(input.slice(lastEnd, tokStart)));\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  function semicolon() {\n    if (!eat(_semi) && !canInsertSemicolon()) unexpected();\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  function expect(type) {\n    if (tokType === type) next();\n    else unexpected();\n  }\n\n  // Raise an unexpected token error.\n\n  function unexpected() {\n    raise(tokStart, \"Unexpected token\");\n  }\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n\n  function checkLVal(expr) {\n    if (expr.type !== \"Identifier\" && expr.type !== \"MemberExpression\")\n      raise(expr.start, \"Assigning to rvalue\");\n    if (strict && expr.type === \"Identifier\" && isStrictBadIdWord(expr.name))\n      raise(expr.start, \"Assigning to \" + expr.name + \" in strict mode\");\n  }\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  function parseTopLevel(program) {\n    lastStart = lastEnd = tokPos;\n    if (options.locations) lastEndLoc = new line_loc_t;\n    inFunction = strict = null;\n    labels = [];\n    readToken();\n\n    var node = program || startNode(), first = true;\n    if (!program) node.body = [];\n    while (tokType !== _eof) {\n      var stmt = parseStatement();\n      node.body.push(stmt);\n      if (first && isUseStrict(stmt)) setStrict(true);\n      first = false;\n    }\n    return finishNode(node, \"Program\");\n  }\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo);`, where looking at the previous token\n  // does not help.\n\n  function parseStatement() {\n    if (tokType === _slash || tokType === _assign && tokVal == \"/=\")\n      readToken(true);\n\n    var starttype = tokType, node = startNode();\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case _break: case _continue:\n      next();\n      var isBreak = starttype === _break;\n      if (eat(_semi) || canInsertSemicolon()) node.label = null;\n      else if (tokType !== _name) unexpected();\n      else {\n        node.label = parseIdent();\n        semicolon();\n      }\n\n      // Verify that there is an actual destination to break or\n      // continue to.\n      for (var i = 0; i < labels.length; ++i) {\n        var lab = labels[i];\n        if (node.label == null || lab.name === node.label.name) {\n          if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n          if (node.label && isBreak) break;\n        }\n      }\n      if (i === labels.length) raise(node.start, \"Unsyntactic \" + starttype.keyword);\n      return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n\n    case _debugger:\n      next();\n      semicolon();\n      return finishNode(node, \"DebuggerStatement\");\n\n    case _do:\n      next();\n      labels.push(loopLabel);\n      node.body = parseStatement();\n      labels.pop();\n      expect(_while);\n      node.test = parseParenExpression();\n      semicolon();\n      return finishNode(node, \"DoWhileStatement\");\n\n      // Disambiguating between a `for` and a `for`/`in` loop is\n      // non-trivial. Basically, we have to parse the init `var`\n      // statement or expression, disallowing the `in` operator (see\n      // the second parameter to `parseExpression`), and then check\n      // whether the next token is `in`. When there is no init part\n      // (semicolon immediately after the opening parenthesis), it is\n      // a regular `for` loop.\n\n    case _for:\n      next();\n      labels.push(loopLabel);\n      expect(_parenL);\n      if (tokType === _semi) return parseFor(node, null);\n      if (tokType === _var) {\n        var init = startNode();\n        next();\n        parseVar(init, true);\n        finishNode(init, \"VariableDeclaration\");\n        if (init.declarations.length === 1 && eat(_in))\n          return parseForIn(node, init);\n        return parseFor(node, init);\n      }\n      var init = parseExpression(false, true);\n      if (eat(_in)) {checkLVal(init); return parseForIn(node, init);}\n      return parseFor(node, init);\n\n    case _function:\n      next();\n      return parseFunction(node, true);\n\n    case _if:\n      next();\n      node.test = parseParenExpression();\n      node.consequent = parseStatement();\n      node.alternate = eat(_else) ? parseStatement() : null;\n      return finishNode(node, \"IfStatement\");\n\n    case _return:\n      if (!inFunction && !options.allowReturnOutsideFunction)\n        raise(tokStart, \"'return' outside of function\");\n      next();\n\n      // In `return` (and `break`/`continue`), the keywords with\n      // optional arguments, we eagerly look for a semicolon or the\n      // possibility to insert one.\n\n      if (eat(_semi) || canInsertSemicolon()) node.argument = null;\n      else { node.argument = parseExpression(); semicolon(); }\n      return finishNode(node, \"ReturnStatement\");\n\n    case _switch:\n      next();\n      node.discriminant = parseParenExpression();\n      node.cases = [];\n      expect(_braceL);\n      labels.push(switchLabel);\n\n      // Statements under must be grouped (by label) in SwitchCase\n      // nodes. `cur` is used to keep the node that we are currently\n      // adding statements to.\n\n      for (var cur, sawDefault; tokType != _braceR;) {\n        if (tokType === _case || tokType === _default) {\n          var isCase = tokType === _case;\n          if (cur) finishNode(cur, \"SwitchCase\");\n          node.cases.push(cur = startNode());\n          cur.consequent = [];\n          next();\n          if (isCase) cur.test = parseExpression();\n          else {\n            if (sawDefault) raise(lastStart, \"Multiple default clauses\"); sawDefault = true;\n            cur.test = null;\n          }\n          expect(_colon);\n        } else {\n          if (!cur) unexpected();\n          cur.consequent.push(parseStatement());\n        }\n      }\n      if (cur) finishNode(cur, \"SwitchCase\");\n      next(); // Closing brace\n      labels.pop();\n      return finishNode(node, \"SwitchStatement\");\n\n    case _throw:\n      next();\n      if (newline.test(input.slice(lastEnd, tokStart)))\n        raise(lastEnd, \"Illegal newline after throw\");\n      node.argument = parseExpression();\n      semicolon();\n      return finishNode(node, \"ThrowStatement\");\n\n    case _try:\n      next();\n      node.block = parseBlock();\n      node.handler = null;\n      if (tokType === _catch) {\n        var clause = startNode();\n        next();\n        expect(_parenL);\n        clause.param = parseIdent();\n        if (strict && isStrictBadIdWord(clause.param.name))\n          raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\n        expect(_parenR);\n        clause.guard = null;\n        clause.body = parseBlock();\n        node.handler = finishNode(clause, \"CatchClause\");\n      }\n      node.guardedHandlers = empty;\n      node.finalizer = eat(_finally) ? parseBlock() : null;\n      if (!node.handler && !node.finalizer)\n        raise(node.start, \"Missing catch or finally clause\");\n      return finishNode(node, \"TryStatement\");\n\n    case _var:\n      next();\n      parseVar(node);\n      semicolon();\n      return finishNode(node, \"VariableDeclaration\");\n\n    case _while:\n      next();\n      node.test = parseParenExpression();\n      labels.push(loopLabel);\n      node.body = parseStatement();\n      labels.pop();\n      return finishNode(node, \"WhileStatement\");\n\n    case _with:\n      if (strict) raise(tokStart, \"'with' in strict mode\");\n      next();\n      node.object = parseParenExpression();\n      node.body = parseStatement();\n      return finishNode(node, \"WithStatement\");\n\n    case _braceL:\n      return parseBlock();\n\n    case _semi:\n      next();\n      return finishNode(node, \"EmptyStatement\");\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n\n    default:\n      var maybeName = tokVal, expr = parseExpression();\n      if (starttype === _name && expr.type === \"Identifier\" && eat(_colon)) {\n        for (var i = 0; i < labels.length; ++i)\n          if (labels[i].name === maybeName) raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n        var kind = tokType.isLoop ? \"loop\" : tokType === _switch ? \"switch\" : null;\n        labels.push({name: maybeName, kind: kind});\n        node.body = parseStatement();\n        labels.pop();\n        node.label = expr;\n        return finishNode(node, \"LabeledStatement\");\n      } else {\n        node.expression = expr;\n        semicolon();\n        return finishNode(node, \"ExpressionStatement\");\n      }\n    }\n  }\n\n  // Used for constructs like `switch` and `if` that insist on\n  // parentheses around their expression.\n\n  function parseParenExpression() {\n    expect(_parenL);\n    var val = parseExpression();\n    expect(_parenR);\n    return val;\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  function parseBlock(allowStrict) {\n    var node = startNode(), first = true, strict = false, oldStrict;\n    node.body = [];\n    expect(_braceL);\n    while (!eat(_braceR)) {\n      var stmt = parseStatement();\n      node.body.push(stmt);\n      if (first && allowStrict && isUseStrict(stmt)) {\n        oldStrict = strict;\n        setStrict(strict = true);\n      }\n      first = false;\n    }\n    if (strict && !oldStrict) setStrict(false);\n    return finishNode(node, \"BlockStatement\");\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  function parseFor(node, init) {\n    node.init = init;\n    expect(_semi);\n    node.test = tokType === _semi ? null : parseExpression();\n    expect(_semi);\n    node.update = tokType === _parenR ? null : parseExpression();\n    expect(_parenR);\n    node.body = parseStatement();\n    labels.pop();\n    return finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` loop.\n\n  function parseForIn(node, init) {\n    node.left = init;\n    node.right = parseExpression();\n    expect(_parenR);\n    node.body = parseStatement();\n    labels.pop();\n    return finishNode(node, \"ForInStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  function parseVar(node, noIn) {\n    node.declarations = [];\n    node.kind = \"var\";\n    for (;;) {\n      var decl = startNode();\n      decl.id = parseIdent();\n      if (strict && isStrictBadIdWord(decl.id.name))\n        raise(decl.id.start, \"Binding \" + decl.id.name + \" in strict mode\");\n      decl.init = eat(_eq) ? parseExpression(true, noIn) : null;\n      node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\n      if (!eat(_comma)) break;\n    }\n    return node;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The arguments are used to forbid comma\n  // sequences (in argument lists, array literals, or object literals)\n  // or the `in` operator (in for loops initalization expressions).\n\n  function parseExpression(noComma, noIn) {\n    var expr = parseMaybeAssign(noIn);\n    if (!noComma && tokType === _comma) {\n      var node = startNodeFrom(expr);\n      node.expressions = [expr];\n      while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\n      return finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  function parseMaybeAssign(noIn) {\n    var left = parseMaybeConditional(noIn);\n    if (tokType.isAssign) {\n      var node = startNodeFrom(left);\n      node.operator = tokVal;\n      node.left = left;\n      next();\n      node.right = parseMaybeAssign(noIn);\n      checkLVal(left);\n      return finishNode(node, \"AssignmentExpression\");\n    }\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  function parseMaybeConditional(noIn) {\n    var expr = parseExprOps(noIn);\n    if (eat(_question)) {\n      var node = startNodeFrom(expr);\n      node.test = expr;\n      node.consequent = parseExpression(true);\n      expect(_colon);\n      node.alternate = parseExpression(true, noIn);\n      return finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n\n  function parseExprOps(noIn) {\n    return parseExprOp(parseMaybeUnary(), -1, noIn);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  function parseExprOp(left, minPrec, noIn) {\n    var prec = tokType.binop;\n    if (prec != null && (!noIn || tokType !== _in)) {\n      if (prec > minPrec) {\n        var node = startNodeFrom(left);\n        node.left = left;\n        node.operator = tokVal;\n        var op = tokType;\n        next();\n        node.right = parseExprOp(parseMaybeUnary(), prec, noIn);\n        var exprNode = finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\n        return parseExprOp(exprNode, minPrec, noIn);\n      }\n    }\n    return left;\n  }\n\n  // Parse unary operators, both prefix and postfix.\n\n  function parseMaybeUnary() {\n    if (tokType.prefix) {\n      var node = startNode(), update = tokType.isUpdate;\n      node.operator = tokVal;\n      node.prefix = true;\n      tokRegexpAllowed = true;\n      next();\n      node.argument = parseMaybeUnary();\n      if (update) checkLVal(node.argument);\n      else if (strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        raise(node.start, \"Deleting local variable in strict mode\");\n      return finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    }\n    var expr = parseExprSubscripts();\n    while (tokType.postfix && !canInsertSemicolon()) {\n      var node = startNodeFrom(expr);\n      node.operator = tokVal;\n      node.prefix = false;\n      node.argument = expr;\n      checkLVal(expr);\n      next();\n      expr = finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  function parseExprSubscripts() {\n    return parseSubscripts(parseExprAtom());\n  }\n\n  function parseSubscripts(base, noCalls) {\n    if (eat(_dot)) {\n      var node = startNodeFrom(base);\n      node.object = base;\n      node.property = parseIdent(true);\n      node.computed = false;\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n    } else if (eat(_bracketL)) {\n      var node = startNodeFrom(base);\n      node.object = base;\n      node.property = parseExpression();\n      node.computed = true;\n      expect(_bracketR);\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n    } else if (!noCalls && eat(_parenL)) {\n      var node = startNodeFrom(base);\n      node.callee = base;\n      node.arguments = parseExprList(_parenR, false);\n      return parseSubscripts(finishNode(node, \"CallExpression\"), noCalls);\n    } else return base;\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  function parseExprAtom() {\n    switch (tokType) {\n    case _this:\n      var node = startNode();\n      next();\n      return finishNode(node, \"ThisExpression\");\n    case _name:\n      return parseIdent();\n    case _num: case _string: case _regexp:\n      var node = startNode();\n      node.value = tokVal;\n      node.raw = input.slice(tokStart, tokEnd);\n      next();\n      return finishNode(node, \"Literal\");\n\n    case _null: case _true: case _false:\n      var node = startNode();\n      node.value = tokType.atomValue;\n      node.raw = tokType.keyword;\n      next();\n      return finishNode(node, \"Literal\");\n\n    case _parenL:\n      var tokStartLoc1 = tokStartLoc, tokStart1 = tokStart;\n      next();\n      var val = parseExpression();\n      val.start = tokStart1;\n      val.end = tokEnd;\n      if (options.locations) {\n        val.loc.start = tokStartLoc1;\n        val.loc.end = tokEndLoc;\n      }\n      if (options.ranges)\n        val.range = [tokStart1, tokEnd];\n      expect(_parenR);\n      return val;\n\n    case _bracketL:\n      var node = startNode();\n      next();\n      node.elements = parseExprList(_bracketR, true, true);\n      return finishNode(node, \"ArrayExpression\");\n\n    case _braceL:\n      return parseObj();\n\n    case _function:\n      var node = startNode();\n      next();\n      return parseFunction(node, false);\n\n    case _new:\n      return parseNew();\n\n    default:\n      unexpected();\n    }\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument\n  // to be a `[]` or dot subscript expression, but not a call — at\n  // least, not without wrapping it in parentheses. Thus, it uses the\n\n  function parseNew() {\n    var node = startNode();\n    next();\n    node.callee = parseSubscripts(parseExprAtom(), true);\n    if (eat(_parenL)) node.arguments = parseExprList(_parenR, false);\n    else node.arguments = empty;\n    return finishNode(node, \"NewExpression\");\n  }\n\n  // Parse an object literal.\n\n  function parseObj() {\n    var node = startNode(), first = true, sawGetSet = false;\n    node.properties = [];\n    next();\n    while (!eat(_braceR)) {\n      if (!first) {\n        expect(_comma);\n        if (options.allowTrailingCommas && eat(_braceR)) break;\n      } else first = false;\n\n      var prop = {key: parsePropertyName()}, isGetSet = false, kind;\n      if (eat(_colon)) {\n        prop.value = parseExpression(true);\n        kind = prop.kind = \"init\";\n      } else if (prop.key.type === \"Identifier\" &&\n                 (prop.key.name === \"get\" || prop.key.name === \"set\")) {\n        isGetSet = sawGetSet = true;\n        kind = prop.kind = prop.key.name;\n        prop.key = parsePropertyName();\n        if (tokType !== _parenL) unexpected();\n        prop.value = parseFunction(startNode(), false);\n      } else unexpected();\n\n      // getters and setters are not allowed to clash — either with\n      // each other or with an init property — and in strict mode,\n      // init properties are also not allowed to be repeated.\n\n      if (prop.key.type === \"Identifier\" && (strict || sawGetSet)) {\n        for (var i = 0; i < node.properties.length; ++i) {\n          var other = node.properties[i];\n          if (other.key.name === prop.key.name) {\n            var conflict = kind == other.kind || isGetSet && other.kind === \"init\" ||\n              kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\n            if (conflict && !strict && kind === \"init\" && other.kind === \"init\") conflict = false;\n            if (conflict) raise(prop.key.start, \"Redefinition of property\");\n          }\n        }\n      }\n      node.properties.push(prop);\n    }\n    return finishNode(node, \"ObjectExpression\");\n  }\n\n  function parsePropertyName() {\n    if (tokType === _num || tokType === _string) return parseExprAtom();\n    return parseIdent(true);\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  function parseFunction(node, isStatement) {\n    if (tokType === _name) node.id = parseIdent();\n    else if (isStatement) unexpected();\n    else node.id = null;\n    node.params = [];\n    var first = true;\n    expect(_parenL);\n    while (!eat(_parenR)) {\n      if (!first) expect(_comma); else first = false;\n      node.params.push(parseIdent());\n    }\n\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = inFunction, oldLabels = labels;\n    inFunction = true; labels = [];\n    node.body = parseBlock(true);\n    inFunction = oldInFunc; labels = oldLabels;\n\n    // If this is a strict mode function, verify that argument names\n    // are not repeated, and it does not try to bind the words `eval`\n    // or `arguments`.\n    if (strict || node.body.body.length && isUseStrict(node.body.body[0])) {\n      for (var i = node.id ? -1 : 0; i < node.params.length; ++i) {\n        var id = i < 0 ? node.id : node.params[i];\n        if (isStrictReservedWord(id.name) || isStrictBadIdWord(id.name))\n          raise(id.start, \"Defining '\" + id.name + \"' in strict mode\");\n        if (i >= 0) for (var j = 0; j < i; ++j) if (id.name === node.params[j].name)\n          raise(id.start, \"Argument name clash in strict mode\");\n      }\n    }\n\n    return finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\n    var elts = [], first = true;\n    while (!eat(close)) {\n      if (!first) {\n        expect(_comma);\n        if (allowTrailingComma && options.allowTrailingCommas && eat(close)) break;\n      } else first = false;\n\n      if (allowEmpty && tokType === _comma) elts.push(null);\n      else elts.push(parseExpression(true));\n    }\n    return elts;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  function parseIdent(liberal) {\n    var node = startNode();\n    if (liberal && options.forbidReserved == \"everywhere\") liberal = false;\n    if (tokType === _name) {\n      if (!liberal &&\n          (options.forbidReserved && isReservedWord5(tokVal) ||\n           strict && isStrictReservedWord(tokVal)) &&\n          input.slice(tokStart, tokEnd).indexOf(\"\\\\\") == -1)\n        raise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\n      node.name = tokVal;\n    } else if (liberal && tokType.keyword) {\n      node.name = tokType.keyword;\n    } else {\n      unexpected();\n    }\n    tokRegexpAllowed = false;\n    next();\n    return finishNode(node, \"Identifier\");\n  }\n\n});\n\n\n/***/ }),\n\n/***/ \"vm\":\n/*!*********************!*\\\n  !*** external \"vm\" ***!\n  \\*********************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"vm\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n/*!*******************************!*\\\n  !*** ./src/js-interpreter.js ***!\n  \\*******************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst acorn = __webpack_require__(/*! ../original-repo/acorn */ \"./original-repo/acorn.js\");\nglobalThis.acorn = acorn;\nconst { Interpreter } = __webpack_require__(/*! ../original-repo/interpreter */ \"./original-repo/interpreter.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Interpreter);\n\n})();\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});","import Interpreter from \"js-interpreter\";\nimport { BlocklyInterface } from \"./blocklyinterface\";\n\nvar Main = function () {\n  this.blocklyInterface = new BlocklyInterface();\n  //console.log(this.blocklyInterface);\n  //this.runButton = document.getElementById(\"runButton\");\n\n  this.createEventListener = function (id, callback) {\n    document.getElementById(id).onclick = callback;\n  };\n\n  this.handleEvents = function () {\n    this.createEventListener(\"runButton\", window.runBlockCode);\n    this.createEventListener(\"stopButton\", this.stopProgram);\n  };\n};\n\n\nMain.prototype.stopProgram = function(){\n    // stops game. add later\n    //window.resetPhaser();\n    window.resetInterpreter();\n}\n\n\nMain.prototype.start = function () {\n    this.blocklyInterface.init();\n    this.handleEvents();\n};\n\n// Wait until document is finished loading before starting App\n$(document).ready(function () {\n  //console.log(\"LOADED MAIN\");\n  var main = new Main();\n  main.start();\n});\n\n/*\nvar myInterpreter = new Interpreter('6 * 7');\nmyInterpreter.run();\nalert(myInterpreter.value);\n*/\n"],"names":["indexOf","xs","item","i","length","Object_keys","obj","Object","keys","res","key","push","forEach","fn","defineProp","defineProperty","name","value","writable","enumerable","configurable","e","globals","Context","prototype","Script","exports","code","this","runInContext","context","TypeError","iframe","document","createElement","style","display","body","appendChild","win","contentWindow","wEval","eval","wExecScript","execScript","call","winKeys","removeChild","runInThisContext","runInNewContext","ctx","createContext","s","apply","slice","arguments","isContext","createScript","copy","factory","__webpack_modules__","module1","__unused_webpack_exports","__webpack_require__","Interpreter","opt_initFunc","parse_","nodeConstructor","constructor","newNode","options","ast","prop","initFunc_","paused_","polyfills_","functionCounter_","stepFunctions_","create","m","stepMatch","methodName","match","bind","globalScope","createScope","globalObject","object","join","undefined","stripLocations_","state","State","done","stateStack","run","Completion","NORMAL","BREAK","CONTINUE","RETURN","THROW","PARSE_OPTIONS","locations","ecmaVersion","READONLY_DESCRIPTOR","NONENUMERABLE_DESCRIPTOR","READONLY_NONENUMERABLE_DESCRIPTOR","NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR","VARIABLE_DESCRIPTOR","STEP_ERROR","SCOPE_REFERENCE","VALUE_IN_DESCRIPTOR","REGEXP_TIMEOUT","toStringCycles_","vm","currentInterpreter_","nativeGlobal","globalThis","WORKER_CODE","legalArrayLength","x","n","Number","NaN","legalArrayIndex","String","node","start","end","hasOwnProperty","getterStep_","setterStep_","appendCodeNumber_","sourceFile","parse","appendCode","Error","populateScope_","scope","Array","variableCache_","step","stack","type","oldInterpreterValue","nextState","endTime","Date","now","initGlobal","setProperty","Infinity","OBJECT_PROTO","FUNCTION_PROTO","initFunction","initObject","proto","OBJECT","initArray","initString","initBoolean","initNumber","initDate","initRegExp","initError","initMath","initJSON","thisInterpreter","func","createNativeFunction","_x","EvalError","parseInt","parseFloat","isNaN","isFinite","strFunctions","escape","unescape","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","wrapper","nativeFunc","str","throwException","URI_ERROR","message","FUNCTION","ARRAY","ARRAY_PROTO","REGEXP","REGEXP_PROTO","DATE","DATE_PROTO","functionCodeNumber_","identifierRegexp","var_args","argsStr","trim","args","split","test","SYNTAX_ERROR","createFunction","id","illegalConstructor","class","thisArg","func_","funcThis_","arguments_","arrayPseudoToNative","TYPE_ERROR","doneExec_","setNativeFunctionPrototype","valueOf","calledWithNew","createObjectProto","box","getPrototype","data","throwIfNullUndefined","props","properties","arrayNativeToPseudo","getOwnPropertyNames","descriptor","preventExtensions","getOwnPropertyDescriptor","getter","setter","pseudoDescriptor","Boolean","toString","propertyIsEnumerable","newArray","createArray","first","RANGE_ERROR","STRING","fromCharCode","functions","compareString","locales","pseudoToNative","localeCompare","ERROR","separator","limit","callback","string","isa","maybeThrowRegExp","sandbox","jsList","vmCall","splitWorker","createWorker","pid","regExpTimeout","onmessage","clearTimeout","postMessage","setAsyncFunctionPrototype","regexp","RegExp","matchWorker","search","searchWorker","substr","newSubstr","replaceWorker","replace","BOOLEAN","NUMBER","numConsts","fractionDigits","toExponential","digits","toFixed","precision","toPrecision","radix","toLocaleString","_value","concat","from","Function","UTC","date","pattern","flags","rgx","nativeRegExp","populateRegExp","lastIndex","getProperty","exec","matchToPseudo","execWorker","thisPseudoRegExp","result","index","input","opt_message","newError","createObject","populateError","createErrorSubclass","EVAL_ERROR","REFERENCE_ERROR","myMath","mathConsts","Math","numFunctions","myJSON","text","nativeObj","JSON","nativeToPseudo","replacer","space","filter","word","stringify","child","pseudoRegexp","nativeRegexp","source","global","ignoreCase","multiline","pseudoError","tracebackData","datumName","datumLoc","stackString","loc","locString","blob","blob_","Blob","Worker","URL","createObjectURL","timeout","_e","ok","worker","setTimeout","terminate","array","createFunctionBase_","argumentLength","isConstructor","opt_name","parentScope","createAsyncFunction","asyncFunc","pseudoDate","map","isArray","pseudoArray","pseudoObj","opt_cycles","cycles","pseudo","native","len","hasProperty","val","pop","nativeArray","charCodeAt","opt_descriptor","strict","getScope","max","get","placeholderGet_","set","placeholderSet_","ReferenceError","defObj","firstNode","expression","Scope","createSpecialScope","opt_object","getValueFromScope","prevNode","setValueToScope","variableCache","nodeClass","childCache","getValue","ref","setValue","errorClass","error","unwind","label","loop","cv","labels","isLoop","isSwitch","realError","errorTable","RangeError","SyntaxError","URIError","createGetter_","left","funcThis","doneCallee_","doneArgs_","createSetter_","boxThis_","getGlobalScope","getStateStack","setStateStack","newStack","Value","strs","maxLength","truncated","elements","n_","array_","doneLeft_","components","doneRight_","leftReference_","doneGetter_","leftValue_","leftValue","destinationName","doneSetter_","setterValue_","rightValue","evalCodeNumber_","directEval_","funcNode","paramName","paramValue","argsList","evalNode","argLength","argsWithCallback","done_","throwValue","mode","mode_","test_","doneInit_","doneObject_","variable_","object_","visited_","name_","gotPropName","props_","shift","doneVariable_","propName","doneProperty_","property","properties_","kinds","switchValue_","defaultCase_","index_","switchCase","matched_","tested_","doneBlock_","doneHandler_","doneFinalizer_","leftSide_","changeValue","returnValue","declarations","declarationNode","init_","doneBody_","inputLen","version","inpt","opts","setOptions","initTokenState","parseTopLevel","program","defaultOptions","strictSemicolons","allowTrailingCommas","forbidReserved","allowReturnOutsideFunction","onComment","ranges","directSourceFile","opt","tokPos","tokStart","tokEnd","tokStartLoc","tokEndLoc","tokType","tokVal","tokRegexpAllowed","tokCurLine","tokLineStart","lastStart","lastEnd","lastEndLoc","inFunction","getLineInfo","offset","line","cur","lineBreak","column","raise","pos","err","raisedAt","tokenize","t","getToken","forceRegexp","readToken","startLoc","endLoc","jumpTo","reAllowed","skipSpace","empty","_num","_regexp","_string","_name","_eof","_break","keyword","_case","beforeExpr","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_while","_with","_new","_this","_null","atomValue","_true","_false","_in","binop","keywordTypes","break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","true","false","new","in","instanceof","typeof","prefix","void","delete","_bracketL","_bracketR","_braceL","_braceR","_parenL","_parenR","_comma","_semi","_colon","_dot","_question","_slash","_eq","isAssign","_assign","_incDec","postfix","isUpdate","_prefix","_logicalOR","_logicalAND","_bitwiseOR","_bitwiseXOR","_bitwiseAND","_equality","_relational","_bitShift","_plusMin","_multiplyModulo","kw","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","slash","eq","eof","num","makePredicate","words","containsEsc","isReservedWord5","isStrictReservedWord","isStrictBadIdWord","isKeyword","nonASCIIwhitespace","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","newline","isIdentifierStart","isIdentifierChar","line_loc_t","finishToken","skipBlockComment","skipLineComment","ch","next","readToken_dot","readNumber","readToken_slash","readRegexp","finishOp","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","size","readToken_eq_excl","getTokenFromCode","readHexNumber","readString","readWord","tok","escaped","inClass","charAt","content","mods","readWord1","readInt","total","startsWithDot","isFloat","octal","quote","out","readHexChar","esc","escStr","setStrict","strct","lastIndexOf","node_t","node_loc_t","startNode","range","startNodeFrom","other","finishNode","isUseStrict","stmt","eat","canInsertSemicolon","semicolon","unexpected","expect","checkLVal","expr","parseStatement","loopLabel","kind","switchLabel","starttype","isBreak","parseIdent","lab","parseParenExpression","parseFor","init","parseVar","parseForIn","parseExpression","parseFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","block","parseBlock","handler","clause","param","guard","guardedHandlers","finalizer","maybeName","allowStrict","oldStrict","update","right","noIn","decl","noComma","parseMaybeAssign","expressions","parseMaybeConditional","operator","parseExprOps","parseExprOp","parseMaybeUnary","minPrec","prec","op","parseExprSubscripts","parseSubscripts","parseExprAtom","base","noCalls","computed","callee","parseExprList","raw","tokStartLoc1","tokStart1","parseObj","parseNew","sawGetSet","parsePropertyName","isGetSet","conflict","isStatement","params","oldInFunc","oldLabels","j","close","allowTrailingComma","allowEmpty","elts","liberal","mod","parcelRequire","__webpack_module_cache__","moduleId","cachedModule","d","definition","o","r","Symbol","toStringTag","__webpack_exports__","__WEBPACK_DEFAULT_EXPORT__","acorn","$222ce1e6407c114d$exports","$089c40fcbb903d20$var$Main","blocklyInterface","$kcj9K","BlocklyInterface","createEventListener","getElementById","onclick","handleEvents","window","runBlockCode","stopProgram","resetInterpreter","$","ready"],"version":3,"file":"index.a3c02443.js.map"}